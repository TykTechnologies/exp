name: "Create Tags Across Repositories"

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to create tag from'
        required: true
        default: 'master'
      tag_name:
        description: 'Tag name to create'
        required: true
      tag_message:
        description: 'Tag message (optional)'
        required: false
      # Repository checkboxes
      tyk_core_products:
        description: 'Create tag for tyk, tyk-analytics, and tyk-analytics-ui'
        required: false
        default: false
        type: boolean
      tyk_sink:
        description: 'Create tag for tyk-sink'
        required: false
        default: false
        type: boolean
      tyk_sync_internal:
        description: 'Create tag for tyk-sync-internal'
        required: false
        default: false
        type: boolean
      tyk_operator_internal:
        description: 'Create tag for tyk-operator-internal'
        required: false
        default: false
        type: boolean
      tyk_charts:
        description: 'Create tag for tyk-charts'
        required: false
        default: false
        type: boolean
      portal:
        description: 'Create tag for portal'
        required: false
        default: false
        type: boolean
      tyk_pump:
        description: 'Create tag for tyk-pump'
        required: false
        default: false
        type: boolean

jobs:
  create-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build repository list
        id: build-repo-list
        run: |
          # Initialize empty array
          REPOS=()
          
          # Add repositories based on checkbox selections
          if [[ "${{ github.event.inputs.tyk_core_products }}" == "true" ]]; then
            REPOS+=("tyk")
            REPOS+=("tyk-analytics")
            REPOS+=("tyk-analytics-ui")
          fi
          if [[ "${{ github.event.inputs.tyk_sink }}" == "true" ]]; then
            REPOS+=("tyk-sink")
          fi
          if [[ "${{ github.event.inputs.tyk_sync_internal }}" == "true" ]]; then
            REPOS+=("tyk-sync-internal")
          fi
          if [[ "${{ github.event.inputs.tyk_operator_internal }}" == "true" ]]; then
            REPOS+=("tyk-operator-internal")
          fi
          if [[ "${{ github.event.inputs.tyk_charts }}" == "true" ]]; then
            REPOS+=("tyk-charts")
          fi
          if [[ "${{ github.event.inputs.portal }}" == "true" ]]; then
            REPOS+=("portal")
          fi
          if [[ "${{ github.event.inputs.tyk_pump }}" == "true" ]]; then
            REPOS+=("tyk-pump")
          fi
          
          # Convert array to JSON
          JSON_ARRAY=$(printf '%s\n' "${REPOS[@]}" | jq -R . | jq -s .)
          echo "repositories=$JSON_ARRAY" >> $GITHUB_OUTPUT
          
          # Create a comma-separated list for display
          REPOS_CSV=$(IFS=,; echo "${REPOS[*]}")
          echo "repositories_csv=$REPOS_CSV" >> $GITHUB_OUTPUT
          
          # Check if any repositories were selected
          if [ ${#REPOS[@]} -eq 0 ]; then
            echo "::error::No repositories selected. Please select at least one repository."
            exit 1
          fi

      - name: Create tags
        env:
          GH_TOKEN: ${{ secrets.ORG_GH_TOKEN }}
          SOURCE_BRANCH: ${{ github.event.inputs.source_branch }}
          TAG_NAME: ${{ github.event.inputs.tag_name }}
          TAG_MESSAGE: ${{ github.event.inputs.tag_message }}
        run: |
          # Get repositories as JSON array
          REPOSITORIES='${{ steps.build-repo-list.outputs.repositories }}'
          
          # Loop through each repository
          echo $REPOSITORIES | jq -c '.[]' | while read -r repo; do
            # Remove quotes from repo name
            repo=$(echo $repo | tr -d '"')
            echo "Creating tag for repository: $repo"
            
            # Check if repository exists
            if gh repo view "TykTechnologies/$repo" &>/dev/null; then
              # Create tag
              if [ -z "$TAG_MESSAGE" ]; then
                # Create lightweight tag
                gh api \
                  --method POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  /repos/TykTechnologies/$repo/git/refs \
                  -f ref="refs/tags/$TAG_NAME" \
                  -f sha=$(gh api /repos/TykTechnologies/$repo/git/refs/heads/$SOURCE_BRANCH --jq .object.sha)
              else
                # Create annotated tag
                # First create tag object
                TAG_SHA=$(gh api \
                  --method POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  /repos/TykTechnologies/$repo/git/tags \
                  -f tag="$TAG_NAME" \
                  -f message="$TAG_MESSAGE" \
                  -f object=$(gh api /repos/TykTechnologies/$repo/git/refs/heads/$SOURCE_BRANCH --jq .object.sha) \
                  -f type="commit" \
                  --jq .sha)
                
                # Then create reference to the tag
                gh api \
                  --method POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  /repos/TykTechnologies/$repo/git/refs \
                  -f ref="refs/tags/$TAG_NAME" \
                  -f sha="$TAG_SHA"
              fi
              
              echo "‚úÖ Successfully created tag $TAG_NAME for $repo"
            else
              echo "‚ùå Repository $repo does not exist or you don't have access to it"
            fi
          done

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "üè∑Ô∏è Tags created for selected repositories",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üè∑Ô∏è Tags Created",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Source Branch:*\n${{ github.event.inputs.source_branch }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tag Name:*\n${{ github.event.inputs.tag_name }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repositories:*\n${{ steps.build-repo-list.outputs.repositories_csv }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.UI_SLACK_AUTH_TOKEN }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK