# yamllint disable rule:line-length
---
name: Modcheck

# This action runs modcheck to produce an automated upgrade PR.
# It holds some packages back due to the grep rules below in the modcheck_upgrade step.
# It will attempt to open a PR with the automated upgrades.

run-name: '[${{ inputs.jira }}] ${{ inputs.repository }}: ${{ github.actor }} running modcheck'

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      jira:
        description: JIRA ID (MM-NNNN or permalink)
        required: true
        default: ''
      repository:
        description: 'Release version'
        type: choice
        options:
          - 'TykTechnologies/tyk'
          - 'TykTechnologies/tyk-analytics'

jobs:
  sanitize:
    name: Sanitize inputs
    runs-on: ubuntu-latest
    outputs:
      jira: ${{ steps.collect.outputs.jira }}
    steps:
      - name: Sanitize JIRA input
        id: collect
        run: |
          jira=$(echo '${{ github.event.inputs.jira }}' | sed -e 's/?.*//g' | xargs -n1 basename)
          if [ "$jira" == *"-"* ]; then
             echo "No valid JIRA ID found (no dash in JIRA ID)"
             exit 1
          fi
          echo "jira=$jira" >> $GITHUB_OUTPUT

  modcheck:
    runs-on: ubuntu-latest
    needs: [sanitize]

    steps:
      - name: Checkout PR
        uses: TykTechnologies/exp/.github/actions/checkout-pr@main
        with:
          token: ${{ secrets.ORG_GH_TOKEN }}

      - name: Set up env
        run: |
             echo "jira=${{ needs.sanitize.outputs.jira }}" >> $GITHUB_ENV

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: 'Extract tykio/ci-tools:latest'
        uses: shrink/actions-docker-extract@v3
        with:
          image: tykio/ci-tools:latest
          path: /usr/local/bin/.
          destination: /usr/local/bin

      # Build and install modcheck
      - working-directory: ./cmd/modcheck
        run: task

      - name: Checkout Tyk Gateway
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          token: ${{ secrets.ORG_GH_TOKEN }}
          branch: master
          path: ./tyk

      - working-directory: ./tyk
        run: go mod download

      - working-directory: ./tyk
        id: modcheck
        run: |
          modcheck | tee -a /tmp/modcheck.md

          echo 'report<<EOF' >> $GITHUB_OUTPUT
          cat /tmp/modcheck.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - working-directory: ./tyk
        id: modcheck_upgrade
        run: |
          modcheck -suggest | grep -v -E '(github.com/newrelic|go.opentelemetry.io/|github.com/getkin/kin-openapi)' | sh -x 2>&1 | tee -a /tmp/modcheck.log

          echo 'report<<EOF' >> $GITHUB_OUTPUT
          cat /tmp/modcheck.log >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - working-directory: ./tyk
        id: mod_tidy
        run: |
          GOTOOLCHAIN=local go mod tidy 2>&1 | tee -a /tmp/go-mod.txt

          echo 'report<<EOF' >> $GITHUB_OUTPUT
          cat /tmp/go-mod.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Raise PR in Gateway
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.ORG_GH_TOKEN }}
          commit-message: Import updated go.mod/go.sum
          title: '[${{ env.jira }}] exp/modcheck: Update go.mod dependencies'
          body: |
            Triggered by: ${{ github.actor }}

            ${{ steps.modcheck.outputs.report }}

            Steps performed:

            ~~~
            ${{ steps.modcheck_upgrade.outputs.report }}
            ~~~

            Mod tidy output:

            ```
            ${{ steps.mod_tidy.outputs.report }}
            ```

            JIRA: https://tyktech.atlassian.net/browse/${{ env.jira }}
          branch: update/${{ env.jira }}/update-go-mod-dependencies
          path: ./tyk
          delete-branch: true
