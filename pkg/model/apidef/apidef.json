{
  "imports": [
    "\"errors\"",
    "\"fmt\"",
    "\"net\"",
    "\"sort\"",
    "\"strings\"",
    "\"encoding/base64\"",
    "\"encoding/json\"",
    "\"encoding/xml\"",
    "\"errors\"",
    "\"net/http\"",
    "\"text/template\"",
    "\"time\"",
    "\"github.com/TykTechnologies/storage/persistent/model\"",
    "\"github.com/clbanning/mxj\"",
    "\"github.com/lonelycode/osin\"",
    "\"github.com/TykTechnologies/graphql-go-tools/pkg/engine/datasource/kafka_datasource\"",
    "\"github.com/TykTechnologies/graphql-go-tools/pkg/execution/datasource\"",
    "\"github.com/TykTechnologies/gojsonschema\"",
    "\"github.com/TykTechnologies/tyk/regexp\"",
    "\"errors\"",
    "\"sync\"",
    "\"errors\"",
    "\"net/http\"",
    "\"net/url\"",
    "\"sort\"",
    "\"strings\"",
    "\"bytes\"",
    "\"encoding/json\"",
    "\"io/ioutil\"",
    "\"net\"",
    "\"net/http\"",
    "\"time\"",
    "logger \"github.com/TykTechnologies/tyk/log\""
  ],
  "declarations": [
    {
      "types": [
        {
          "name": "ValidationResult",
          "fields": [
            {
              "name": "IsValid",
              "type": "bool",
              "path": "ValidationResult.IsValid",
              "tag": "",
              "json_name": "IsValid"
            },
            {
              "name": "Errors",
              "type": "[]error",
              "path": "ValidationResult.Errors",
              "tag": "",
              "json_name": "Errors"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ValidationRuleSet",
          "type": "[]ValidationRule"
        }
      ]
    },
    {
      "types": [
        {
          "name": "ValidationRule"
        }
      ]
    },
    {
      "types": [
        {
          "name": "RuleUniqueDataSourceNames"
        }
      ]
    },
    {
      "types": [
        {
          "name": "RuleAtLeastEnableOneAuthSource"
        }
      ]
    },
    {
      "types": [
        {
          "name": "RuleValidateIPList"
        }
      ]
    },
    {
      "types": [
        {
          "name": "AuthProviderCode",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "SessionProviderCode",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "StorageEngineCode",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "TykEvent",
          "comment": "A type so we can ENUM event types easily, e.g. EventQuotaExceeded",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "TykEventHandlerName",
          "comment": "A type for handler codes in API definitions",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "EndpointMethodAction",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "SourceMode",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "MiddlewareDriver",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "IdExtractorSource",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "IdExtractorType",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "AuthTypeEnum",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "RoutingTriggerOnType",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "SubscriptionType",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "IDExtractor"
        }
      ]
    },
    {
      "types": [
        {
          "name": "EndpointMethodMeta",
          "fields": [
            {
              "name": "Action",
              "type": "EndpointMethodAction",
              "path": "EndpointMethodMeta.Action",
              "tag": "bson:\"action\" json:\"action\"",
              "json_name": "action"
            },
            {
              "name": "Code",
              "type": "int",
              "path": "EndpointMethodMeta.Code",
              "tag": "bson:\"code\" json:\"code\"",
              "json_name": "code"
            },
            {
              "name": "Data",
              "type": "string",
              "path": "EndpointMethodMeta.Data",
              "tag": "bson:\"data\" json:\"data\"",
              "json_name": "data"
            },
            {
              "name": "Headers",
              "type": "map[string]string",
              "path": "EndpointMethodMeta.Headers",
              "tag": "bson:\"headers\" json:\"headers\"",
              "json_name": "headers"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "MockResponseMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "MockResponseMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "MockResponseMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "MockResponseMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "IgnoreCase",
              "type": "bool",
              "path": "MockResponseMeta.IgnoreCase",
              "tag": "bson:\"ignore_case\" json:\"ignore_case\"",
              "json_name": "ignore_case"
            },
            {
              "name": "Code",
              "type": "int",
              "path": "MockResponseMeta.Code",
              "tag": "bson:\"code\" json:\"code\"",
              "json_name": "code"
            },
            {
              "name": "Body",
              "type": "string",
              "path": "MockResponseMeta.Body",
              "tag": "bson:\"body\" json:\"body\"",
              "json_name": "body"
            },
            {
              "name": "Headers",
              "type": "map[string]string",
              "path": "MockResponseMeta.Headers",
              "tag": "bson:\"headers\" json:\"headers\"",
              "json_name": "headers"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "EndPointMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "EndPointMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "EndPointMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "EndPointMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "IgnoreCase",
              "type": "bool",
              "path": "EndPointMeta.IgnoreCase",
              "tag": "bson:\"ignore_case\" json:\"ignore_case\"",
              "json_name": "ignore_case"
            },
            {
              "name": "MethodActions",
              "type": "map[string]EndpointMethodMeta",
              "path": "EndPointMeta.MethodActions",
              "doc": "Deprecated. Use Method instead.",
              "tag": "bson:\"method_actions,omitempty\" json:\"method_actions,omitempty\"",
              "json_name": "method_actions,omitempty"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "CacheMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "CacheMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "CacheMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "CacheMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "CacheKeyRegex",
              "type": "string",
              "path": "CacheMeta.CacheKeyRegex",
              "tag": "bson:\"cache_key_regex\" json:\"cache_key_regex\"",
              "json_name": "cache_key_regex"
            },
            {
              "name": "CacheOnlyResponseCodes",
              "type": "[]int",
              "path": "CacheMeta.CacheOnlyResponseCodes",
              "tag": "bson:\"cache_response_codes\" json:\"cache_response_codes\"",
              "json_name": "cache_response_codes"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "RequestInputType",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "TemplateData",
          "fields": [
            {
              "name": "Input",
              "type": "RequestInputType",
              "path": "TemplateData.Input",
              "tag": "bson:\"input_type\" json:\"input_type\"",
              "json_name": "input_type"
            },
            {
              "name": "Mode",
              "type": "SourceMode",
              "path": "TemplateData.Mode",
              "tag": "bson:\"template_mode\" json:\"template_mode\"",
              "json_name": "template_mode"
            },
            {
              "name": "EnableSession",
              "type": "bool",
              "path": "TemplateData.EnableSession",
              "tag": "bson:\"enable_session\" json:\"enable_session\"",
              "json_name": "enable_session"
            },
            {
              "name": "TemplateSource",
              "type": "string",
              "path": "TemplateData.TemplateSource",
              "tag": "bson:\"template_source\" json:\"template_source\"",
              "json_name": "template_source"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "TemplateMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "TemplateMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "TemplateData",
              "type": "TemplateData",
              "path": "TemplateMeta.TemplateData",
              "tag": "bson:\"template_data\" json:\"template_data\"",
              "json_name": "template_data"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "TemplateMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "TemplateMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "TransformJQMeta",
          "fields": [
            {
              "name": "Filter",
              "type": "string",
              "path": "TransformJQMeta.Filter",
              "tag": "bson:\"filter\" json:\"filter\"",
              "json_name": "filter"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "TransformJQMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "TransformJQMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "HeaderInjectionMeta",
          "fields": [
            {
              "name": "DeleteHeaders",
              "type": "[]string",
              "path": "HeaderInjectionMeta.DeleteHeaders",
              "tag": "bson:\"delete_headers\" json:\"delete_headers\"",
              "json_name": "delete_headers"
            },
            {
              "name": "AddHeaders",
              "type": "map[string]string",
              "path": "HeaderInjectionMeta.AddHeaders",
              "tag": "bson:\"add_headers\" json:\"add_headers\"",
              "json_name": "add_headers"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "HeaderInjectionMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "HeaderInjectionMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "ActOnResponse",
              "type": "bool",
              "path": "HeaderInjectionMeta.ActOnResponse",
              "tag": "bson:\"act_on\" json:\"act_on\"",
              "json_name": "act_on"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "HardTimeoutMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "HardTimeoutMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "HardTimeoutMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "HardTimeoutMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "TimeOut",
              "type": "int",
              "path": "HardTimeoutMeta.TimeOut",
              "tag": "bson:\"timeout\" json:\"timeout\"",
              "json_name": "timeout"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "TrackEndpointMeta",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "path": "TrackEndpointMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "TrackEndpointMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "InternalMeta",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "path": "InternalMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "InternalMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "RequestSizeMeta",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "path": "RequestSizeMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "RequestSizeMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "SizeLimit",
              "type": "int64",
              "path": "RequestSizeMeta.SizeLimit",
              "tag": "bson:\"size_limit\" json:\"size_limit\"",
              "json_name": "size_limit"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "CircuitBreakerMeta",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "path": "CircuitBreakerMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "CircuitBreakerMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "ThresholdPercent",
              "type": "float64",
              "path": "CircuitBreakerMeta.ThresholdPercent",
              "tag": "bson:\"threshold_percent\" json:\"threshold_percent\"",
              "json_name": "threshold_percent"
            },
            {
              "name": "Samples",
              "type": "int64",
              "path": "CircuitBreakerMeta.Samples",
              "tag": "bson:\"samples\" json:\"samples\"",
              "json_name": "samples"
            },
            {
              "name": "ReturnToServiceAfter",
              "type": "int",
              "path": "CircuitBreakerMeta.ReturnToServiceAfter",
              "tag": "bson:\"return_to_service_after\" json:\"return_to_service_after\"",
              "json_name": "return_to_service_after"
            },
            {
              "name": "DisableHalfOpenState",
              "type": "bool",
              "path": "CircuitBreakerMeta.DisableHalfOpenState",
              "tag": "bson:\"disable_half_open_state\" json:\"disable_half_open_state\"",
              "json_name": "disable_half_open_state"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "StringRegexMap",
          "fields": [
            {
              "name": "MatchPattern",
              "type": "string",
              "path": "StringRegexMap.MatchPattern",
              "tag": "bson:\"match_rx\" json:\"match_rx\"",
              "json_name": "match_rx"
            },
            {
              "name": "Reverse",
              "type": "bool",
              "path": "StringRegexMap.Reverse",
              "tag": "bson:\"reverse\" json:\"reverse\"",
              "json_name": "reverse"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "RoutingTriggerOptions",
          "fields": [
            {
              "name": "HeaderMatches",
              "type": "map[string]StringRegexMap",
              "path": "RoutingTriggerOptions.HeaderMatches",
              "tag": "bson:\"header_matches\" json:\"header_matches\"",
              "json_name": "header_matches"
            },
            {
              "name": "QueryValMatches",
              "type": "map[string]StringRegexMap",
              "path": "RoutingTriggerOptions.QueryValMatches",
              "tag": "bson:\"query_val_matches\" json:\"query_val_matches\"",
              "json_name": "query_val_matches"
            },
            {
              "name": "PathPartMatches",
              "type": "map[string]StringRegexMap",
              "path": "RoutingTriggerOptions.PathPartMatches",
              "tag": "bson:\"path_part_matches\" json:\"path_part_matches\"",
              "json_name": "path_part_matches"
            },
            {
              "name": "SessionMetaMatches",
              "type": "map[string]StringRegexMap",
              "path": "RoutingTriggerOptions.SessionMetaMatches",
              "tag": "bson:\"session_meta_matches\" json:\"session_meta_matches\"",
              "json_name": "session_meta_matches"
            },
            {
              "name": "RequestContextMatches",
              "type": "map[string]StringRegexMap",
              "path": "RoutingTriggerOptions.RequestContextMatches",
              "tag": "bson:\"request_context_matches\" json:\"request_context_matches\"",
              "json_name": "request_context_matches"
            },
            {
              "name": "PayloadMatches",
              "type": "StringRegexMap",
              "path": "RoutingTriggerOptions.PayloadMatches",
              "tag": "bson:\"payload_matches\" json:\"payload_matches\"",
              "json_name": "payload_matches"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "RoutingTrigger",
          "fields": [
            {
              "name": "On",
              "type": "RoutingTriggerOnType",
              "path": "RoutingTrigger.On",
              "tag": "bson:\"on\" json:\"on\"",
              "json_name": "on"
            },
            {
              "name": "Options",
              "type": "RoutingTriggerOptions",
              "path": "RoutingTrigger.Options",
              "tag": "bson:\"options\" json:\"options\"",
              "json_name": "options"
            },
            {
              "name": "RewriteTo",
              "type": "string",
              "path": "RoutingTrigger.RewriteTo",
              "tag": "bson:\"rewrite_to\" json:\"rewrite_to\"",
              "json_name": "rewrite_to"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "URLRewriteMeta",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "path": "URLRewriteMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "URLRewriteMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "MatchPattern",
              "type": "string",
              "path": "URLRewriteMeta.MatchPattern",
              "tag": "bson:\"match_pattern\" json:\"match_pattern\"",
              "json_name": "match_pattern"
            },
            {
              "name": "RewriteTo",
              "type": "string",
              "path": "URLRewriteMeta.RewriteTo",
              "tag": "bson:\"rewrite_to\" json:\"rewrite_to\"",
              "json_name": "rewrite_to"
            },
            {
              "name": "Triggers",
              "type": "[]RoutingTrigger",
              "path": "URLRewriteMeta.Triggers",
              "tag": "bson:\"triggers\" json:\"triggers\"",
              "json_name": "triggers"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "VirtualMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "VirtualMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "ResponseFunctionName",
              "type": "string",
              "path": "VirtualMeta.ResponseFunctionName",
              "tag": "bson:\"response_function_name\" json:\"response_function_name\"",
              "json_name": "response_function_name"
            },
            {
              "name": "FunctionSourceType",
              "type": "SourceMode",
              "path": "VirtualMeta.FunctionSourceType",
              "tag": "bson:\"function_source_type\" json:\"function_source_type\"",
              "json_name": "function_source_type"
            },
            {
              "name": "FunctionSourceURI",
              "type": "string",
              "path": "VirtualMeta.FunctionSourceURI",
              "tag": "bson:\"function_source_uri\" json:\"function_source_uri\"",
              "json_name": "function_source_uri"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "VirtualMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "VirtualMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "UseSession",
              "type": "bool",
              "path": "VirtualMeta.UseSession",
              "tag": "bson:\"use_session\" json:\"use_session\"",
              "json_name": "use_session"
            },
            {
              "name": "ProxyOnError",
              "type": "bool",
              "path": "VirtualMeta.ProxyOnError",
              "tag": "bson:\"proxy_on_error\" json:\"proxy_on_error\"",
              "json_name": "proxy_on_error"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "MethodTransformMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "MethodTransformMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "MethodTransformMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "MethodTransformMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "ToMethod",
              "type": "string",
              "path": "MethodTransformMeta.ToMethod",
              "tag": "bson:\"to_method\" json:\"to_method\"",
              "json_name": "to_method"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ValidatePathMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "ValidatePathMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "ValidatePathMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "ValidatePathMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "Schema",
              "type": "map[string]interface{}",
              "path": "ValidatePathMeta.Schema",
              "tag": "bson:\"-\" json:\"schema\"",
              "json_name": "schema"
            },
            {
              "name": "SchemaB64",
              "type": "string",
              "path": "ValidatePathMeta.SchemaB64",
              "tag": "bson:\"schema_b64\" json:\"schema_b64,omitempty\"",
              "json_name": "schema_b64,omitempty"
            },
            {
              "name": "ErrorResponseCode",
              "type": "int",
              "path": "ValidatePathMeta.ErrorResponseCode",
              "doc": "Allows override of default 422 Unprocessible Entity response code for validation errors.",
              "tag": "bson:\"error_response_code\" json:\"error_response_code\"",
              "json_name": "error_response_code"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ValidateRequestMeta",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "ValidateRequestMeta.Enabled",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "ValidateRequestMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "ValidateRequestMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "ErrorResponseCode",
              "type": "int",
              "path": "ValidateRequestMeta.ErrorResponseCode",
              "doc": "Allows override of default 422 Unprocessible Entity response code for validation errors.",
              "tag": "bson:\"error_response_code\" json:\"error_response_code\"",
              "json_name": "error_response_code"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "PersistGraphQLMeta",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "path": "PersistGraphQLMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "PersistGraphQLMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "Operation",
              "type": "string",
              "path": "PersistGraphQLMeta.Operation",
              "tag": "bson:\"operation\" json:\"operation\"",
              "json_name": "operation"
            },
            {
              "name": "Variables",
              "type": "map[string]interface{}",
              "path": "PersistGraphQLMeta.Variables",
              "tag": "bson:\"variables\" json:\"variables\"",
              "json_name": "variables"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GoPluginMeta",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "GoPluginMeta.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "GoPluginMeta.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "GoPluginMeta.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "PluginPath",
              "type": "string",
              "path": "GoPluginMeta.PluginPath",
              "tag": "bson:\"plugin_path\" json:\"plugin_path\"",
              "json_name": "plugin_path"
            },
            {
              "name": "SymbolName",
              "type": "string",
              "path": "GoPluginMeta.SymbolName",
              "tag": "bson:\"func_name\" json:\"func_name\"",
              "json_name": "func_name"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ExtendedPathsSet",
          "fields": [
            {
              "name": "Ignored",
              "type": "[]EndPointMeta",
              "path": "ExtendedPathsSet.Ignored",
              "tag": "bson:\"ignored\" json:\"ignored,omitempty\"",
              "json_name": "ignored,omitempty"
            },
            {
              "name": "WhiteList",
              "type": "[]EndPointMeta",
              "path": "ExtendedPathsSet.WhiteList",
              "tag": "bson:\"white_list\" json:\"white_list,omitempty\"",
              "json_name": "white_list,omitempty"
            },
            {
              "name": "BlackList",
              "type": "[]EndPointMeta",
              "path": "ExtendedPathsSet.BlackList",
              "tag": "bson:\"black_list\" json:\"black_list,omitempty\"",
              "json_name": "black_list,omitempty"
            },
            {
              "name": "MockResponse",
              "type": "[]MockResponseMeta",
              "path": "ExtendedPathsSet.MockResponse",
              "tag": "bson:\"mock_response\" json:\"mock_response,omitempty\"",
              "json_name": "mock_response,omitempty"
            },
            {
              "name": "Cached",
              "type": "[]string",
              "path": "ExtendedPathsSet.Cached",
              "tag": "bson:\"cache\" json:\"cache,omitempty\"",
              "json_name": "cache,omitempty"
            },
            {
              "name": "AdvanceCacheConfig",
              "type": "[]CacheMeta",
              "path": "ExtendedPathsSet.AdvanceCacheConfig",
              "tag": "bson:\"advance_cache_config\" json:\"advance_cache_config,omitempty\"",
              "json_name": "advance_cache_config,omitempty"
            },
            {
              "name": "Transform",
              "type": "[]TemplateMeta",
              "path": "ExtendedPathsSet.Transform",
              "tag": "bson:\"transform\" json:\"transform,omitempty\"",
              "json_name": "transform,omitempty"
            },
            {
              "name": "TransformResponse",
              "type": "[]TemplateMeta",
              "path": "ExtendedPathsSet.TransformResponse",
              "tag": "bson:\"transform_response\" json:\"transform_response,omitempty\"",
              "json_name": "transform_response,omitempty"
            },
            {
              "name": "TransformJQ",
              "type": "[]TransformJQMeta",
              "path": "ExtendedPathsSet.TransformJQ",
              "tag": "bson:\"transform_jq\" json:\"transform_jq,omitempty\"",
              "json_name": "transform_jq,omitempty"
            },
            {
              "name": "TransformJQResponse",
              "type": "[]TransformJQMeta",
              "path": "ExtendedPathsSet.TransformJQResponse",
              "tag": "bson:\"transform_jq_response\" json:\"transform_jq_response,omitempty\"",
              "json_name": "transform_jq_response,omitempty"
            },
            {
              "name": "TransformHeader",
              "type": "[]HeaderInjectionMeta",
              "path": "ExtendedPathsSet.TransformHeader",
              "tag": "bson:\"transform_headers\" json:\"transform_headers,omitempty\"",
              "json_name": "transform_headers,omitempty"
            },
            {
              "name": "TransformResponseHeader",
              "type": "[]HeaderInjectionMeta",
              "path": "ExtendedPathsSet.TransformResponseHeader",
              "tag": "bson:\"transform_response_headers\" json:\"transform_response_headers,omitempty\"",
              "json_name": "transform_response_headers,omitempty"
            },
            {
              "name": "HardTimeouts",
              "type": "[]HardTimeoutMeta",
              "path": "ExtendedPathsSet.HardTimeouts",
              "tag": "bson:\"hard_timeouts\" json:\"hard_timeouts,omitempty\"",
              "json_name": "hard_timeouts,omitempty"
            },
            {
              "name": "CircuitBreaker",
              "type": "[]CircuitBreakerMeta",
              "path": "ExtendedPathsSet.CircuitBreaker",
              "tag": "bson:\"circuit_breakers\" json:\"circuit_breakers,omitempty\"",
              "json_name": "circuit_breakers,omitempty"
            },
            {
              "name": "URLRewrite",
              "type": "[]URLRewriteMeta",
              "path": "ExtendedPathsSet.URLRewrite",
              "tag": "bson:\"url_rewrites\" json:\"url_rewrites,omitempty\"",
              "json_name": "url_rewrites,omitempty"
            },
            {
              "name": "Virtual",
              "type": "[]VirtualMeta",
              "path": "ExtendedPathsSet.Virtual",
              "tag": "bson:\"virtual\" json:\"virtual,omitempty\"",
              "json_name": "virtual,omitempty"
            },
            {
              "name": "SizeLimit",
              "type": "[]RequestSizeMeta",
              "path": "ExtendedPathsSet.SizeLimit",
              "tag": "bson:\"size_limits\" json:\"size_limits,omitempty\"",
              "json_name": "size_limits,omitempty"
            },
            {
              "name": "MethodTransforms",
              "type": "[]MethodTransformMeta",
              "path": "ExtendedPathsSet.MethodTransforms",
              "tag": "bson:\"method_transforms\" json:\"method_transforms,omitempty\"",
              "json_name": "method_transforms,omitempty"
            },
            {
              "name": "TrackEndpoints",
              "type": "[]TrackEndpointMeta",
              "path": "ExtendedPathsSet.TrackEndpoints",
              "tag": "bson:\"track_endpoints\" json:\"track_endpoints,omitempty\"",
              "json_name": "track_endpoints,omitempty"
            },
            {
              "name": "DoNotTrackEndpoints",
              "type": "[]TrackEndpointMeta",
              "path": "ExtendedPathsSet.DoNotTrackEndpoints",
              "tag": "bson:\"do_not_track_endpoints\" json:\"do_not_track_endpoints,omitempty\"",
              "json_name": "do_not_track_endpoints,omitempty"
            },
            {
              "name": "ValidateJSON",
              "type": "[]ValidatePathMeta",
              "path": "ExtendedPathsSet.ValidateJSON",
              "tag": "bson:\"validate_json\" json:\"validate_json,omitempty\"",
              "json_name": "validate_json,omitempty"
            },
            {
              "name": "ValidateRequest",
              "type": "[]ValidateRequestMeta",
              "path": "ExtendedPathsSet.ValidateRequest",
              "tag": "bson:\"validate_request\" json:\"validate_request,omitempty\"",
              "json_name": "validate_request,omitempty"
            },
            {
              "name": "Internal",
              "type": "[]InternalMeta",
              "path": "ExtendedPathsSet.Internal",
              "tag": "bson:\"internal\" json:\"internal,omitempty\"",
              "json_name": "internal,omitempty"
            },
            {
              "name": "GoPlugin",
              "type": "[]GoPluginMeta",
              "path": "ExtendedPathsSet.GoPlugin",
              "tag": "bson:\"go_plugin\" json:\"go_plugin,omitempty\"",
              "json_name": "go_plugin,omitempty"
            },
            {
              "name": "PersistGraphQL",
              "type": "[]PersistGraphQLMeta",
              "path": "ExtendedPathsSet.PersistGraphQL",
              "tag": "bson:\"persist_graphql\" json:\"persist_graphql\"",
              "json_name": "persist_graphql"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "VersionDefinition",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "VersionDefinition.Enabled",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "Name",
              "type": "string",
              "path": "VersionDefinition.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Default",
              "type": "string",
              "path": "VersionDefinition.Default",
              "tag": "bson:\"default\" json:\"default\"",
              "json_name": "default"
            },
            {
              "name": "Location",
              "type": "string",
              "path": "VersionDefinition.Location",
              "tag": "bson:\"location\" json:\"location\"",
              "json_name": "location"
            },
            {
              "name": "Key",
              "type": "string",
              "path": "VersionDefinition.Key",
              "tag": "bson:\"key\" json:\"key\"",
              "json_name": "key"
            },
            {
              "name": "StripPath",
              "type": "bool",
              "path": "VersionDefinition.StripPath",
              "comment": "Deprecated. Use StripVersioningData instead.",
              "tag": "bson:\"strip_path\" json:\"strip_path\"",
              "json_name": "strip_path"
            },
            {
              "name": "StripVersioningData",
              "type": "bool",
              "path": "VersionDefinition.StripVersioningData",
              "tag": "bson:\"strip_versioning_data\" json:\"strip_versioning_data\"",
              "json_name": "strip_versioning_data"
            },
            {
              "name": "Versions",
              "type": "map[string]string",
              "path": "VersionDefinition.Versions",
              "tag": "bson:\"versions\" json:\"versions\"",
              "json_name": "versions"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "VersionData",
          "fields": [
            {
              "name": "NotVersioned",
              "type": "bool",
              "path": "VersionData.NotVersioned",
              "tag": "bson:\"not_versioned\" json:\"not_versioned\"",
              "json_name": "not_versioned"
            },
            {
              "name": "DefaultVersion",
              "type": "string",
              "path": "VersionData.DefaultVersion",
              "tag": "bson:\"default_version\" json:\"default_version\"",
              "json_name": "default_version"
            },
            {
              "name": "Versions",
              "type": "map[string]VersionInfo",
              "path": "VersionData.Versions",
              "tag": "bson:\"versions\" json:\"versions\"",
              "json_name": "versions"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "VersionInfo",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "path": "VersionInfo.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Expires",
              "type": "string",
              "path": "VersionInfo.Expires",
              "tag": "bson:\"expires\" json:\"expires\"",
              "json_name": "expires"
            },
            {
              "name": "Paths",
              "type": "struct{}",
              "path": "VersionInfo.Paths",
              "tag": "bson:\"paths\" json:\"paths\"",
              "json_name": "paths"
            },
            {
              "name": "UseExtendedPaths",
              "type": "bool",
              "path": "VersionInfo.UseExtendedPaths",
              "tag": "bson:\"use_extended_paths\" json:\"use_extended_paths\"",
              "json_name": "use_extended_paths"
            },
            {
              "name": "ExtendedPaths",
              "type": "ExtendedPathsSet",
              "path": "VersionInfo.ExtendedPaths",
              "tag": "bson:\"extended_paths\" json:\"extended_paths\"",
              "json_name": "extended_paths"
            },
            {
              "name": "GlobalHeaders",
              "type": "map[string]string",
              "path": "VersionInfo.GlobalHeaders",
              "tag": "bson:\"global_headers\" json:\"global_headers\"",
              "json_name": "global_headers"
            },
            {
              "name": "GlobalHeadersRemove",
              "type": "[]string",
              "path": "VersionInfo.GlobalHeadersRemove",
              "tag": "bson:\"global_headers_remove\" json:\"global_headers_remove\"",
              "json_name": "global_headers_remove"
            },
            {
              "name": "GlobalResponseHeaders",
              "type": "map[string]string",
              "path": "VersionInfo.GlobalResponseHeaders",
              "tag": "bson:\"global_response_headers\" json:\"global_response_headers\"",
              "json_name": "global_response_headers"
            },
            {
              "name": "GlobalResponseHeadersRemove",
              "type": "[]string",
              "path": "VersionInfo.GlobalResponseHeadersRemove",
              "tag": "bson:\"global_response_headers_remove\" json:\"global_response_headers_remove\"",
              "json_name": "global_response_headers_remove"
            },
            {
              "name": "IgnoreEndpointCase",
              "type": "bool",
              "path": "VersionInfo.IgnoreEndpointCase",
              "tag": "bson:\"ignore_endpoint_case\" json:\"ignore_endpoint_case\"",
              "json_name": "ignore_endpoint_case"
            },
            {
              "name": "GlobalSizeLimit",
              "type": "int64",
              "path": "VersionInfo.GlobalSizeLimit",
              "tag": "bson:\"global_size_limit\" json:\"global_size_limit\"",
              "json_name": "global_size_limit"
            },
            {
              "name": "OverrideTarget",
              "type": "string",
              "path": "VersionInfo.OverrideTarget",
              "tag": "bson:\"override_target\" json:\"override_target\"",
              "json_name": "override_target"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "AuthProviderMeta",
          "fields": [
            {
              "name": "Name",
              "type": "AuthProviderCode",
              "path": "AuthProviderMeta.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "StorageEngine",
              "type": "StorageEngineCode",
              "path": "AuthProviderMeta.StorageEngine",
              "tag": "bson:\"storage_engine\" json:\"storage_engine\"",
              "json_name": "storage_engine"
            },
            {
              "name": "Meta",
              "type": "map[string]interface{}",
              "path": "AuthProviderMeta.Meta",
              "tag": "bson:\"meta\" json:\"meta\"",
              "json_name": "meta"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "SessionProviderMeta",
          "fields": [
            {
              "name": "Name",
              "type": "SessionProviderCode",
              "path": "SessionProviderMeta.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "StorageEngine",
              "type": "StorageEngineCode",
              "path": "SessionProviderMeta.StorageEngine",
              "tag": "bson:\"storage_engine\" json:\"storage_engine\"",
              "json_name": "storage_engine"
            },
            {
              "name": "Meta",
              "type": "map[string]interface{}",
              "path": "SessionProviderMeta.Meta",
              "tag": "bson:\"meta\" json:\"meta\"",
              "json_name": "meta"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "EventHandlerTriggerConfig",
          "fields": [
            {
              "name": "Handler",
              "type": "TykEventHandlerName",
              "path": "EventHandlerTriggerConfig.Handler",
              "tag": "bson:\"handler_name\" json:\"handler_name\"",
              "json_name": "handler_name"
            },
            {
              "name": "HandlerMeta",
              "type": "map[string]interface{}",
              "path": "EventHandlerTriggerConfig.HandlerMeta",
              "tag": "bson:\"handler_meta\" json:\"handler_meta\"",
              "json_name": "handler_meta"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "EventHandlerMetaConfig",
          "fields": [
            {
              "name": "Events",
              "type": "map[TykEvent]interface{}",
              "path": "EventHandlerMetaConfig.Events",
              "tag": "bson:\"events\" json:\"events\"",
              "json_name": "events"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "MiddlewareDefinition",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "MiddlewareDefinition.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "Name",
              "type": "string",
              "path": "MiddlewareDefinition.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "MiddlewareDefinition.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            },
            {
              "name": "RequireSession",
              "type": "bool",
              "path": "MiddlewareDefinition.RequireSession",
              "tag": "bson:\"require_session\" json:\"require_session\"",
              "json_name": "require_session"
            },
            {
              "name": "RawBodyOnly",
              "type": "bool",
              "path": "MiddlewareDefinition.RawBodyOnly",
              "tag": "bson:\"raw_body_only\" json:\"raw_body_only\"",
              "json_name": "raw_body_only"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "MiddlewareIdExtractor",
          "fields": [
            {
              "name": "Disabled",
              "type": "bool",
              "path": "MiddlewareIdExtractor.Disabled",
              "tag": "bson:\"disabled\" json:\"disabled\"",
              "json_name": "disabled"
            },
            {
              "name": "ExtractFrom",
              "type": "IdExtractorSource",
              "path": "MiddlewareIdExtractor.ExtractFrom",
              "tag": "bson:\"extract_from\" json:\"extract_from\"",
              "json_name": "extract_from"
            },
            {
              "name": "ExtractWith",
              "type": "IdExtractorType",
              "path": "MiddlewareIdExtractor.ExtractWith",
              "tag": "bson:\"extract_with\" json:\"extract_with\"",
              "json_name": "extract_with"
            },
            {
              "name": "ExtractorConfig",
              "type": "map[string]interface{}",
              "path": "MiddlewareIdExtractor.ExtractorConfig",
              "tag": "bson:\"extractor_config\" json:\"extractor_config\"",
              "json_name": "extractor_config"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "MiddlewareSection",
          "fields": [
            {
              "name": "Pre",
              "type": "[]MiddlewareDefinition",
              "path": "MiddlewareSection.Pre",
              "tag": "bson:\"pre\" json:\"pre\"",
              "json_name": "pre"
            },
            {
              "name": "Post",
              "type": "[]MiddlewareDefinition",
              "path": "MiddlewareSection.Post",
              "tag": "bson:\"post\" json:\"post\"",
              "json_name": "post"
            },
            {
              "name": "PostKeyAuth",
              "type": "[]MiddlewareDefinition",
              "path": "MiddlewareSection.PostKeyAuth",
              "tag": "bson:\"post_key_auth\" json:\"post_key_auth\"",
              "json_name": "post_key_auth"
            },
            {
              "name": "AuthCheck",
              "type": "MiddlewareDefinition",
              "path": "MiddlewareSection.AuthCheck",
              "tag": "bson:\"auth_check\" json:\"auth_check\"",
              "json_name": "auth_check"
            },
            {
              "name": "Response",
              "type": "[]MiddlewareDefinition",
              "path": "MiddlewareSection.Response",
              "tag": "bson:\"response\" json:\"response\"",
              "json_name": "response"
            },
            {
              "name": "Driver",
              "type": "MiddlewareDriver",
              "path": "MiddlewareSection.Driver",
              "tag": "bson:\"driver\" json:\"driver\"",
              "json_name": "driver"
            },
            {
              "name": "IdExtractor",
              "type": "MiddlewareIdExtractor",
              "path": "MiddlewareSection.IdExtractor",
              "tag": "bson:\"id_extractor\" json:\"id_extractor\"",
              "json_name": "id_extractor"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "CacheOptions",
          "fields": [
            {
              "name": "CacheTimeout",
              "type": "int64",
              "path": "CacheOptions.CacheTimeout",
              "tag": "bson:\"cache_timeout\" json:\"cache_timeout\"",
              "json_name": "cache_timeout"
            },
            {
              "name": "EnableCache",
              "type": "bool",
              "path": "CacheOptions.EnableCache",
              "tag": "bson:\"enable_cache\" json:\"enable_cache\"",
              "json_name": "enable_cache"
            },
            {
              "name": "CacheAllSafeRequests",
              "type": "bool",
              "path": "CacheOptions.CacheAllSafeRequests",
              "tag": "bson:\"cache_all_safe_requests\" json:\"cache_all_safe_requests\"",
              "json_name": "cache_all_safe_requests"
            },
            {
              "name": "CacheOnlyResponseCodes",
              "type": "[]int",
              "path": "CacheOptions.CacheOnlyResponseCodes",
              "tag": "bson:\"cache_response_codes\" json:\"cache_response_codes\"",
              "json_name": "cache_response_codes"
            },
            {
              "name": "EnableUpstreamCacheControl",
              "type": "bool",
              "path": "CacheOptions.EnableUpstreamCacheControl",
              "tag": "bson:\"enable_upstream_cache_control\" json:\"enable_upstream_cache_control\"",
              "json_name": "enable_upstream_cache_control"
            },
            {
              "name": "CacheControlTTLHeader",
              "type": "string",
              "path": "CacheOptions.CacheControlTTLHeader",
              "tag": "bson:\"cache_control_ttl_header\" json:\"cache_control_ttl_header\"",
              "json_name": "cache_control_ttl_header"
            },
            {
              "name": "CacheByHeaders",
              "type": "[]string",
              "path": "CacheOptions.CacheByHeaders",
              "tag": "bson:\"cache_by_headers\" json:\"cache_by_headers\"",
              "json_name": "cache_by_headers"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ResponseProcessor",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "path": "ResponseProcessor.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Options",
              "type": "",
              "path": "ResponseProcessor.Options",
              "tag": "bson:\"options\" json:\"options\"",
              "json_name": "options"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "HostCheckObject",
          "fields": [
            {
              "name": "CheckURL",
              "type": "string",
              "path": "HostCheckObject.CheckURL",
              "tag": "bson:\"url\" json:\"url\"",
              "json_name": "url"
            },
            {
              "name": "Protocol",
              "type": "string",
              "path": "HostCheckObject.Protocol",
              "tag": "bson:\"protocol\" json:\"protocol\"",
              "json_name": "protocol"
            },
            {
              "name": "Timeout",
              "type": "time.Duration",
              "path": "HostCheckObject.Timeout",
              "tag": "bson:\"timeout\" json:\"timeout\"",
              "json_name": "timeout"
            },
            {
              "name": "EnableProxyProtocol",
              "type": "bool",
              "path": "HostCheckObject.EnableProxyProtocol",
              "tag": "bson:\"enable_proxy_protocol\" json:\"enable_proxy_protocol\"",
              "json_name": "enable_proxy_protocol"
            },
            {
              "name": "Commands",
              "type": "[]CheckCommand",
              "path": "HostCheckObject.Commands",
              "tag": "bson:\"commands\" json:\"commands\"",
              "json_name": "commands"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "HostCheckObject.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "Headers",
              "type": "map[string]string",
              "path": "HostCheckObject.Headers",
              "tag": "bson:\"headers\" json:\"headers\"",
              "json_name": "headers"
            },
            {
              "name": "Body",
              "type": "string",
              "path": "HostCheckObject.Body",
              "tag": "bson:\"body\" json:\"body\"",
              "json_name": "body"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "CheckCommand",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "path": "CheckCommand.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Message",
              "type": "string",
              "path": "CheckCommand.Message",
              "tag": "bson:\"message\" json:\"message\"",
              "json_name": "message"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ServiceDiscoveryConfiguration",
          "fields": [
            {
              "name": "UseDiscoveryService",
              "type": "bool",
              "path": "ServiceDiscoveryConfiguration.UseDiscoveryService",
              "tag": "bson:\"use_discovery_service\" json:\"use_discovery_service\"",
              "json_name": "use_discovery_service"
            },
            {
              "name": "QueryEndpoint",
              "type": "string",
              "path": "ServiceDiscoveryConfiguration.QueryEndpoint",
              "tag": "bson:\"query_endpoint\" json:\"query_endpoint\"",
              "json_name": "query_endpoint"
            },
            {
              "name": "UseNestedQuery",
              "type": "bool",
              "path": "ServiceDiscoveryConfiguration.UseNestedQuery",
              "tag": "bson:\"use_nested_query\" json:\"use_nested_query\"",
              "json_name": "use_nested_query"
            },
            {
              "name": "ParentDataPath",
              "type": "string",
              "path": "ServiceDiscoveryConfiguration.ParentDataPath",
              "tag": "bson:\"parent_data_path\" json:\"parent_data_path\"",
              "json_name": "parent_data_path"
            },
            {
              "name": "DataPath",
              "type": "string",
              "path": "ServiceDiscoveryConfiguration.DataPath",
              "tag": "bson:\"data_path\" json:\"data_path\"",
              "json_name": "data_path"
            },
            {
              "name": "PortDataPath",
              "type": "string",
              "path": "ServiceDiscoveryConfiguration.PortDataPath",
              "tag": "bson:\"port_data_path\" json:\"port_data_path\"",
              "json_name": "port_data_path"
            },
            {
              "name": "TargetPath",
              "type": "string",
              "path": "ServiceDiscoveryConfiguration.TargetPath",
              "tag": "bson:\"target_path\" json:\"target_path\"",
              "json_name": "target_path"
            },
            {
              "name": "UseTargetList",
              "type": "bool",
              "path": "ServiceDiscoveryConfiguration.UseTargetList",
              "tag": "bson:\"use_target_list\" json:\"use_target_list\"",
              "json_name": "use_target_list"
            },
            {
              "name": "CacheDisabled",
              "type": "bool",
              "path": "ServiceDiscoveryConfiguration.CacheDisabled",
              "tag": "bson:\"cache_disabled\" json:\"cache_disabled\"",
              "json_name": "cache_disabled"
            },
            {
              "name": "CacheTimeout",
              "type": "int64",
              "path": "ServiceDiscoveryConfiguration.CacheTimeout",
              "tag": "bson:\"cache_timeout\" json:\"cache_timeout\"",
              "json_name": "cache_timeout"
            },
            {
              "name": "EndpointReturnsList",
              "type": "bool",
              "path": "ServiceDiscoveryConfiguration.EndpointReturnsList",
              "tag": "bson:\"endpoint_returns_list\" json:\"endpoint_returns_list\"",
              "json_name": "endpoint_returns_list"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "OIDProviderConfig",
          "fields": [
            {
              "name": "Issuer",
              "type": "string",
              "path": "OIDProviderConfig.Issuer",
              "tag": "bson:\"issuer\" json:\"issuer\"",
              "json_name": "issuer"
            },
            {
              "name": "ClientIDs",
              "type": "map[string]string",
              "path": "OIDProviderConfig.ClientIDs",
              "tag": "bson:\"client_ids\" json:\"client_ids\"",
              "json_name": "client_ids"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "OpenIDOptions",
          "fields": [
            {
              "name": "Providers",
              "type": "[]OIDProviderConfig",
              "path": "OpenIDOptions.Providers",
              "tag": "bson:\"providers\" json:\"providers\"",
              "json_name": "providers"
            },
            {
              "name": "SegregateByClient",
              "type": "bool",
              "path": "OpenIDOptions.SegregateByClient",
              "tag": "bson:\"segregate_by_client\" json:\"segregate_by_client\"",
              "json_name": "segregate_by_client"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ScopeClaim",
          "fields": [
            {
              "name": "ScopeClaimName",
              "type": "string",
              "path": "ScopeClaim.ScopeClaimName",
              "tag": "bson:\"scope_claim_name\" json:\"scope_claim_name,omitempty\"",
              "json_name": "scope_claim_name,omitempty"
            },
            {
              "name": "ScopeToPolicy",
              "type": "map[string]string",
              "path": "ScopeClaim.ScopeToPolicy",
              "tag": "json:\"scope_to_policy,omitempty\"",
              "json_name": "scope_to_policy,omitempty"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "Scopes",
          "fields": [
            {
              "name": "JWT",
              "type": "ScopeClaim",
              "path": "Scopes.JWT",
              "tag": "bson:\"jwt\" json:\"jwt,omitempty\"",
              "json_name": "jwt,omitempty"
            },
            {
              "name": "OIDC",
              "type": "ScopeClaim",
              "path": "Scopes.OIDC",
              "tag": "bson:\"oidc\" json:\"oidc,omitempty\"",
              "json_name": "oidc,omitempty"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "AnalyticsPluginConfig",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "AnalyticsPluginConfig.Enabled",
              "tag": "bson:\"enable\" json:\"enable,omitempty\"",
              "json_name": "enable,omitempty"
            },
            {
              "name": "PluginPath",
              "type": "string",
              "path": "AnalyticsPluginConfig.PluginPath",
              "tag": "bson:\"plugin_path\" json:\"plugin_path,omitempty\"",
              "json_name": "plugin_path,omitempty"
            },
            {
              "name": "FuncName",
              "type": "string",
              "path": "AnalyticsPluginConfig.FuncName",
              "tag": "bson:\"func_name\" json:\"func_name,omitempty\"",
              "json_name": "func_name,omitempty"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "UptimeTests",
          "fields": [
            {
              "name": "CheckList",
              "type": "[]HostCheckObject",
              "path": "UptimeTests.CheckList",
              "tag": "bson:\"check_list\" json:\"check_list\"",
              "json_name": "check_list"
            },
            {
              "name": "Config",
              "type": "UptimeTestsConfig",
              "path": "UptimeTests.Config",
              "tag": "bson:\"config\" json:\"config\"",
              "json_name": "config"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "UptimeTestsConfig",
          "fields": [
            {
              "name": "ExpireUptimeAnalyticsAfter",
              "type": "int64",
              "path": "UptimeTestsConfig.ExpireUptimeAnalyticsAfter",
              "comment": "must have an expireAt TTL index set (http://docs.mongodb.org/manual/tutorial/expire-data/)",
              "tag": "bson:\"expire_utime_after\" json:\"expire_utime_after\"",
              "json_name": "expire_utime_after"
            },
            {
              "name": "ServiceDiscovery",
              "type": "ServiceDiscoveryConfiguration",
              "path": "UptimeTestsConfig.ServiceDiscovery",
              "tag": "bson:\"service_discovery\" json:\"service_discovery\"",
              "json_name": "service_discovery"
            },
            {
              "name": "RecheckWait",
              "type": "int",
              "path": "UptimeTestsConfig.RecheckWait",
              "tag": "bson:\"recheck_wait\" json:\"recheck_wait\"",
              "json_name": "recheck_wait"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "AuthConfig",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "path": "AuthConfig.Name",
              "tag": "mapstructure:\"name\" bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "UseParam",
              "type": "bool",
              "path": "AuthConfig.UseParam",
              "tag": "mapstructure:\"use_param\" bson:\"use_param\" json:\"use_param\"",
              "json_name": "use_param"
            },
            {
              "name": "ParamName",
              "type": "string",
              "path": "AuthConfig.ParamName",
              "tag": "mapstructure:\"param_name\" bson:\"param_name\" json:\"param_name\"",
              "json_name": "param_name"
            },
            {
              "name": "UseCookie",
              "type": "bool",
              "path": "AuthConfig.UseCookie",
              "tag": "mapstructure:\"use_cookie\" bson:\"use_cookie\" json:\"use_cookie\"",
              "json_name": "use_cookie"
            },
            {
              "name": "CookieName",
              "type": "string",
              "path": "AuthConfig.CookieName",
              "tag": "mapstructure:\"cookie_name\" bson:\"cookie_name\" json:\"cookie_name\"",
              "json_name": "cookie_name"
            },
            {
              "name": "DisableHeader",
              "type": "bool",
              "path": "AuthConfig.DisableHeader",
              "tag": "mapstructure:\"disable_header\" bson:\"disable_header\" json:\"disable_header\"",
              "json_name": "disable_header"
            },
            {
              "name": "AuthHeaderName",
              "type": "string",
              "path": "AuthConfig.AuthHeaderName",
              "tag": "mapstructure:\"auth_header_name\" bson:\"auth_header_name\" json:\"auth_header_name\"",
              "json_name": "auth_header_name"
            },
            {
              "name": "UseCertificate",
              "type": "bool",
              "path": "AuthConfig.UseCertificate",
              "tag": "mapstructure:\"use_certificate\" bson:\"use_certificate\" json:\"use_certificate\"",
              "json_name": "use_certificate"
            },
            {
              "name": "ValidateSignature",
              "type": "bool",
              "path": "AuthConfig.ValidateSignature",
              "tag": "mapstructure:\"validate_signature\" bson:\"validate_signature\" json:\"validate_signature\"",
              "json_name": "validate_signature"
            },
            {
              "name": "Signature",
              "type": "SignatureConfig",
              "path": "AuthConfig.Signature",
              "tag": "mapstructure:\"signature\" bson:\"signature\" json:\"signature,omitempty\"",
              "json_name": "signature,omitempty"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "SignatureConfig",
          "fields": [
            {
              "name": "Algorithm",
              "type": "string",
              "path": "SignatureConfig.Algorithm",
              "tag": "mapstructure:\"algorithm\" bson:\"algorithm\" json:\"algorithm\"",
              "json_name": "algorithm"
            },
            {
              "name": "Header",
              "type": "string",
              "path": "SignatureConfig.Header",
              "tag": "mapstructure:\"header\" bson:\"header\" json:\"header\"",
              "json_name": "header"
            },
            {
              "name": "UseParam",
              "type": "bool",
              "path": "SignatureConfig.UseParam",
              "tag": "mapstructure:\"use_param\" bson:\"use_param\" json:\"use_param\"",
              "json_name": "use_param"
            },
            {
              "name": "ParamName",
              "type": "string",
              "path": "SignatureConfig.ParamName",
              "tag": "mapstructure:\"param_name\" bson:\"param_name\" json:\"param_name\"",
              "json_name": "param_name"
            },
            {
              "name": "Secret",
              "type": "string",
              "path": "SignatureConfig.Secret",
              "tag": "mapstructure:\"secret\" bson:\"secret\" json:\"secret\"",
              "json_name": "secret"
            },
            {
              "name": "AllowedClockSkew",
              "type": "int64",
              "path": "SignatureConfig.AllowedClockSkew",
              "tag": "mapstructure:\"allowed_clock_skew\" bson:\"allowed_clock_skew\" json:\"allowed_clock_skew\"",
              "json_name": "allowed_clock_skew"
            },
            {
              "name": "ErrorCode",
              "type": "int",
              "path": "SignatureConfig.ErrorCode",
              "tag": "mapstructure:\"error_code\" bson:\"error_code\" json:\"error_code\"",
              "json_name": "error_code"
            },
            {
              "name": "ErrorMessage",
              "type": "string",
              "path": "SignatureConfig.ErrorMessage",
              "tag": "mapstructure:\"error_message\" bson:\"error_message\" json:\"error_message\"",
              "json_name": "error_message"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GlobalRateLimit",
          "fields": [
            {
              "name": "Rate",
              "type": "float64",
              "path": "GlobalRateLimit.Rate",
              "tag": "bson:\"rate\" json:\"rate\"",
              "json_name": "rate"
            },
            {
              "name": "Per",
              "type": "float64",
              "path": "GlobalRateLimit.Per",
              "tag": "bson:\"per\" json:\"per\"",
              "json_name": "per"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "BundleManifest",
          "fields": [
            {
              "name": "FileList",
              "type": "[]string",
              "path": "BundleManifest.FileList",
              "tag": "bson:\"file_list\" json:\"file_list\"",
              "json_name": "file_list"
            },
            {
              "name": "CustomMiddleware",
              "type": "MiddlewareSection",
              "path": "BundleManifest.CustomMiddleware",
              "tag": "bson:\"custom_middleware\" json:\"custom_middleware\"",
              "json_name": "custom_middleware"
            },
            {
              "name": "Checksum",
              "type": "string",
              "path": "BundleManifest.Checksum",
              "tag": "bson:\"checksum\" json:\"checksum\"",
              "json_name": "checksum"
            },
            {
              "name": "Signature",
              "type": "string",
              "path": "BundleManifest.Signature",
              "tag": "bson:\"signature\" json:\"signature\"",
              "json_name": "signature"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "RequestSigningMeta",
          "fields": [
            {
              "name": "IsEnabled",
              "type": "bool",
              "path": "RequestSigningMeta.IsEnabled",
              "tag": "bson:\"is_enabled\" json:\"is_enabled\"",
              "json_name": "is_enabled"
            },
            {
              "name": "Secret",
              "type": "string",
              "path": "RequestSigningMeta.Secret",
              "tag": "bson:\"secret\" json:\"secret\"",
              "json_name": "secret"
            },
            {
              "name": "KeyId",
              "type": "string",
              "path": "RequestSigningMeta.KeyId",
              "tag": "bson:\"key_id\" json:\"key_id\"",
              "json_name": "key_id"
            },
            {
              "name": "Algorithm",
              "type": "string",
              "path": "RequestSigningMeta.Algorithm",
              "tag": "bson:\"algorithm\" json:\"algorithm\"",
              "json_name": "algorithm"
            },
            {
              "name": "HeaderList",
              "type": "[]string",
              "path": "RequestSigningMeta.HeaderList",
              "tag": "bson:\"header_list\" json:\"header_list\"",
              "json_name": "header_list"
            },
            {
              "name": "CertificateId",
              "type": "string",
              "path": "RequestSigningMeta.CertificateId",
              "tag": "bson:\"certificate_id\" json:\"certificate_id\"",
              "json_name": "certificate_id"
            },
            {
              "name": "SignatureHeader",
              "type": "string",
              "path": "RequestSigningMeta.SignatureHeader",
              "tag": "bson:\"signature_header\" json:\"signature_header\"",
              "json_name": "signature_header"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ProxyConfig",
          "fields": [
            {
              "name": "PreserveHostHeader",
              "type": "bool",
              "path": "ProxyConfig.PreserveHostHeader",
              "tag": "bson:\"preserve_host_header\" json:\"preserve_host_header\"",
              "json_name": "preserve_host_header"
            },
            {
              "name": "ListenPath",
              "type": "string",
              "path": "ProxyConfig.ListenPath",
              "tag": "bson:\"listen_path\" json:\"listen_path\"",
              "json_name": "listen_path"
            },
            {
              "name": "TargetURL",
              "type": "string",
              "path": "ProxyConfig.TargetURL",
              "tag": "bson:\"target_url\" json:\"target_url\"",
              "json_name": "target_url"
            },
            {
              "name": "DisableStripSlash",
              "type": "bool",
              "path": "ProxyConfig.DisableStripSlash",
              "tag": "bson:\"disable_strip_slash\" json:\"disable_strip_slash\"",
              "json_name": "disable_strip_slash"
            },
            {
              "name": "StripListenPath",
              "type": "bool",
              "path": "ProxyConfig.StripListenPath",
              "tag": "bson:\"strip_listen_path\" json:\"strip_listen_path\"",
              "json_name": "strip_listen_path"
            },
            {
              "name": "EnableLoadBalancing",
              "type": "bool",
              "path": "ProxyConfig.EnableLoadBalancing",
              "tag": "bson:\"enable_load_balancing\" json:\"enable_load_balancing\"",
              "json_name": "enable_load_balancing"
            },
            {
              "name": "Targets",
              "type": "[]string",
              "path": "ProxyConfig.Targets",
              "tag": "bson:\"target_list\" json:\"target_list\"",
              "json_name": "target_list"
            },
            {
              "name": "CheckHostAgainstUptimeTests",
              "type": "bool",
              "path": "ProxyConfig.CheckHostAgainstUptimeTests",
              "tag": "bson:\"check_host_against_uptime_tests\" json:\"check_host_against_uptime_tests\"",
              "json_name": "check_host_against_uptime_tests"
            },
            {
              "name": "ServiceDiscovery",
              "type": "ServiceDiscoveryConfiguration",
              "path": "ProxyConfig.ServiceDiscovery",
              "tag": "bson:\"service_discovery\" json:\"service_discovery\"",
              "json_name": "service_discovery"
            },
            {
              "name": "Transport",
              "type": "struct{}",
              "path": "ProxyConfig.Transport",
              "tag": "bson:\"transport\" json:\"transport\"",
              "json_name": "transport"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "CORSConfig",
          "fields": [
            {
              "name": "Enable",
              "type": "bool",
              "path": "CORSConfig.Enable",
              "tag": "bson:\"enable\" json:\"enable\"",
              "json_name": "enable"
            },
            {
              "name": "AllowedOrigins",
              "type": "[]string",
              "path": "CORSConfig.AllowedOrigins",
              "tag": "bson:\"allowed_origins\" json:\"allowed_origins\"",
              "json_name": "allowed_origins"
            },
            {
              "name": "AllowedMethods",
              "type": "[]string",
              "path": "CORSConfig.AllowedMethods",
              "tag": "bson:\"allowed_methods\" json:\"allowed_methods\"",
              "json_name": "allowed_methods"
            },
            {
              "name": "AllowedHeaders",
              "type": "[]string",
              "path": "CORSConfig.AllowedHeaders",
              "tag": "bson:\"allowed_headers\" json:\"allowed_headers\"",
              "json_name": "allowed_headers"
            },
            {
              "name": "ExposedHeaders",
              "type": "[]string",
              "path": "CORSConfig.ExposedHeaders",
              "tag": "bson:\"exposed_headers\" json:\"exposed_headers\"",
              "json_name": "exposed_headers"
            },
            {
              "name": "AllowCredentials",
              "type": "bool",
              "path": "CORSConfig.AllowCredentials",
              "tag": "bson:\"allow_credentials\" json:\"allow_credentials\"",
              "json_name": "allow_credentials"
            },
            {
              "name": "MaxAge",
              "type": "int",
              "path": "CORSConfig.MaxAge",
              "tag": "bson:\"max_age\" json:\"max_age\"",
              "json_name": "max_age"
            },
            {
              "name": "OptionsPassthrough",
              "type": "bool",
              "path": "CORSConfig.OptionsPassthrough",
              "tag": "bson:\"options_passthrough\" json:\"options_passthrough\"",
              "json_name": "options_passthrough"
            },
            {
              "name": "Debug",
              "type": "bool",
              "path": "CORSConfig.Debug",
              "tag": "bson:\"debug\" json:\"debug\"",
              "json_name": "debug"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLConfigVersion",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLResponseExtensions",
          "fields": [
            {
              "name": "OnErrorForwarding",
              "type": "bool",
              "path": "GraphQLResponseExtensions.OnErrorForwarding",
              "tag": "bson:\"on_error_forwarding\" json:\"on_error_forwarding\"",
              "json_name": "on_error_forwarding"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLProxyConfig",
          "fields": [
            {
              "name": "AuthHeaders",
              "type": "map[string]string",
              "path": "GraphQLProxyConfig.AuthHeaders",
              "tag": "bson:\"auth_headers\" json:\"auth_headers\"",
              "json_name": "auth_headers"
            },
            {
              "name": "SubscriptionType",
              "type": "SubscriptionType",
              "path": "GraphQLProxyConfig.SubscriptionType",
              "tag": "bson:\"subscription_type\" json:\"subscription_type,omitempty\"",
              "json_name": "subscription_type,omitempty"
            },
            {
              "name": "RequestHeaders",
              "type": "map[string]string",
              "path": "GraphQLProxyConfig.RequestHeaders",
              "tag": "bson:\"request_headers\" json:\"request_headers\"",
              "json_name": "request_headers"
            },
            {
              "name": "UseResponseExtensions",
              "type": "GraphQLResponseExtensions",
              "path": "GraphQLProxyConfig.UseResponseExtensions",
              "tag": "bson:\"use_response_extensions\" json:\"use_response_extensions\"",
              "json_name": "use_response_extensions"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLSubgraphConfig",
          "fields": [
            {
              "name": "SDL",
              "type": "string",
              "path": "GraphQLSubgraphConfig.SDL",
              "tag": "bson:\"sdl\" json:\"sdl\"",
              "json_name": "sdl"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLSupergraphConfig",
          "fields": [
            {
              "name": "UpdatedAt",
              "type": "time.Time",
              "path": "GraphQLSupergraphConfig.UpdatedAt",
              "doc": "UpdatedAt contains the date and time of the last update of a supergraph API.",
              "tag": "bson:\"updated_at\" json:\"updated_at,omitempty\"",
              "json_name": "updated_at,omitempty"
            },
            {
              "name": "Subgraphs",
              "type": "[]GraphQLSubgraphEntity",
              "path": "GraphQLSupergraphConfig.Subgraphs",
              "tag": "bson:\"subgraphs\" json:\"subgraphs\"",
              "json_name": "subgraphs"
            },
            {
              "name": "MergedSDL",
              "type": "string",
              "path": "GraphQLSupergraphConfig.MergedSDL",
              "tag": "bson:\"merged_sdl\" json:\"merged_sdl\"",
              "json_name": "merged_sdl"
            },
            {
              "name": "GlobalHeaders",
              "type": "map[string]string",
              "path": "GraphQLSupergraphConfig.GlobalHeaders",
              "tag": "bson:\"global_headers\" json:\"global_headers\"",
              "json_name": "global_headers"
            },
            {
              "name": "DisableQueryBatching",
              "type": "bool",
              "path": "GraphQLSupergraphConfig.DisableQueryBatching",
              "tag": "bson:\"disable_query_batching\" json:\"disable_query_batching\"",
              "json_name": "disable_query_batching"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLSubgraphEntity",
          "fields": [
            {
              "name": "APIID",
              "type": "string",
              "path": "GraphQLSubgraphEntity.APIID",
              "tag": "bson:\"api_id\" json:\"api_id\"",
              "json_name": "api_id"
            },
            {
              "name": "Name",
              "type": "string",
              "path": "GraphQLSubgraphEntity.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "URL",
              "type": "string",
              "path": "GraphQLSubgraphEntity.URL",
              "tag": "bson:\"url\" json:\"url\"",
              "json_name": "url"
            },
            {
              "name": "SDL",
              "type": "string",
              "path": "GraphQLSubgraphEntity.SDL",
              "tag": "bson:\"sdl\" json:\"sdl\"",
              "json_name": "sdl"
            },
            {
              "name": "Headers",
              "type": "map[string]string",
              "path": "GraphQLSubgraphEntity.Headers",
              "tag": "bson:\"headers\" json:\"headers\"",
              "json_name": "headers"
            },
            {
              "name": "SubscriptionType",
              "type": "SubscriptionType",
              "path": "GraphQLSubgraphEntity.SubscriptionType",
              "tag": "bson:\"subscription_type\" json:\"subscription_type,omitempty\"",
              "json_name": "subscription_type,omitempty"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLEngineConfig",
          "fields": [
            {
              "name": "FieldConfigs",
              "type": "[]GraphQLFieldConfig",
              "path": "GraphQLEngineConfig.FieldConfigs",
              "tag": "bson:\"field_configs\" json:\"field_configs\"",
              "json_name": "field_configs"
            },
            {
              "name": "DataSources",
              "type": "[]GraphQLEngineDataSource",
              "path": "GraphQLEngineConfig.DataSources",
              "tag": "bson:\"data_sources\" json:\"data_sources\"",
              "json_name": "data_sources"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLFieldConfig",
          "fields": [
            {
              "name": "TypeName",
              "type": "string",
              "path": "GraphQLFieldConfig.TypeName",
              "tag": "bson:\"type_name\" json:\"type_name\"",
              "json_name": "type_name"
            },
            {
              "name": "FieldName",
              "type": "string",
              "path": "GraphQLFieldConfig.FieldName",
              "tag": "bson:\"field_name\" json:\"field_name\"",
              "json_name": "field_name"
            },
            {
              "name": "DisableDefaultMapping",
              "type": "bool",
              "path": "GraphQLFieldConfig.DisableDefaultMapping",
              "tag": "bson:\"disable_default_mapping\" json:\"disable_default_mapping\"",
              "json_name": "disable_default_mapping"
            },
            {
              "name": "Path",
              "type": "[]string",
              "path": "GraphQLFieldConfig.Path",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLEngineDataSourceKind",
          "type": "string"
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLEngineDataSource",
          "fields": [
            {
              "name": "Kind",
              "type": "GraphQLEngineDataSourceKind",
              "path": "GraphQLEngineDataSource.Kind",
              "tag": "bson:\"kind\" json:\"kind\"",
              "json_name": "kind"
            },
            {
              "name": "Name",
              "type": "string",
              "path": "GraphQLEngineDataSource.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Internal",
              "type": "bool",
              "path": "GraphQLEngineDataSource.Internal",
              "tag": "bson:\"internal\" json:\"internal\"",
              "json_name": "internal"
            },
            {
              "name": "RootFields",
              "type": "[]GraphQLTypeFields",
              "path": "GraphQLEngineDataSource.RootFields",
              "tag": "bson:\"root_fields\" json:\"root_fields\"",
              "json_name": "root_fields"
            },
            {
              "name": "Config",
              "type": "json.RawMessage",
              "path": "GraphQLEngineDataSource.Config",
              "tag": "bson:\"config\" json:\"config\"",
              "json_name": "config"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLTypeFields",
          "fields": [
            {
              "name": "Type",
              "type": "string",
              "path": "GraphQLTypeFields.Type",
              "tag": "bson:\"type\" json:\"type\"",
              "json_name": "type"
            },
            {
              "name": "Fields",
              "type": "[]string",
              "path": "GraphQLTypeFields.Fields",
              "tag": "bson:\"fields\" json:\"fields\"",
              "json_name": "fields"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLEngineDataSourceConfigREST",
          "fields": [
            {
              "name": "URL",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigREST.URL",
              "tag": "bson:\"url\" json:\"url\"",
              "json_name": "url"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigREST.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "Headers",
              "type": "map[string]string",
              "path": "GraphQLEngineDataSourceConfigREST.Headers",
              "tag": "bson:\"headers\" json:\"headers\"",
              "json_name": "headers"
            },
            {
              "name": "Query",
              "type": "[]QueryVariable",
              "path": "GraphQLEngineDataSourceConfigREST.Query",
              "tag": "bson:\"query\" json:\"query\"",
              "json_name": "query"
            },
            {
              "name": "Body",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigREST.Body",
              "tag": "bson:\"body\" json:\"body\"",
              "json_name": "body"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLEngineDataSourceConfigGraphQL",
          "fields": [
            {
              "name": "URL",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigGraphQL.URL",
              "tag": "bson:\"url\" json:\"url\"",
              "json_name": "url"
            },
            {
              "name": "Method",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigGraphQL.Method",
              "tag": "bson:\"method\" json:\"method\"",
              "json_name": "method"
            },
            {
              "name": "Headers",
              "type": "map[string]string",
              "path": "GraphQLEngineDataSourceConfigGraphQL.Headers",
              "tag": "bson:\"headers\" json:\"headers\"",
              "json_name": "headers"
            },
            {
              "name": "SubscriptionType",
              "type": "SubscriptionType",
              "path": "GraphQLEngineDataSourceConfigGraphQL.SubscriptionType",
              "tag": "bson:\"subscription_type\" json:\"subscription_type,omitempty\"",
              "json_name": "subscription_type,omitempty"
            },
            {
              "name": "HasOperation",
              "type": "bool",
              "path": "GraphQLEngineDataSourceConfigGraphQL.HasOperation",
              "tag": "bson:\"has_operation\" json:\"has_operation\"",
              "json_name": "has_operation"
            },
            {
              "name": "Operation",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigGraphQL.Operation",
              "tag": "bson:\"operation\" json:\"operation\"",
              "json_name": "operation"
            },
            {
              "name": "Variables",
              "type": "json.RawMessage",
              "path": "GraphQLEngineDataSourceConfigGraphQL.Variables",
              "tag": "bson:\"variables\" json:\"variables\"",
              "json_name": "variables"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GraphQLEngineDataSourceConfigKafka",
          "fields": [
            {
              "name": "BrokerAddresses",
              "type": "[]string",
              "path": "GraphQLEngineDataSourceConfigKafka.BrokerAddresses",
              "tag": "bson:\"broker_addresses\" json:\"broker_addresses\"",
              "json_name": "broker_addresses"
            },
            {
              "name": "Topics",
              "type": "[]string",
              "path": "GraphQLEngineDataSourceConfigKafka.Topics",
              "tag": "bson:\"topics\" json:\"topics\"",
              "json_name": "topics"
            },
            {
              "name": "GroupID",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigKafka.GroupID",
              "tag": "bson:\"group_id\" json:\"group_id\"",
              "json_name": "group_id"
            },
            {
              "name": "ClientID",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigKafka.ClientID",
              "tag": "bson:\"client_id\" json:\"client_id\"",
              "json_name": "client_id"
            },
            {
              "name": "KafkaVersion",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigKafka.KafkaVersion",
              "tag": "bson:\"kafka_version\" json:\"kafka_version\"",
              "json_name": "kafka_version"
            },
            {
              "name": "StartConsumingLatest",
              "type": "bool",
              "path": "GraphQLEngineDataSourceConfigKafka.StartConsumingLatest",
              "tag": "json:\"start_consuming_latest\"",
              "json_name": "start_consuming_latest"
            },
            {
              "name": "BalanceStrategy",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigKafka.BalanceStrategy",
              "tag": "json:\"balance_strategy\"",
              "json_name": "balance_strategy"
            },
            {
              "name": "IsolationLevel",
              "type": "string",
              "path": "GraphQLEngineDataSourceConfigKafka.IsolationLevel",
              "tag": "json:\"isolation_level\"",
              "json_name": "isolation_level"
            },
            {
              "name": "SASL",
              "type": "kafka_datasource.SASL",
              "path": "GraphQLEngineDataSourceConfigKafka.SASL",
              "tag": "json:\"sasl\"",
              "json_name": "sasl"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "QueryVariable",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "path": "QueryVariable.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Value",
              "type": "string",
              "path": "QueryVariable.Value",
              "tag": "bson:\"value\" json:\"value\"",
              "json_name": "value"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "ExternalOAuth",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "ExternalOAuth.Enabled",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "Providers",
              "type": "[]Provider",
              "path": "ExternalOAuth.Providers",
              "tag": "bson:\"providers\" json:\"providers\"",
              "json_name": "providers"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "Provider",
          "fields": [
            {
              "name": "JWT",
              "type": "JWTValidation",
              "path": "Provider.JWT",
              "tag": "bson:\"jwt\" json:\"jwt\"",
              "json_name": "jwt"
            },
            {
              "name": "Introspection",
              "type": "Introspection",
              "path": "Provider.Introspection",
              "tag": "bson:\"introspection\" json:\"introspection\"",
              "json_name": "introspection"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "JWTValidation",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "JWTValidation.Enabled",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "SigningMethod",
              "type": "string",
              "path": "JWTValidation.SigningMethod",
              "tag": "bson:\"signing_method\" json:\"signing_method\"",
              "json_name": "signing_method"
            },
            {
              "name": "Source",
              "type": "string",
              "path": "JWTValidation.Source",
              "tag": "bson:\"source\" json:\"source\"",
              "json_name": "source"
            },
            {
              "name": "IssuedAtValidationSkew",
              "type": "uint64",
              "path": "JWTValidation.IssuedAtValidationSkew",
              "tag": "bson:\"issued_at_validation_skew\" json:\"issued_at_validation_skew\"",
              "json_name": "issued_at_validation_skew"
            },
            {
              "name": "NotBeforeValidationSkew",
              "type": "uint64",
              "path": "JWTValidation.NotBeforeValidationSkew",
              "tag": "bson:\"not_before_validation_skew\" json:\"not_before_validation_skew\"",
              "json_name": "not_before_validation_skew"
            },
            {
              "name": "ExpiresAtValidationSkew",
              "type": "uint64",
              "path": "JWTValidation.ExpiresAtValidationSkew",
              "tag": "bson:\"expires_at_validation_skew\" json:\"expires_at_validation_skew\"",
              "json_name": "expires_at_validation_skew"
            },
            {
              "name": "IdentityBaseField",
              "type": "string",
              "path": "JWTValidation.IdentityBaseField",
              "tag": "bson:\"identity_base_field\" json:\"identity_base_field\"",
              "json_name": "identity_base_field"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "Introspection",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "Introspection.Enabled",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "URL",
              "type": "string",
              "path": "Introspection.URL",
              "tag": "bson:\"url\" json:\"url\"",
              "json_name": "url"
            },
            {
              "name": "ClientID",
              "type": "string",
              "path": "Introspection.ClientID",
              "tag": "bson:\"client_id\" json:\"client_id\"",
              "json_name": "client_id"
            },
            {
              "name": "ClientSecret",
              "type": "string",
              "path": "Introspection.ClientSecret",
              "tag": "bson:\"client_secret\" json:\"client_secret\"",
              "json_name": "client_secret"
            },
            {
              "name": "IdentityBaseField",
              "type": "string",
              "path": "Introspection.IdentityBaseField",
              "tag": "bson:\"identity_base_field\" json:\"identity_base_field\"",
              "json_name": "identity_base_field"
            },
            {
              "name": "Cache",
              "type": "IntrospectionCache",
              "path": "Introspection.Cache",
              "tag": "bson:\"cache\" json:\"cache\"",
              "json_name": "cache"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "IntrospectionCache",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "IntrospectionCache.Enabled",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "Timeout",
              "type": "int64",
              "path": "IntrospectionCache.Timeout",
              "tag": "bson:\"timeout\" json:\"timeout\"",
              "json_name": "timeout"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "HostList"
        }
      ]
    },
    {
      "types": [
        {
          "name": "InboundData",
          "fields": [
            {
              "name": "KeyName",
              "type": "string",
              "path": "InboundData.KeyName",
              "tag": "",
              "json_name": "KeyName"
            },
            {
              "name": "Value",
              "type": "string",
              "path": "InboundData.Value",
              "tag": "",
              "json_name": "Value"
            },
            {
              "name": "SessionState",
              "type": "string",
              "path": "InboundData.SessionState",
              "tag": "",
              "json_name": "SessionState"
            },
            {
              "name": "Timeout",
              "type": "int64",
              "path": "InboundData.Timeout",
              "tag": "",
              "json_name": "Timeout"
            },
            {
              "name": "Per",
              "type": "int64",
              "path": "InboundData.Per",
              "tag": "",
              "json_name": "Per"
            },
            {
              "name": "Expire",
              "type": "int64",
              "path": "InboundData.Expire",
              "tag": "",
              "json_name": "Expire"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "DefRequest",
          "fields": [
            {
              "name": "OrgId",
              "type": "string",
              "path": "DefRequest.OrgId",
              "tag": "",
              "json_name": "OrgId"
            },
            {
              "name": "Tags",
              "type": "[]string",
              "path": "DefRequest.Tags",
              "tag": "",
              "json_name": "Tags"
            },
            {
              "name": "LoadOAS",
              "type": "bool",
              "path": "DefRequest.LoadOAS",
              "tag": "",
              "json_name": "LoadOAS"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GroupLoginRequest",
          "fields": [
            {
              "name": "UserKey",
              "type": "string",
              "path": "GroupLoginRequest.UserKey",
              "tag": "",
              "json_name": "UserKey"
            },
            {
              "name": "GroupID",
              "type": "string",
              "path": "GroupLoginRequest.GroupID",
              "tag": "",
              "json_name": "GroupID"
            },
            {
              "name": "ForceSync",
              "type": "bool",
              "path": "GroupLoginRequest.ForceSync",
              "tag": "",
              "json_name": "ForceSync"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "GroupKeySpaceRequest",
          "fields": [
            {
              "name": "OrgID",
              "type": "string",
              "path": "GroupKeySpaceRequest.OrgID",
              "tag": "",
              "json_name": "OrgID"
            },
            {
              "name": "GroupID",
              "type": "string",
              "path": "GroupKeySpaceRequest.GroupID",
              "tag": "",
              "json_name": "GroupID"
            }
          ]
        }
      ]
    },
    {
      "types": [
        {
          "name": "KeysValuesPair",
          "fields": [
            {
              "name": "Keys",
              "type": "[]string",
              "path": "KeysValuesPair.Keys",
              "tag": "",
              "json_name": "Keys"
            },
            {
              "name": "Values",
              "type": "[]string",
              "path": "KeysValuesPair.Values",
              "tag": "",
              "json_name": "Values"
            }
          ]
        }
      ]
    },
    {
      "doc": "APIDefinition represents the configuration for a single proxied API and it's versions.\n\nswagger:model",
      "types": [
        {
          "name": "APIDefinition",
          "fields": [
            {
              "name": "Id",
              "type": "model.ObjectID",
              "path": "APIDefinition.Id",
              "tag": "bson:\"_id,omitempty\" json:\"id,omitempty\" gorm:\"primaryKey;column:_id\"",
              "json_name": "id,omitempty"
            },
            {
              "name": "Name",
              "type": "string",
              "path": "APIDefinition.Name",
              "tag": "bson:\"name\" json:\"name\"",
              "json_name": "name"
            },
            {
              "name": "Expiration",
              "type": "string",
              "path": "APIDefinition.Expiration",
              "tag": "bson:\"expiration\" json:\"expiration,omitempty\"",
              "json_name": "expiration,omitempty"
            },
            {
              "name": "Slug",
              "type": "string",
              "path": "APIDefinition.Slug",
              "tag": "bson:\"slug\" json:\"slug\"",
              "json_name": "slug"
            },
            {
              "name": "ListenPort",
              "type": "int",
              "path": "APIDefinition.ListenPort",
              "tag": "bson:\"listen_port\" json:\"listen_port\"",
              "json_name": "listen_port"
            },
            {
              "name": "Protocol",
              "type": "string",
              "path": "APIDefinition.Protocol",
              "tag": "bson:\"protocol\" json:\"protocol\"",
              "json_name": "protocol"
            },
            {
              "name": "EnableProxyProtocol",
              "type": "bool",
              "path": "APIDefinition.EnableProxyProtocol",
              "tag": "bson:\"enable_proxy_protocol\" json:\"enable_proxy_protocol\"",
              "json_name": "enable_proxy_protocol"
            },
            {
              "name": "APIID",
              "type": "string",
              "path": "APIDefinition.APIID",
              "tag": "bson:\"api_id\" json:\"api_id\"",
              "json_name": "api_id"
            },
            {
              "name": "OrgID",
              "type": "string",
              "path": "APIDefinition.OrgID",
              "tag": "bson:\"org_id\" json:\"org_id\"",
              "json_name": "org_id"
            },
            {
              "name": "UseKeylessAccess",
              "type": "bool",
              "path": "APIDefinition.UseKeylessAccess",
              "tag": "bson:\"use_keyless\" json:\"use_keyless\"",
              "json_name": "use_keyless"
            },
            {
              "name": "UseOauth2",
              "type": "bool",
              "path": "APIDefinition.UseOauth2",
              "tag": "bson:\"use_oauth2\" json:\"use_oauth2\"",
              "json_name": "use_oauth2"
            },
            {
              "name": "ExternalOAuth",
              "type": "ExternalOAuth",
              "path": "APIDefinition.ExternalOAuth",
              "tag": "bson:\"external_oauth\" json:\"external_oauth\"",
              "json_name": "external_oauth"
            },
            {
              "name": "UseOpenID",
              "type": "bool",
              "path": "APIDefinition.UseOpenID",
              "tag": "bson:\"use_openid\" json:\"use_openid\"",
              "json_name": "use_openid"
            },
            {
              "name": "OpenIDOptions",
              "type": "OpenIDOptions",
              "path": "APIDefinition.OpenIDOptions",
              "tag": "bson:\"openid_options\" json:\"openid_options\"",
              "json_name": "openid_options"
            },
            {
              "name": "Oauth2Meta",
              "type": "struct{}",
              "path": "APIDefinition.Oauth2Meta",
              "tag": "bson:\"oauth_meta\" json:\"oauth_meta\"",
              "json_name": "oauth_meta"
            },
            {
              "name": "Auth",
              "type": "AuthConfig",
              "path": "APIDefinition.Auth",
              "comment": "Deprecated: Use AuthConfigs instead.",
              "tag": "bson:\"auth\" json:\"auth\"",
              "json_name": "auth"
            },
            {
              "name": "AuthConfigs",
              "type": "map[string]AuthConfig",
              "path": "APIDefinition.AuthConfigs",
              "tag": "bson:\"auth_configs\" json:\"auth_configs\"",
              "json_name": "auth_configs"
            },
            {
              "name": "UseBasicAuth",
              "type": "bool",
              "path": "APIDefinition.UseBasicAuth",
              "tag": "bson:\"use_basic_auth\" json:\"use_basic_auth\"",
              "json_name": "use_basic_auth"
            },
            {
              "name": "BasicAuth",
              "type": "struct{}",
              "path": "APIDefinition.BasicAuth",
              "tag": "bson:\"basic_auth\" json:\"basic_auth\"",
              "json_name": "basic_auth"
            },
            {
              "name": "UseMutualTLSAuth",
              "type": "bool",
              "path": "APIDefinition.UseMutualTLSAuth",
              "tag": "bson:\"use_mutual_tls_auth\" json:\"use_mutual_tls_auth\"",
              "json_name": "use_mutual_tls_auth"
            },
            {
              "name": "ClientCertificates",
              "type": "[]string",
              "path": "APIDefinition.ClientCertificates",
              "tag": "bson:\"client_certificates\" json:\"client_certificates\"",
              "json_name": "client_certificates"
            },
            {
              "name": "UpstreamCertificates",
              "type": "map[string]string",
              "path": "APIDefinition.UpstreamCertificates",
              "doc": "UpstreamCertificates stores the domain to certificate mapping for upstream mutualTLS",
              "tag": "bson:\"upstream_certificates\" json:\"upstream_certificates\"",
              "json_name": "upstream_certificates"
            },
            {
              "name": "UpstreamCertificatesDisabled",
              "type": "bool",
              "path": "APIDefinition.UpstreamCertificatesDisabled",
              "doc": "UpstreamCertificatesDisabled disables upstream mutualTLS on the API",
              "tag": "bson:\"upstream_certificates_disabled\" json:\"upstream_certificates_disabled,omitempty\"",
              "json_name": "upstream_certificates_disabled,omitempty"
            },
            {
              "name": "PinnedPublicKeys",
              "type": "map[string]string",
              "path": "APIDefinition.PinnedPublicKeys",
              "doc": "PinnedPublicKeys stores the public key pinning details",
              "tag": "bson:\"pinned_public_keys\" json:\"pinned_public_keys\"",
              "json_name": "pinned_public_keys"
            },
            {
              "name": "CertificatePinningDisabled",
              "type": "bool",
              "path": "APIDefinition.CertificatePinningDisabled",
              "doc": "CertificatePinningDisabled disables public key pinning",
              "tag": "bson:\"certificate_pinning_disabled\" json:\"certificate_pinning_disabled,omitempty\"",
              "json_name": "certificate_pinning_disabled,omitempty"
            },
            {
              "name": "EnableJWT",
              "type": "bool",
              "path": "APIDefinition.EnableJWT",
              "tag": "bson:\"enable_jwt\" json:\"enable_jwt\"",
              "json_name": "enable_jwt"
            },
            {
              "name": "UseStandardAuth",
              "type": "bool",
              "path": "APIDefinition.UseStandardAuth",
              "tag": "bson:\"use_standard_auth\" json:\"use_standard_auth\"",
              "json_name": "use_standard_auth"
            },
            {
              "name": "UseGoPluginAuth",
              "type": "bool",
              "path": "APIDefinition.UseGoPluginAuth",
              "comment": "Deprecated. Use CustomPluginAuthEnabled instead.",
              "tag": "bson:\"use_go_plugin_auth\" json:\"use_go_plugin_auth\"",
              "json_name": "use_go_plugin_auth"
            },
            {
              "name": "EnableCoProcessAuth",
              "type": "bool",
              "path": "APIDefinition.EnableCoProcessAuth",
              "comment": "Deprecated. Use CustomPluginAuthEnabled instead.",
              "tag": "bson:\"enable_coprocess_auth\" json:\"enable_coprocess_auth\"",
              "json_name": "enable_coprocess_auth"
            },
            {
              "name": "CustomPluginAuthEnabled",
              "type": "bool",
              "path": "APIDefinition.CustomPluginAuthEnabled",
              "tag": "bson:\"custom_plugin_auth_enabled\" json:\"custom_plugin_auth_enabled\"",
              "json_name": "custom_plugin_auth_enabled"
            },
            {
              "name": "JWTSigningMethod",
              "type": "string",
              "path": "APIDefinition.JWTSigningMethod",
              "tag": "bson:\"jwt_signing_method\" json:\"jwt_signing_method\"",
              "json_name": "jwt_signing_method"
            },
            {
              "name": "JWTSource",
              "type": "string",
              "path": "APIDefinition.JWTSource",
              "tag": "bson:\"jwt_source\" json:\"jwt_source\"",
              "json_name": "jwt_source"
            },
            {
              "name": "JWTIdentityBaseField",
              "type": "string",
              "path": "APIDefinition.JWTIdentityBaseField",
              "tag": "bson:\"jwt_identit_base_field\" json:\"jwt_identity_base_field\"",
              "json_name": "jwt_identity_base_field"
            },
            {
              "name": "JWTClientIDBaseField",
              "type": "string",
              "path": "APIDefinition.JWTClientIDBaseField",
              "tag": "bson:\"jwt_client_base_field\" json:\"jwt_client_base_field\"",
              "json_name": "jwt_client_base_field"
            },
            {
              "name": "JWTPolicyFieldName",
              "type": "string",
              "path": "APIDefinition.JWTPolicyFieldName",
              "tag": "bson:\"jwt_policy_field_name\" json:\"jwt_policy_field_name\"",
              "json_name": "jwt_policy_field_name"
            },
            {
              "name": "JWTDefaultPolicies",
              "type": "[]string",
              "path": "APIDefinition.JWTDefaultPolicies",
              "tag": "bson:\"jwt_default_policies\" json:\"jwt_default_policies\"",
              "json_name": "jwt_default_policies"
            },
            {
              "name": "JWTIssuedAtValidationSkew",
              "type": "uint64",
              "path": "APIDefinition.JWTIssuedAtValidationSkew",
              "tag": "bson:\"jwt_issued_at_validation_skew\" json:\"jwt_issued_at_validation_skew\"",
              "json_name": "jwt_issued_at_validation_skew"
            },
            {
              "name": "JWTExpiresAtValidationSkew",
              "type": "uint64",
              "path": "APIDefinition.JWTExpiresAtValidationSkew",
              "tag": "bson:\"jwt_expires_at_validation_skew\" json:\"jwt_expires_at_validation_skew\"",
              "json_name": "jwt_expires_at_validation_skew"
            },
            {
              "name": "JWTNotBeforeValidationSkew",
              "type": "uint64",
              "path": "APIDefinition.JWTNotBeforeValidationSkew",
              "tag": "bson:\"jwt_not_before_validation_skew\" json:\"jwt_not_before_validation_skew\"",
              "json_name": "jwt_not_before_validation_skew"
            },
            {
              "name": "JWTSkipKid",
              "type": "bool",
              "path": "APIDefinition.JWTSkipKid",
              "tag": "bson:\"jwt_skip_kid\" json:\"jwt_skip_kid\"",
              "json_name": "jwt_skip_kid"
            },
            {
              "name": "Scopes",
              "type": "Scopes",
              "path": "APIDefinition.Scopes",
              "tag": "bson:\"scopes\" json:\"scopes,omitempty\"",
              "json_name": "scopes,omitempty"
            },
            {
              "name": "JWTScopeToPolicyMapping",
              "type": "map[string]string",
              "path": "APIDefinition.JWTScopeToPolicyMapping",
              "comment": "Deprecated: use Scopes.JWT.ScopeToPolicy or Scopes.OIDC.ScopeToPolicy",
              "tag": "bson:\"jwt_scope_to_policy_mapping\" json:\"jwt_scope_to_policy_mapping\"",
              "json_name": "jwt_scope_to_policy_mapping"
            },
            {
              "name": "JWTScopeClaimName",
              "type": "string",
              "path": "APIDefinition.JWTScopeClaimName",
              "comment": "Deprecated: use Scopes.JWT.ScopeClaimName or Scopes.OIDC.ScopeClaimName",
              "tag": "bson:\"jwt_scope_claim_name\" json:\"jwt_scope_claim_name\"",
              "json_name": "jwt_scope_claim_name"
            },
            {
              "name": "NotificationsDetails",
              "type": "NotificationsManager",
              "path": "APIDefinition.NotificationsDetails",
              "tag": "bson:\"notifications\" json:\"notifications\"",
              "json_name": "notifications"
            },
            {
              "name": "EnableSignatureChecking",
              "type": "bool",
              "path": "APIDefinition.EnableSignatureChecking",
              "tag": "bson:\"enable_signature_checking\" json:\"enable_signature_checking\"",
              "json_name": "enable_signature_checking"
            },
            {
              "name": "HmacAllowedClockSkew",
              "type": "float64",
              "path": "APIDefinition.HmacAllowedClockSkew",
              "tag": "bson:\"hmac_allowed_clock_skew\" json:\"hmac_allowed_clock_skew\"",
              "json_name": "hmac_allowed_clock_skew"
            },
            {
              "name": "HmacAllowedAlgorithms",
              "type": "[]string",
              "path": "APIDefinition.HmacAllowedAlgorithms",
              "tag": "bson:\"hmac_allowed_algorithms\" json:\"hmac_allowed_algorithms\"",
              "json_name": "hmac_allowed_algorithms"
            },
            {
              "name": "RequestSigning",
              "type": "RequestSigningMeta",
              "path": "APIDefinition.RequestSigning",
              "tag": "bson:\"request_signing\" json:\"request_signing\"",
              "json_name": "request_signing"
            },
            {
              "name": "BaseIdentityProvidedBy",
              "type": "AuthTypeEnum",
              "path": "APIDefinition.BaseIdentityProvidedBy",
              "tag": "bson:\"base_identity_provided_by\" json:\"base_identity_provided_by\"",
              "json_name": "base_identity_provided_by"
            },
            {
              "name": "VersionDefinition",
              "type": "VersionDefinition",
              "path": "APIDefinition.VersionDefinition",
              "tag": "bson:\"definition\" json:\"definition\"",
              "json_name": "definition"
            },
            {
              "name": "VersionData",
              "type": "VersionData",
              "path": "APIDefinition.VersionData",
              "comment": "Deprecated. Use VersionDefinition instead.",
              "tag": "bson:\"version_data\" json:\"version_data\"",
              "json_name": "version_data"
            },
            {
              "name": "UptimeTests",
              "type": "UptimeTests",
              "path": "APIDefinition.UptimeTests",
              "tag": "bson:\"uptime_tests\" json:\"uptime_tests\"",
              "json_name": "uptime_tests"
            },
            {
              "name": "Proxy",
              "type": "ProxyConfig",
              "path": "APIDefinition.Proxy",
              "tag": "bson:\"proxy\" json:\"proxy\"",
              "json_name": "proxy"
            },
            {
              "name": "DisableRateLimit",
              "type": "bool",
              "path": "APIDefinition.DisableRateLimit",
              "tag": "bson:\"disable_rate_limit\" json:\"disable_rate_limit\"",
              "json_name": "disable_rate_limit"
            },
            {
              "name": "DisableQuota",
              "type": "bool",
              "path": "APIDefinition.DisableQuota",
              "tag": "bson:\"disable_quota\" json:\"disable_quota\"",
              "json_name": "disable_quota"
            },
            {
              "name": "CustomMiddleware",
              "type": "MiddlewareSection",
              "path": "APIDefinition.CustomMiddleware",
              "tag": "bson:\"custom_middleware\" json:\"custom_middleware\"",
              "json_name": "custom_middleware"
            },
            {
              "name": "CustomMiddlewareBundle",
              "type": "string",
              "path": "APIDefinition.CustomMiddlewareBundle",
              "tag": "bson:\"custom_middleware_bundle\" json:\"custom_middleware_bundle\"",
              "json_name": "custom_middleware_bundle"
            },
            {
              "name": "CustomMiddlewareBundleDisabled",
              "type": "bool",
              "path": "APIDefinition.CustomMiddlewareBundleDisabled",
              "tag": "bson:\"custom_middleware_bundle_disabled\" json:\"custom_middleware_bundle_disabled\"",
              "json_name": "custom_middleware_bundle_disabled"
            },
            {
              "name": "CacheOptions",
              "type": "CacheOptions",
              "path": "APIDefinition.CacheOptions",
              "tag": "bson:\"cache_options\" json:\"cache_options\"",
              "json_name": "cache_options"
            },
            {
              "name": "SessionLifetimeRespectsKeyExpiration",
              "type": "bool",
              "path": "APIDefinition.SessionLifetimeRespectsKeyExpiration",
              "tag": "bson:\"session_lifetime_respects_key_expiration\" json:\"session_lifetime_respects_key_expiration,omitempty\"",
              "json_name": "session_lifetime_respects_key_expiration,omitempty"
            },
            {
              "name": "SessionLifetime",
              "type": "int64",
              "path": "APIDefinition.SessionLifetime",
              "tag": "bson:\"session_lifetime\" json:\"session_lifetime\"",
              "json_name": "session_lifetime"
            },
            {
              "name": "Active",
              "type": "bool",
              "path": "APIDefinition.Active",
              "tag": "bson:\"active\" json:\"active\"",
              "json_name": "active"
            },
            {
              "name": "Internal",
              "type": "bool",
              "path": "APIDefinition.Internal",
              "tag": "bson:\"internal\" json:\"internal\"",
              "json_name": "internal"
            },
            {
              "name": "AuthProvider",
              "type": "AuthProviderMeta",
              "path": "APIDefinition.AuthProvider",
              "tag": "bson:\"auth_provider\" json:\"auth_provider\"",
              "json_name": "auth_provider"
            },
            {
              "name": "SessionProvider",
              "type": "SessionProviderMeta",
              "path": "APIDefinition.SessionProvider",
              "tag": "bson:\"session_provider\" json:\"session_provider\"",
              "json_name": "session_provider"
            },
            {
              "name": "EventHandlers",
              "type": "EventHandlerMetaConfig",
              "path": "APIDefinition.EventHandlers",
              "tag": "bson:\"event_handlers\" json:\"event_handlers\"",
              "json_name": "event_handlers"
            },
            {
              "name": "EnableBatchRequestSupport",
              "type": "bool",
              "path": "APIDefinition.EnableBatchRequestSupport",
              "tag": "bson:\"enable_batch_request_support\" json:\"enable_batch_request_support\"",
              "json_name": "enable_batch_request_support"
            },
            {
              "name": "EnableIpWhiteListing",
              "type": "bool",
              "path": "APIDefinition.EnableIpWhiteListing",
              "tag": "mapstructure:\"enable_ip_whitelisting\" bson:\"enable_ip_whitelisting\" json:\"enable_ip_whitelisting\"",
              "json_name": "enable_ip_whitelisting"
            },
            {
              "name": "AllowedIPs",
              "type": "[]string",
              "path": "APIDefinition.AllowedIPs",
              "tag": "mapstructure:\"allowed_ips\" bson:\"allowed_ips\" json:\"allowed_ips\"",
              "json_name": "allowed_ips"
            },
            {
              "name": "EnableIpBlacklisting",
              "type": "bool",
              "path": "APIDefinition.EnableIpBlacklisting",
              "tag": "mapstructure:\"enable_ip_blacklisting\" bson:\"enable_ip_blacklisting\" json:\"enable_ip_blacklisting\"",
              "json_name": "enable_ip_blacklisting"
            },
            {
              "name": "BlacklistedIPs",
              "type": "[]string",
              "path": "APIDefinition.BlacklistedIPs",
              "tag": "mapstructure:\"blacklisted_ips\" bson:\"blacklisted_ips\" json:\"blacklisted_ips\"",
              "json_name": "blacklisted_ips"
            },
            {
              "name": "DontSetQuotasOnCreate",
              "type": "bool",
              "path": "APIDefinition.DontSetQuotasOnCreate",
              "tag": "mapstructure:\"dont_set_quota_on_create\" bson:\"dont_set_quota_on_create\" json:\"dont_set_quota_on_create\"",
              "json_name": "dont_set_quota_on_create"
            },
            {
              "name": "ExpireAnalyticsAfter",
              "type": "int64",
              "path": "APIDefinition.ExpireAnalyticsAfter",
              "comment": "must have an expireAt TTL index set (http://docs.mongodb.org/manual/tutorial/expire-data/)",
              "tag": "mapstructure:\"expire_analytics_after\" bson:\"expire_analytics_after\" json:\"expire_analytics_after\"",
              "json_name": "expire_analytics_after"
            },
            {
              "name": "ResponseProcessors",
              "type": "[]ResponseProcessor",
              "path": "APIDefinition.ResponseProcessors",
              "tag": "bson:\"response_processors\" json:\"response_processors\"",
              "json_name": "response_processors"
            },
            {
              "name": "CORS",
              "type": "CORSConfig",
              "path": "APIDefinition.CORS",
              "tag": "bson:\"CORS\" json:\"CORS\"",
              "json_name": "CORS"
            },
            {
              "name": "Domain",
              "type": "string",
              "path": "APIDefinition.Domain",
              "tag": "bson:\"domain\" json:\"domain\"",
              "json_name": "domain"
            },
            {
              "name": "DomainDisabled",
              "type": "bool",
              "path": "APIDefinition.DomainDisabled",
              "tag": "bson:\"domain_disabled\" json:\"domain_disabled,omitempty\"",
              "json_name": "domain_disabled,omitempty"
            },
            {
              "name": "Certificates",
              "type": "[]string",
              "path": "APIDefinition.Certificates",
              "tag": "bson:\"certificates\" json:\"certificates\"",
              "json_name": "certificates"
            },
            {
              "name": "DoNotTrack",
              "type": "bool",
              "path": "APIDefinition.DoNotTrack",
              "tag": "bson:\"do_not_track\" json:\"do_not_track\"",
              "json_name": "do_not_track"
            },
            {
              "name": "EnableContextVars",
              "type": "bool",
              "path": "APIDefinition.EnableContextVars",
              "tag": "bson:\"enable_context_vars\" json:\"enable_context_vars\"",
              "json_name": "enable_context_vars"
            },
            {
              "name": "ConfigData",
              "type": "map[string]interface{}",
              "path": "APIDefinition.ConfigData",
              "tag": "bson:\"config_data\" json:\"config_data\"",
              "json_name": "config_data"
            },
            {
              "name": "ConfigDataDisabled",
              "type": "bool",
              "path": "APIDefinition.ConfigDataDisabled",
              "tag": "bson:\"config_data_disabled\" json:\"config_data_disabled\"",
              "json_name": "config_data_disabled"
            },
            {
              "name": "TagHeaders",
              "type": "[]string",
              "path": "APIDefinition.TagHeaders",
              "tag": "bson:\"tag_headers\" json:\"tag_headers\"",
              "json_name": "tag_headers"
            },
            {
              "name": "GlobalRateLimit",
              "type": "GlobalRateLimit",
              "path": "APIDefinition.GlobalRateLimit",
              "tag": "bson:\"global_rate_limit\" json:\"global_rate_limit\"",
              "json_name": "global_rate_limit"
            },
            {
              "name": "StripAuthData",
              "type": "bool",
              "path": "APIDefinition.StripAuthData",
              "tag": "bson:\"strip_auth_data\" json:\"strip_auth_data\"",
              "json_name": "strip_auth_data"
            },
            {
              "name": "EnableDetailedRecording",
              "type": "bool",
              "path": "APIDefinition.EnableDetailedRecording",
              "tag": "bson:\"enable_detailed_recording\" json:\"enable_detailed_recording\"",
              "json_name": "enable_detailed_recording"
            },
            {
              "name": "GraphQL",
              "type": "GraphQLConfig",
              "path": "APIDefinition.GraphQL",
              "tag": "bson:\"graphql\" json:\"graphql\"",
              "json_name": "graphql"
            },
            {
              "name": "AnalyticsPlugin",
              "type": "AnalyticsPluginConfig",
              "path": "APIDefinition.AnalyticsPlugin",
              "tag": "bson:\"analytics_plugin\" json:\"analytics_plugin,omitempty\"",
              "json_name": "analytics_plugin,omitempty"
            },
            {
              "name": "TagsDisabled",
              "type": "bool",
              "path": "APIDefinition.TagsDisabled",
              "doc": "Gateway segment tags",
              "tag": "bson:\"tags_disabled\" json:\"tags_disabled,omitempty\"",
              "json_name": "tags_disabled,omitempty"
            },
            {
              "name": "Tags",
              "type": "[]string",
              "path": "APIDefinition.Tags",
              "tag": "bson:\"tags\" json:\"tags\"",
              "json_name": "tags"
            },
            {
              "name": "IsOAS",
              "type": "bool",
              "path": "APIDefinition.IsOAS",
              "doc": "IsOAS is set to true when API has an OAS definition (created in OAS or migrated to OAS)",
              "tag": "bson:\"is_oas\" json:\"is_oas,omitempty\"",
              "json_name": "is_oas,omitempty"
            }
          ]
        }
      ]
    },
    {
      "doc": "GraphQLConfig is the root config object for a GraphQL API.",
      "types": [
        {
          "name": "GraphQLConfig",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "GraphQLConfig.Enabled",
              "doc": "Enabled indicates if GraphQL should be enabled.",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "ExecutionMode",
              "type": "GraphQLExecutionMode",
              "path": "GraphQLConfig.ExecutionMode",
              "doc": "ExecutionMode is the mode to define how an api behaves.",
              "tag": "bson:\"execution_mode\" json:\"execution_mode\"",
              "json_name": "execution_mode"
            },
            {
              "name": "Version",
              "type": "GraphQLConfigVersion",
              "path": "GraphQLConfig.Version",
              "doc": "Version defines the version of the GraphQL config and engine to be used.",
              "tag": "bson:\"version\" json:\"version\"",
              "json_name": "version"
            },
            {
              "name": "Schema",
              "type": "string",
              "path": "GraphQLConfig.Schema",
              "doc": "Schema is the GraphQL Schema exposed by the GraphQL API/Upstream/Engine.",
              "tag": "bson:\"schema\" json:\"schema\"",
              "json_name": "schema"
            },
            {
              "name": "LastSchemaUpdate",
              "type": "time.Time",
              "path": "GraphQLConfig.LastSchemaUpdate",
              "doc": "LastSchemaUpdate contains the date and time of the last triggered schema update to the upstream.",
              "tag": "bson:\"last_schema_update\" json:\"last_schema_update,omitempty\"",
              "json_name": "last_schema_update,omitempty"
            },
            {
              "name": "TypeFieldConfigurations",
              "type": "[]datasource.TypeFieldConfiguration",
              "path": "GraphQLConfig.TypeFieldConfigurations",
              "doc": "TypeFieldConfigurations is a rule set of data source and mapping of a schema field.",
              "tag": "bson:\"type_field_configurations\" json:\"type_field_configurations\"",
              "json_name": "type_field_configurations"
            },
            {
              "name": "GraphQLPlayground",
              "type": "GraphQLPlayground",
              "path": "GraphQLConfig.GraphQLPlayground",
              "doc": "GraphQLPlayground is the Playground specific configuration.",
              "tag": "bson:\"playground\" json:\"playground\"",
              "json_name": "playground"
            },
            {
              "name": "Engine",
              "type": "GraphQLEngineConfig",
              "path": "GraphQLConfig.Engine",
              "doc": "Engine holds the configuration for engine v2 and upwards.",
              "tag": "bson:\"engine\" json:\"engine\"",
              "json_name": "engine"
            },
            {
              "name": "Proxy",
              "type": "GraphQLProxyConfig",
              "path": "GraphQLConfig.Proxy",
              "doc": "Proxy holds the configuration for a proxy only api.",
              "tag": "bson:\"proxy\" json:\"proxy\"",
              "json_name": "proxy"
            },
            {
              "name": "Subgraph",
              "type": "GraphQLSubgraphConfig",
              "path": "GraphQLConfig.Subgraph",
              "doc": "Subgraph holds the configuration for a GraphQL federation subgraph.",
              "tag": "bson:\"subgraph\" json:\"subgraph\"",
              "json_name": "subgraph"
            },
            {
              "name": "Supergraph",
              "type": "GraphQLSupergraphConfig",
              "path": "GraphQLConfig.Supergraph",
              "doc": "Supergraph holds the configuration for a GraphQL federation supergraph.",
              "tag": "bson:\"supergraph\" json:\"supergraph\"",
              "json_name": "supergraph"
            }
          ]
        }
      ]
    },
    {
      "doc": "GraphQLExecutionMode is the mode in which the GraphQL Middleware should operate.",
      "types": [
        {
          "name": "GraphQLExecutionMode",
          "type": "string"
        }
      ]
    },
    {
      "doc": "GraphQLPlayground represents the configuration for the public playground which will be hosted alongside the api.",
      "types": [
        {
          "name": "GraphQLPlayground",
          "fields": [
            {
              "name": "Enabled",
              "type": "bool",
              "path": "GraphQLPlayground.Enabled",
              "doc": "Enabled indicates if the playground should be enabled.",
              "tag": "bson:\"enabled\" json:\"enabled\"",
              "json_name": "enabled"
            },
            {
              "name": "Path",
              "type": "string",
              "path": "GraphQLPlayground.Path",
              "doc": "Path sets the path on which the playground will be hosted if enabled.",
              "tag": "bson:\"path\" json:\"path\"",
              "json_name": "path"
            }
          ]
        }
      ]
    },
    {
      "doc": "IDExtractorConfig specifies the configuration for ID extractor",
      "types": [
        {
          "name": "IDExtractorConfig",
          "fields": [
            {
              "name": "HeaderName",
              "type": "string",
              "path": "IDExtractorConfig.HeaderName",
              "doc": "HeaderName is the header name to extract ID from.",
              "tag": "mapstructure:\"header_name\" bson:\"header_name\" json:\"header_name\"",
              "json_name": "header_name"
            },
            {
              "name": "FormParamName",
              "type": "string",
              "path": "IDExtractorConfig.FormParamName",
              "doc": "FormParamName is the form parameter name to extract ID from.",
              "tag": "mapstructure:\"param_name\" bson:\"param_name\" json:\"param_name\"",
              "json_name": "param_name"
            },
            {
              "name": "RegexExpression",
              "type": "string",
              "path": "IDExtractorConfig.RegexExpression",
              "doc": "RegexExpression is the regular expression to match ID.",
              "tag": "mapstructure:\"regex_expression\" bson:\"regex_expression\" json:\"regex_expression\"",
              "json_name": "regex_expression"
            },
            {
              "name": "RegexMatchIndex",
              "type": "int",
              "path": "IDExtractorConfig.RegexMatchIndex",
              "doc": "RegexMatchIndex is the index from which ID to be extracted after a match.",
              "tag": "mapstructure:\"regex_match_index\" bson:\"regex_match_index\" json:\"regex_match_index\"",
              "json_name": "regex_match_index"
            },
            {
              "name": "XPathExpression",
              "type": "string",
              "path": "IDExtractorConfig.XPathExpression",
              "doc": "XPathExp is the xpath expression to match ID.",
              "tag": "mapstructure:\"xpath_expression\" bson:\"xpath_expression\" json:\"xpath_expression\"",
              "json_name": "xpath_expression"
            }
          ]
        }
      ]
    },
    {
      "doc": "NotificationsManager handles sending notifications to OAuth endpoints to notify the provider of key changes.\nTODO: Make this more generic",
      "types": [
        {
          "name": "NotificationsManager",
          "fields": [
            {
              "name": "SharedSecret",
              "type": "string",
              "path": "NotificationsManager.SharedSecret",
              "tag": "bson:\"shared_secret\" json:\"shared_secret\"",
              "json_name": "shared_secret"
            },
            {
              "name": "OAuthKeyChangeURL",
              "type": "string",
              "path": "NotificationsManager.OAuthKeyChangeURL",
              "tag": "bson:\"oauth_on_keychange_url\" json:\"oauth_on_keychange_url\"",
              "json_name": "oauth_on_keychange_url"
            }
          ]
        }
      ]
    }
  ]
}