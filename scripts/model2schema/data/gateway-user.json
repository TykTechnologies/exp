[
  {
    "name": "user",
    "imports": [
      "\"crypto/md5\"",
      "\"encoding/json\"",
      "\"errors\"",
      "\"fmt\"",
      "\"github.com/TykTechnologies/graphql-go-tools/pkg/graphql\"",
      "\"github.com/TykTechnologies/storage/persistent/model\"",
      "\"github.com/TykTechnologies/tyk/apidef\"",
      "\"time\"",
      "logger \"github.com/TykTechnologies/tyk/log\""
    ],
    "declarations": [
      {
        "types": [
          {
            "name": "GraphAccessDefinition"
          }
        ]
      },
      {
        "types": [
          {
            "name": "PolicyPartitions",
            "fields": [
              {
                "name": "Quota",
                "type": "bool",
                "path": "PolicyPartitions.Quota",
                "tag": "bson:\"quota\" json:\"quota\"",
                "json_name": "quota"
              },
              {
                "name": "RateLimit",
                "type": "bool",
                "path": "PolicyPartitions.RateLimit",
                "tag": "bson:\"rate_limit\" json:\"rate_limit\"",
                "json_name": "rate_limit"
              },
              {
                "name": "Complexity",
                "type": "bool",
                "path": "PolicyPartitions.Complexity",
                "tag": "bson:\"complexity\" json:\"complexity\"",
                "json_name": "complexity"
              },
              {
                "name": "Acl",
                "type": "bool",
                "path": "PolicyPartitions.Acl",
                "tag": "bson:\"acl\" json:\"acl\"",
                "json_name": "acl"
              },
              {
                "name": "PerAPI",
                "type": "bool",
                "path": "PolicyPartitions.PerAPI",
                "tag": "bson:\"per_api\" json:\"per_api\"",
                "json_name": "per_api"
              }
            ]
          }
        ]
      },
      {
        "types": [
          {
            "name": "HashType",
            "type": "string"
          }
        ]
      },
      {
        "types": [
          {
            "name": "FieldAccessDefinition",
            "fields": [
              {
                "name": "TypeName",
                "type": "string",
                "path": "FieldAccessDefinition.TypeName",
                "tag": "json:\"type_name\" msg:\"type_name\"",
                "json_name": "type_name"
              },
              {
                "name": "FieldName",
                "type": "string",
                "path": "FieldAccessDefinition.FieldName",
                "tag": "json:\"field_name\" msg:\"field_name\"",
                "json_name": "field_name"
              },
              {
                "name": "Limits",
                "type": "FieldLimits",
                "path": "FieldAccessDefinition.Limits",
                "tag": "json:\"limits\" msg:\"limits\"",
                "json_name": "limits"
              }
            ]
          }
        ]
      },
      {
        "types": [
          {
            "name": "FieldLimits",
            "fields": [
              {
                "name": "MaxQueryDepth",
                "type": "int",
                "path": "FieldLimits.MaxQueryDepth",
                "tag": "json:\"max_query_depth\" msg:\"max_query_depth\"",
                "json_name": "max_query_depth"
              }
            ]
          }
        ]
      },
      {
        "types": [
          {
            "name": "BasicAuthData",
            "fields": [
              {
                "name": "Password",
                "type": "string",
                "path": "BasicAuthData.Password",
                "tag": "json:\"password\" msg:\"password\"",
                "json_name": "password"
              },
              {
                "name": "Hash",
                "type": "HashType",
                "path": "BasicAuthData.Hash",
                "tag": "json:\"hash_type\" msg:\"hash_type\"",
                "json_name": "hash_type"
              }
            ]
          }
        ]
      },
      {
        "types": [
          {
            "name": "JWTData",
            "fields": [
              {
                "name": "Secret",
                "type": "string",
                "path": "JWTData.Secret",
                "tag": "json:\"secret\" msg:\"secret\"",
                "json_name": "secret"
              }
            ]
          }
        ]
      },
      {
        "types": [
          {
            "name": "Monitor",
            "fields": [
              {
                "name": "TriggerLimits",
                "type": "[]float64",
                "path": "Monitor.TriggerLimits",
                "tag": "json:\"trigger_limits\" msg:\"trigger_limits\"",
                "json_name": "trigger_limits"
              }
            ]
          }
        ]
      },
      {
        "doc": "APILimit stores quota and rate limit on ACL level (per API)",
        "types": [
          {
            "name": "APILimit",
            "fields": [
              {
                "name": "Rate",
                "type": "float64",
                "path": "APILimit.Rate",
                "tag": "json:\"rate\" msg:\"rate\"",
                "json_name": "rate"
              },
              {
                "name": "Per",
                "type": "float64",
                "path": "APILimit.Per",
                "tag": "json:\"per\" msg:\"per\"",
                "json_name": "per"
              },
              {
                "name": "ThrottleInterval",
                "type": "float64",
                "path": "APILimit.ThrottleInterval",
                "tag": "json:\"throttle_interval\" msg:\"throttle_interval\"",
                "json_name": "throttle_interval"
              },
              {
                "name": "ThrottleRetryLimit",
                "type": "int",
                "path": "APILimit.ThrottleRetryLimit",
                "tag": "json:\"throttle_retry_limit\" msg:\"throttle_retry_limit\"",
                "json_name": "throttle_retry_limit"
              },
              {
                "name": "MaxQueryDepth",
                "type": "int",
                "path": "APILimit.MaxQueryDepth",
                "tag": "json:\"max_query_depth\" msg:\"max_query_depth\"",
                "json_name": "max_query_depth"
              },
              {
                "name": "QuotaMax",
                "type": "int64",
                "path": "APILimit.QuotaMax",
                "tag": "json:\"quota_max\" msg:\"quota_max\"",
                "json_name": "quota_max"
              },
              {
                "name": "QuotaRenews",
                "type": "int64",
                "path": "APILimit.QuotaRenews",
                "tag": "json:\"quota_renews\" msg:\"quota_renews\"",
                "json_name": "quota_renews"
              },
              {
                "name": "QuotaRemaining",
                "type": "int64",
                "path": "APILimit.QuotaRemaining",
                "tag": "json:\"quota_remaining\" msg:\"quota_remaining\"",
                "json_name": "quota_remaining"
              },
              {
                "name": "QuotaRenewalRate",
                "type": "int64",
                "path": "APILimit.QuotaRenewalRate",
                "tag": "json:\"quota_renewal_rate\" msg:\"quota_renewal_rate\"",
                "json_name": "quota_renewal_rate"
              },
              {
                "name": "SetBy",
                "type": "string",
                "path": "APILimit.SetBy",
                "tag": "json:\"-\" msg:\"-\"",
                "json_name": ""
              },
              {
                "name": "Smoothing",
                "type": "apidef.RateLimitSmoothing",
                "path": "APILimit.Smoothing",
                "doc": "Smoothing contains rate limit smoothing settings.",
                "tag": "json:\"smoothing\" bson:\"smoothing\"",
                "json_name": "smoothing"
              }
            ]
          }
        ]
      },
      {
        "doc": "AccessDefinition defines which versions of an API a key has access to\nNOTE: when adding new fields it is required to map them from DBAccessDefinition\nin the gateway/policy.go:19\nTODO: is it possible to share fields?",
        "types": [
          {
            "name": "AccessDefinition",
            "fields": [
              {
                "name": "APIName",
                "type": "string",
                "path": "AccessDefinition.APIName",
                "tag": "json:\"api_name\" msg:\"api_name\"",
                "json_name": "api_name"
              },
              {
                "name": "APIID",
                "type": "string",
                "path": "AccessDefinition.APIID",
                "tag": "json:\"api_id\" msg:\"api_id\"",
                "json_name": "api_id"
              },
              {
                "name": "Versions",
                "type": "[]string",
                "path": "AccessDefinition.Versions",
                "tag": "json:\"versions\" msg:\"versions\"",
                "json_name": "versions"
              },
              {
                "name": "AllowedURLs",
                "type": "[]AccessSpec",
                "path": "AccessDefinition.AllowedURLs",
                "comment": "mapped string MUST be a valid regex",
                "tag": "bson:\"allowed_urls\" json:\"allowed_urls\" msg:\"allowed_urls\"",
                "json_name": "allowed_urls"
              },
              {
                "name": "RestrictedTypes",
                "type": "[]graphql.Type",
                "path": "AccessDefinition.RestrictedTypes",
                "tag": "json:\"restricted_types\" msg:\"restricted_types\"",
                "json_name": "restricted_types"
              },
              {
                "name": "AllowedTypes",
                "type": "[]graphql.Type",
                "path": "AccessDefinition.AllowedTypes",
                "tag": "json:\"allowed_types\" msg:\"allowed_types\"",
                "json_name": "allowed_types"
              },
              {
                "name": "Limit",
                "type": "APILimit",
                "path": "AccessDefinition.Limit",
                "tag": "json:\"limit\" msg:\"limit\"",
                "json_name": "limit"
              },
              {
                "name": "FieldAccessRights",
                "type": "[]FieldAccessDefinition",
                "path": "AccessDefinition.FieldAccessRights",
                "tag": "json:\"field_access_rights\" msg:\"field_access_rights\"",
                "json_name": "field_access_rights"
              },
              {
                "name": "DisableIntrospection",
                "type": "bool",
                "path": "AccessDefinition.DisableIntrospection",
                "tag": "json:\"disable_introspection\" msg:\"disable_introspection\"",
                "json_name": "disable_introspection"
              },
              {
                "name": "AllowanceScope",
                "type": "string",
                "path": "AccessDefinition.AllowanceScope",
                "tag": "json:\"allowance_scope\" msg:\"allowance_scope\"",
                "json_name": "allowance_scope"
              }
            ]
          }
        ]
      },
      {
        "doc": "AccessSpecs define what URLS a user has access to an what methods are enabled",
        "types": [
          {
            "name": "AccessSpec",
            "fields": [
              {
                "name": "URL",
                "type": "string",
                "path": "AccessSpec.URL",
                "tag": "json:\"url\" msg:\"url\"",
                "json_name": "url"
              },
              {
                "name": "Methods",
                "type": "[]string",
                "path": "AccessSpec.Methods",
                "tag": "json:\"methods\" msg:\"methods\"",
                "json_name": "methods"
              }
            ]
          }
        ]
      },
      {
        "doc": "Policy represents a user policy\nswagger:model",
        "types": [
          {
            "name": "Policy",
            "fields": [
              {
                "name": "MID",
                "type": "model.ObjectID",
                "path": "Policy.MID",
                "tag": "bson:\"_id,omitempty\" json:\"_id\" gorm:\"primaryKey;column:_id\"",
                "json_name": "_id"
              },
              {
                "name": "ID",
                "type": "string",
                "path": "Policy.ID",
                "tag": "bson:\"id,omitempty\" json:\"id\"",
                "json_name": "id"
              },
              {
                "name": "Name",
                "type": "string",
                "path": "Policy.Name",
                "tag": "bson:\"name\" json:\"name\"",
                "json_name": "name"
              },
              {
                "name": "OrgID",
                "type": "string",
                "path": "Policy.OrgID",
                "tag": "bson:\"org_id\" json:\"org_id\"",
                "json_name": "org_id"
              },
              {
                "name": "Rate",
                "type": "float64",
                "path": "Policy.Rate",
                "tag": "bson:\"rate\" json:\"rate\"",
                "json_name": "rate"
              },
              {
                "name": "Per",
                "type": "float64",
                "path": "Policy.Per",
                "tag": "bson:\"per\" json:\"per\"",
                "json_name": "per"
              },
              {
                "name": "QuotaMax",
                "type": "int64",
                "path": "Policy.QuotaMax",
                "tag": "bson:\"quota_max\" json:\"quota_max\"",
                "json_name": "quota_max"
              },
              {
                "name": "QuotaRenewalRate",
                "type": "int64",
                "path": "Policy.QuotaRenewalRate",
                "tag": "bson:\"quota_renewal_rate\" json:\"quota_renewal_rate\"",
                "json_name": "quota_renewal_rate"
              },
              {
                "name": "ThrottleInterval",
                "type": "float64",
                "path": "Policy.ThrottleInterval",
                "tag": "bson:\"throttle_interval\" json:\"throttle_interval\"",
                "json_name": "throttle_interval"
              },
              {
                "name": "ThrottleRetryLimit",
                "type": "int",
                "path": "Policy.ThrottleRetryLimit",
                "tag": "bson:\"throttle_retry_limit\" json:\"throttle_retry_limit\"",
                "json_name": "throttle_retry_limit"
              },
              {
                "name": "MaxQueryDepth",
                "type": "int",
                "path": "Policy.MaxQueryDepth",
                "tag": "bson:\"max_query_depth\" json:\"max_query_depth\"",
                "json_name": "max_query_depth"
              },
              {
                "name": "AccessRights",
                "type": "map[string]AccessDefinition",
                "path": "Policy.AccessRights",
                "tag": "bson:\"access_rights\" json:\"access_rights\"",
                "json_name": "access_rights"
              },
              {
                "name": "HMACEnabled",
                "type": "bool",
                "path": "Policy.HMACEnabled",
                "tag": "bson:\"hmac_enabled\" json:\"hmac_enabled\"",
                "json_name": "hmac_enabled"
              },
              {
                "name": "EnableHTTPSignatureValidation",
                "type": "bool",
                "path": "Policy.EnableHTTPSignatureValidation",
                "tag": "json:\"enable_http_signature_validation\" msg:\"enable_http_signature_validation\"",
                "json_name": "enable_http_signature_validation"
              },
              {
                "name": "Active",
                "type": "bool",
                "path": "Policy.Active",
                "tag": "bson:\"active\" json:\"active\"",
                "json_name": "active"
              },
              {
                "name": "IsInactive",
                "type": "bool",
                "path": "Policy.IsInactive",
                "tag": "bson:\"is_inactive\" json:\"is_inactive\"",
                "json_name": "is_inactive"
              },
              {
                "name": "Tags",
                "type": "[]string",
                "path": "Policy.Tags",
                "tag": "bson:\"tags\" json:\"tags\"",
                "json_name": "tags"
              },
              {
                "name": "KeyExpiresIn",
                "type": "int64",
                "path": "Policy.KeyExpiresIn",
                "tag": "bson:\"key_expires_in\" json:\"key_expires_in\"",
                "json_name": "key_expires_in"
              },
              {
                "name": "Partitions",
                "type": "PolicyPartitions",
                "path": "Policy.Partitions",
                "tag": "bson:\"partitions\" json:\"partitions\"",
                "json_name": "partitions"
              },
              {
                "name": "LastUpdated",
                "type": "string",
                "path": "Policy.LastUpdated",
                "tag": "bson:\"last_updated\" json:\"last_updated\"",
                "json_name": "last_updated"
              },
              {
                "name": "MetaData",
                "type": "map[string]interface{}",
                "path": "Policy.MetaData",
                "tag": "bson:\"meta_data\" json:\"meta_data\"",
                "json_name": "meta_data"
              },
              {
                "name": "GraphQL",
                "type": "map[string]GraphAccessDefinition",
                "path": "Policy.GraphQL",
                "tag": "bson:\"graphql_access_rights\" json:\"graphql_access_rights\"",
                "json_name": "graphql_access_rights"
              },
              {
                "name": "Smoothing",
                "type": "apidef.RateLimitSmoothing",
                "path": "Policy.Smoothing",
                "doc": "Smoothing contains rate limit smoothing settings.",
                "tag": "json:\"smoothing\" bson:\"smoothing\"",
                "json_name": "smoothing"
              }
            ]
          }
        ]
      },
      {
        "doc": "SessionState objects represent a current API session, mainly used for rate limiting.\nThere's a data structure that's based on this and it's used for Protocol Buffer support, make sure to update \"coprocess/proto/coprocess_session_state.proto\" and generate the bindings using: cd coprocess/proto \u0026\u0026 ./update_bindings.sh\n\nswagger:model",
        "types": [
          {
            "name": "SessionState",
            "fields": [
              {
                "name": "LastCheck",
                "type": "int64",
                "path": "SessionState.LastCheck",
                "tag": "json:\"last_check\" msg:\"last_check\"",
                "json_name": "last_check"
              },
              {
                "name": "Allowance",
                "type": "float64",
                "path": "SessionState.Allowance",
                "tag": "json:\"allowance\" msg:\"allowance\"",
                "json_name": "allowance"
              },
              {
                "name": "Rate",
                "type": "float64",
                "path": "SessionState.Rate",
                "tag": "json:\"rate\" msg:\"rate\"",
                "json_name": "rate"
              },
              {
                "name": "Per",
                "type": "float64",
                "path": "SessionState.Per",
                "tag": "json:\"per\" msg:\"per\"",
                "json_name": "per"
              },
              {
                "name": "ThrottleInterval",
                "type": "float64",
                "path": "SessionState.ThrottleInterval",
                "tag": "json:\"throttle_interval\" msg:\"throttle_interval\"",
                "json_name": "throttle_interval"
              },
              {
                "name": "ThrottleRetryLimit",
                "type": "int",
                "path": "SessionState.ThrottleRetryLimit",
                "tag": "json:\"throttle_retry_limit\" msg:\"throttle_retry_limit\"",
                "json_name": "throttle_retry_limit"
              },
              {
                "name": "MaxQueryDepth",
                "type": "int",
                "path": "SessionState.MaxQueryDepth",
                "tag": "json:\"max_query_depth\" msg:\"max_query_depth\"",
                "json_name": "max_query_depth"
              },
              {
                "name": "DateCreated",
                "type": "time.Time",
                "path": "SessionState.DateCreated",
                "tag": "json:\"date_created\" msg:\"date_created\"",
                "json_name": "date_created"
              },
              {
                "name": "Expires",
                "type": "int64",
                "path": "SessionState.Expires",
                "tag": "json:\"expires\" msg:\"expires\"",
                "json_name": "expires"
              },
              {
                "name": "QuotaMax",
                "type": "int64",
                "path": "SessionState.QuotaMax",
                "tag": "json:\"quota_max\" msg:\"quota_max\"",
                "json_name": "quota_max"
              },
              {
                "name": "QuotaRenews",
                "type": "int64",
                "path": "SessionState.QuotaRenews",
                "tag": "json:\"quota_renews\" msg:\"quota_renews\"",
                "json_name": "quota_renews"
              },
              {
                "name": "QuotaRemaining",
                "type": "int64",
                "path": "SessionState.QuotaRemaining",
                "tag": "json:\"quota_remaining\" msg:\"quota_remaining\"",
                "json_name": "quota_remaining"
              },
              {
                "name": "QuotaRenewalRate",
                "type": "int64",
                "path": "SessionState.QuotaRenewalRate",
                "tag": "json:\"quota_renewal_rate\" msg:\"quota_renewal_rate\"",
                "json_name": "quota_renewal_rate"
              },
              {
                "name": "AccessRights",
                "type": "map[string]AccessDefinition",
                "path": "SessionState.AccessRights",
                "tag": "json:\"access_rights\" msg:\"access_rights\"",
                "json_name": "access_rights"
              },
              {
                "name": "OrgID",
                "type": "string",
                "path": "SessionState.OrgID",
                "tag": "json:\"org_id\" msg:\"org_id\"",
                "json_name": "org_id"
              },
              {
                "name": "OauthClientID",
                "type": "string",
                "path": "SessionState.OauthClientID",
                "tag": "json:\"oauth_client_id\" msg:\"oauth_client_id\"",
                "json_name": "oauth_client_id"
              },
              {
                "name": "OauthKeys",
                "type": "map[string]string",
                "path": "SessionState.OauthKeys",
                "tag": "json:\"oauth_keys\" msg:\"oauth_keys\"",
                "json_name": "oauth_keys"
              },
              {
                "name": "Certificate",
                "type": "string",
                "path": "SessionState.Certificate",
                "tag": "json:\"certificate\" msg:\"certificate\"",
                "json_name": "certificate"
              },
              {
                "name": "BasicAuthData",
                "type": "BasicAuthData",
                "path": "SessionState.BasicAuthData",
                "tag": "json:\"basic_auth_data\" msg:\"basic_auth_data\"",
                "json_name": "basic_auth_data"
              },
              {
                "name": "JWTData",
                "type": "JWTData",
                "path": "SessionState.JWTData",
                "tag": "json:\"jwt_data\" msg:\"jwt_data\"",
                "json_name": "jwt_data"
              },
              {
                "name": "HMACEnabled",
                "type": "bool",
                "path": "SessionState.HMACEnabled",
                "tag": "json:\"hmac_enabled\" msg:\"hmac_enabled\"",
                "json_name": "hmac_enabled"
              },
              {
                "name": "EnableHTTPSignatureValidation",
                "type": "bool",
                "path": "SessionState.EnableHTTPSignatureValidation",
                "tag": "json:\"enable_http_signature_validation\" msg:\"enable_http_signature_validation\"",
                "json_name": "enable_http_signature_validation"
              },
              {
                "name": "HmacSecret",
                "type": "string",
                "path": "SessionState.HmacSecret",
                "tag": "json:\"hmac_string\" msg:\"hmac_string\"",
                "json_name": "hmac_string"
              },
              {
                "name": "RSACertificateId",
                "type": "string",
                "path": "SessionState.RSACertificateId",
                "tag": "json:\"rsa_certificate_id\" msg:\"rsa_certificate_id\"",
                "json_name": "rsa_certificate_id"
              },
              {
                "name": "IsInactive",
                "type": "bool",
                "path": "SessionState.IsInactive",
                "tag": "json:\"is_inactive\" msg:\"is_inactive\"",
                "json_name": "is_inactive"
              },
              {
                "name": "ApplyPolicyID",
                "type": "string",
                "path": "SessionState.ApplyPolicyID",
                "tag": "json:\"apply_policy_id\" msg:\"apply_policy_id\"",
                "json_name": "apply_policy_id"
              },
              {
                "name": "ApplyPolicies",
                "type": "[]string",
                "path": "SessionState.ApplyPolicies",
                "tag": "json:\"apply_policies\" msg:\"apply_policies\"",
                "json_name": "apply_policies"
              },
              {
                "name": "DataExpires",
                "type": "int64",
                "path": "SessionState.DataExpires",
                "tag": "json:\"data_expires\" msg:\"data_expires\"",
                "json_name": "data_expires"
              },
              {
                "name": "Monitor",
                "type": "Monitor",
                "path": "SessionState.Monitor",
                "tag": "json:\"monitor\" msg:\"monitor\"",
                "json_name": "monitor"
              },
              {
                "name": "EnableDetailRecording",
                "type": "bool",
                "path": "SessionState.EnableDetailRecording",
                "doc": "Deprecated: EnableDetailRecording is deprecated. Use EnableDetailedRecording\ngoing forward instead",
                "tag": "json:\"enable_detail_recording\" msg:\"enable_detail_recording\"",
                "json_name": "enable_detail_recording"
              },
              {
                "name": "EnableDetailedRecording",
                "type": "bool",
                "path": "SessionState.EnableDetailedRecording",
                "tag": "json:\"enable_detailed_recording\" msg:\"enable_detailed_recording\"",
                "json_name": "enable_detailed_recording"
              },
              {
                "name": "MetaData",
                "type": "map[string]interface{}",
                "path": "SessionState.MetaData",
                "tag": "json:\"meta_data\" msg:\"meta_data\"",
                "json_name": "meta_data"
              },
              {
                "name": "Tags",
                "type": "[]string",
                "path": "SessionState.Tags",
                "tag": "json:\"tags\" msg:\"tags\"",
                "json_name": "tags"
              },
              {
                "name": "Alias",
                "type": "string",
                "path": "SessionState.Alias",
                "tag": "json:\"alias\" msg:\"alias\"",
                "json_name": "alias"
              },
              {
                "name": "LastUpdated",
                "type": "string",
                "path": "SessionState.LastUpdated",
                "tag": "json:\"last_updated\" msg:\"last_updated\"",
                "json_name": "last_updated"
              },
              {
                "name": "IdExtractorDeadline",
                "type": "int64",
                "path": "SessionState.IdExtractorDeadline",
                "tag": "json:\"id_extractor_deadline\" msg:\"id_extractor_deadline\"",
                "json_name": "id_extractor_deadline"
              },
              {
                "name": "SessionLifetime",
                "type": "int64",
                "path": "SessionState.SessionLifetime",
                "tag": "bson:\"session_lifetime\" json:\"session_lifetime\"",
                "json_name": "session_lifetime"
              },
              {
                "name": "KeyID",
                "type": "string",
                "path": "SessionState.KeyID",
                "tag": "json:\"-\"",
                "json_name": ""
              },
              {
                "name": "Smoothing",
                "type": "apidef.RateLimitSmoothing",
                "path": "SessionState.Smoothing",
                "doc": "Smoothing contains rate limit smoothing settings.",
                "tag": "json:\"smoothing\" bson:\"smoothing\"",
                "json_name": "smoothing"
              }
            ]
          }
        ]
      }
    ]
  }
]
