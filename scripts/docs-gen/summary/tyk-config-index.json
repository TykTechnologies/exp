[
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.EnableDetailedRecording",
    "type": "bool",
    "tag": "json:\"enable_detailed_recording\"",
    "doc": "Set this value to `true` to have Tyk store the inbound request and outbound response data in HTTP Wire format as part of the Analytics data.\nPlease note, this will greatly increase your analytics DB size and can cause performance degradation on analytics processing by the Dashboard.\nThis setting can be overridden with an organisation flag, enabed at an API level, or on individual Key level."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.EnableGeoIP",
    "type": "bool",
    "tag": "json:\"enable_geo_ip\"",
    "doc": "Tyk can store GeoIP information based on MaxMind DB’s to enable GeoIP tracking on inbound request analytics. Set this value to `true` and assign a DB using the `geo_ip_db_path` setting."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.GeoIPDBLocation",
    "type": "string",
    "tag": "json:\"geo_ip_db_path\"",
    "doc": "Path to a MaxMind GeoIP database\nThe analytics GeoIP DB can be replaced on disk. It will cleanly auto-reload every hour."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.IgnoredIPs",
    "type": "[]string",
    "tag": "json:\"ignored_ips\"",
    "doc": "Adding IP addresses to this list will cause Tyk to ignore these IPs in the analytics data. These IP addresses will not produce an analytics log record.\nThis is useful for health checks and other samplers that might skew usage data.\nThe IP addresses must be provided as a JSON array, with the values being single IPs. CIDR values are not supported."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.NormaliseUrls",
    "type": "NormalisedURLConfig",
    "tag": "json:\"normalise_urls\"",
    "doc": "This section describes methods that enable you to normalise inbound URLs in your analytics to have more meaningful per-path data."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.PoolSize",
    "type": "int",
    "tag": "json:\"pool_size\"",
    "doc": "Number of workers used to process analytics. Defaults to number of CPU cores."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.RecordsBufferSize",
    "type": "uint64",
    "tag": "json:\"records_buffer_size\"",
    "doc": "Number of records in analytics queue, per worker. Default: 1000."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.StorageExpirationTime",
    "type": "int",
    "tag": "json:\"storage_expiration_time\"",
    "doc": "You can set a time (in seconds) to configure how long analytics are kept if they are not processed. The default is 60 seconds.\nThis is used to prevent the potential infinite growth of Redis analytics storage."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AnalyticsConfigConfig.Type",
    "type": "string",
    "tag": "json:\"type\"",
    "doc": "Set empty for a Self-Managed installation or `rpc` for multi-cloud."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AuthOverrideConf.AuthProvider",
    "type": "apidef.AuthProviderMeta",
    "tag": "json:\"auth_provider\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AuthOverrideConf.ForceAuthProvider",
    "type": "bool",
    "tag": "json:\"force_auth_provider\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AuthOverrideConf.ForceSessionProvider",
    "type": "bool",
    "tag": "json:\"force_session_provider\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "AuthOverrideConf.SessionProvider",
    "type": "apidef.SessionProviderMeta",
    "tag": "json:\"session_provider\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertData.CertFile",
    "type": "string",
    "tag": "json:\"cert_file\"",
    "doc": "Path to certificate file"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertData.KeyFile",
    "type": "string",
    "tag": "json:\"key_file\"",
    "doc": "Path to private key file"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertData.Name",
    "type": "string",
    "tag": "json:\"domain_name\"",
    "doc": "Domain name"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertificatesConfig.API",
    "type": "[]string",
    "tag": "json:\"apis\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertificatesConfig.ControlAPI",
    "type": "[]string",
    "tag": "json:\"control_api\"",
    "doc": "Certificates used for Control API Mutual TLS"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertificatesConfig.Dashboard",
    "type": "[]string",
    "tag": "json:\"dashboard_api\"",
    "doc": "Used for communicating with the Dashboard if it is configured to use Mutual TLS"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertificatesConfig.MDCB",
    "type": "[]string",
    "tag": "json:\"mdcb_api\"",
    "doc": "Certificates used for MDCB Mutual TLS"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CertificatesConfig.Upstream",
    "type": "map[string]string",
    "tag": "json:\"upstream\"",
    "doc": "Specify upstream mutual TLS certificates at a global level in the following format: `{ \"\u003chost\u003e\": \"\u003ccert\u003e\" }``"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CoProcessConfig.CoProcessGRPCServer",
    "type": "string",
    "tag": "json:\"coprocess_grpc_server\"",
    "doc": "Address of gRPC user"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CoProcessConfig.EnableCoProcess",
    "type": "bool",
    "tag": "json:\"enable_coprocess\"",
    "doc": "Enable gRPC and Python plugins"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CoProcessConfig.GRPCRecvMaxSize",
    "type": "int",
    "tag": "json:\"grpc_recv_max_size\"",
    "doc": "Maximum message which can be received from a gRPC server"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CoProcessConfig.GRPCSendMaxSize",
    "type": "int",
    "tag": "json:\"grpc_send_max_size\"",
    "doc": "Maximum message which can be sent to gRPC server"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CoProcessConfig.PythonPathPrefix",
    "type": "string",
    "tag": "json:\"python_path_prefix\"",
    "doc": "Sets the path to built-in Tyk modules. This will be part of the Python module lookup path. The value used here is the default one for most installations."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "CoProcessConfig.PythonVersion",
    "type": "string",
    "tag": "json:\"python_version\"",
    "doc": "If you have multiple Python versions installed you can specify your version."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.AllowInsecureConfigs",
    "type": "bool",
    "tag": "json:\"allow_insecure_configs\"",
    "doc": "Can be set to disable Dashboard message signature verification. When set to `true`, `public_key_path` can be ignored."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.AllowMasterKeys",
    "type": "bool",
    "tag": "json:\"allow_master_keys\"",
    "doc": "If AllowMasterKeys is set to true, session objects (key definitions) that do not have explicit access rights set\nwill be allowed by Tyk. This means that keys that are created have access to ALL APIs, which in many cases is\nunwanted behaviour unless you are sure about what you are doing."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.AllowRemoteConfig",
    "type": "bool",
    "tag": "bson:\"allow_remote_config\" json:\"allow_remote_config\"",
    "doc": "Allow your Dashboard to remotely set Gateway configuration via the Nodes screen."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.AnalyticsConfig",
    "type": "AnalyticsConfigConfig",
    "tag": "json:\"analytics_config\"",
    "doc": "This section defines options on what analytics data to store."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.AppPath",
    "type": "string",
    "tag": "json:\"app_path\"",
    "doc": "If Tyk is being used in its standard configuration (Open Source installations), then API definitions are stored in the apps folder (by default in /opt/tyk-gateway/apps).\nThis location is scanned for .json files and re-scanned at startup or reload.\nSee the API section of the Tyk Gateway API for more details."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.AuthOverride",
    "type": "AuthOverrideConf",
    "tag": "json:\"auth_override\"",
    "doc": "This is used as part of the RPC / Hybrid back-end configuration in a Tyk Enterprise installation and isn’t used anywhere else."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.BundleBaseURL",
    "type": "string",
    "tag": "bson:\"bundle_base_url\" json:\"bundle_base_url\"",
    "doc": "Is a base URL that will be used to download the bundle. In this example we have `bundle-latest.zip` specified in the API settings, Tyk will fetch the following URL: http://my-bundle-server.com/bundles/bundle-latest.zip (see the next section for details)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.BundleInsecureSkipVerify",
    "type": "bool",
    "tag": "bson:\"bundle_insecure_skip_verify\" json:\"bundle_insecure_skip_verify\"",
    "doc": "Disable TLS validation for bundle URLs"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.CacheStorage",
    "type": "StorageOptionsConf",
    "tag": "json:\"cache_storage\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.CloseConnections",
    "type": "bool",
    "tag": "json:\"close_connections\"",
    "doc": "If set, disable keepalive between User and Tyk"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.CloseIdleConnections",
    "type": "bool",
    "tag": "json:\"close_idle_connections\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Cloud",
    "type": "bool",
    "tag": "json:\"cloud\"",
    "doc": "Cloud flag shows the Gateway runs in Tyk-cloud."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.CoProcessOptions",
    "type": "CoProcessConfig",
    "tag": "json:\"coprocess_options\"",
    "doc": "Configuration options for Python and gRPC plugins."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ControlAPIHostname",
    "type": "string",
    "tag": "json:\"control_api_hostname\"",
    "doc": "Custom hostname for the Control API"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ControlAPIPort",
    "type": "int",
    "tag": "json:\"control_api_port\"",
    "doc": "Set to run your Gateway Control API on a separate port, and protect it behind a firewall if needed. Please make sure you follow this guide when setting the control port https://tyk.io/docs/planning-for-production/#change-your-control-port."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DBAppConfOptions",
    "type": "DBAppConfOptionsConfig",
    "tag": "json:\"db_app_conf_options\"",
    "doc": "This section defines API loading and shard options. Enable these settings to selectively load API definitions on a node from your Dashboard service."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DRLNotificationFrequency",
    "type": "int",
    "tag": "json:\"drl_notification_frequency\"",
    "doc": "How frequently a distributed rate limiter synchronises information between the Gateway nodes. Default: 2 seconds."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DRLThreshold",
    "type": "float64",
    "tag": "json:\"drl_threshold\"",
    "doc": "A distributed rate limiter is inaccurate on small rate limits, and it will fallback to a Redis or Sentinel rate limiter on an individual user basis, if its rate limiter lower then threshold.\nA Rate limiter threshold calculated using the following formula: `rate_threshold = drl_threshold * number_of_gateways`.\nSo you have 2 Gateways, and your threshold is set to 5, if a user rate limit is larger than 10, it will use the distributed rate limiter algorithm.\nDefault: 5"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DisableDashboardZeroConf",
    "type": "bool",
    "tag": "json:\"disable_dashboard_zeroconf\"",
    "doc": "Disable the capability of the Gateway to `autodiscover` the Dashboard through heartbeat messages via Redis.\nThe goal of zeroconf is auto-discovery, so you do not have to specify the Tyk Dashboard address in your Gateway`tyk.conf` file.\nIn some specific cases, for example, when the Dashboard is bound to a public domain, not accessible inside an internal network, or similar, `disable_dashboard_zeroconf` can be set to `true`, in favour of directly specifying a Tyk Dashboard address."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DisablePortWhiteList",
    "type": "bool",
    "tag": "json:\"disable_ports_whitelist\"",
    "doc": "Disable port whilisting, essentially allowing you to use any port for your API."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DisableRegexpCache",
    "type": "bool",
    "tag": "json:\"disable_regexp_cache\"",
    "doc": "If set to `true` this allows you to disable the regular expression cache. The default setting is `false`."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DisableVirtualPathBlobs",
    "type": "bool",
    "tag": "json:\"disable_virtual_path_blobs\"",
    "doc": "Disable virtual endpoints and the code will not be loaded into the VM when the API definition initialises.\nThis is useful for systems where you want to avoid having third-party code run."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.DnsCache",
    "type": "DnsCacheConfig",
    "tag": "json:\"dns_cache\"",
    "doc": "This section enables the global configuration of the expireable DNS records caching for your Gateway API endpoints.\nBy design caching affects only http(s), ws(s) protocols APIs and doesn’t affect any plugin/middleware DNS queries.\n\n```\n\"dns_cache\": {\n  \"enabled\": true, //Turned off by default\n  \"ttl\": 60, //Time in seconds before the record will be removed from cache\n  \"multiple_ips_handle_strategy\": \"random\" //A strategy, which will be used when dns query will reply with more than 1 ip address per single host.\n}\n```"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableAPISegregation",
    "type": "bool",
    "tag": "json:\"enable_api_segregation\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableAnalytics",
    "type": "bool",
    "tag": "json:\"enable_analytics\"",
    "doc": "Tyk is capable of recording every hit to your API to a database with various filtering parameters. Set this value to `true` and fill in the sub-section below to enable logging.\n\nNote:\n  For performance reasons, Tyk will store traffic data to Redis initially and then purge the data from Redis to MongoDB or other data stores on a regular basis as determined by the purge_delay setting in your Tyk Pump configuration."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableBundleDownloader",
    "type": "bool",
    "tag": "bson:\"enable_bundle_downloader\" json:\"enable_bundle_downloader\"",
    "doc": "Enable downloading Plugin bundles\nExample:\n```\n\"enable_bundle_downloader\": true,\n\"bundle_base_url\": \"http://my-bundle-server.com/bundles/\",\n\"public_key_path\": \"/path/to/my/pubkey\",\n```"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableCustomDomains",
    "type": "bool",
    "tag": "json:\"enable_custom_domains\"",
    "doc": "Allows you to use custom domains"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableHashedKeysListing",
    "type": "bool",
    "tag": "json:\"enable_hashed_keys_listing\"",
    "doc": "Allows the listing of hashed API keys"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableJSVM",
    "type": "bool",
    "tag": "json:\"enable_jsvm\"",
    "doc": "Set to true if you are using JSVM custom middleware or virtual endpoints."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableKeyLogging",
    "type": "bool",
    "tag": "json:\"enable_key_logging\"",
    "doc": "By default all key IDs in logs are hidden. Set to `true` if you want to see them for debugging reasons."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableNonTransactionalRateLimiter",
    "type": "bool",
    "tag": "json:\"enable_non_transactional_rate_limiter\"",
    "doc": "An enhancement for the Redis and Sentinel rate limiters, that offers a significant improvement in performance by not using transactions on Redis rate-limit buckets."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableRedisRollingLimiter",
    "type": "bool",
    "tag": "json:\"enable_redis_rolling_limiter\"",
    "doc": "Redis based rate limiter with fixed window. Provides 100% rate limiting accuracy, but require two additional Redis roundtrip for each request."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableSentinelRateLimiter",
    "type": "bool",
    "tag": "json:\"enable_sentinel_rate_limiter\"",
    "doc": "To enable, set to `true`. The sentinel-based rate limiter delivers a smoother performance curve as rate-limit calculations happen off-thread, but a stricter time-out based cool-down for clients. For example, when a throttling action is triggered, they are required to cool-down for the period of the rate limit.\nDisabling the sentinel based rate limiter will make rate-limit calculations happen on-thread and therefore offers a staggered cool-down and a smoother rate-limit experience for the client.\nFor example, you can slow your connection throughput to regain entry into your rate limit. This is more of a “throttle” than a “block”.\nThe standard rate limiter offers similar performance as the sentinel-based limiter. This is disabled by default."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnableSeperateCacheStore",
    "type": "bool",
    "tag": "json:\"enable_separate_cache_store\"",
    "doc": "Enable to use a separate Redis for cache storage"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnforceOrgDataAge",
    "type": "bool",
    "tag": "json:\"enforce_org_data_age\"",
    "doc": "Allows you to dynamically configure analytics expiration on a per organisation level"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnforceOrgDataDetailLogging",
    "type": "bool",
    "tag": "json:\"enforce_org_data_detail_logging\"",
    "doc": "Allows you to dynamically configure detailed logging on a per organisation level"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EnforceOrgQuotas",
    "type": "bool",
    "tag": "json:\"enforce_org_quotas\"",
    "doc": "Allows you to dynamically configure organisation quotas on a per organisation level"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EventHandlers",
    "type": "apidef.EventHandlerMetaConfig",
    "tag": "json:\"event_handlers\"",
    "doc": "Event System"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EventTriggers",
    "type": "any",
    "tag": "json:\"event_trigers_defunct\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.EventTriggersDefunct",
    "type": "any",
    "tag": "json:\"event_triggers_defunct\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ExperimentalProcessOrgOffThread",
    "type": "bool",
    "tag": "json:\"experimental_process_org_off_thread\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ForceGlobalSessionLifetime",
    "type": "bool",
    "tag": "bson:\"force_global_session_lifetime\" json:\"force_global_session_lifetime\"",
    "doc": "Enable global API token expiration. Can be needed if all your APIs using JWT or oAuth 2.0 auth methods with dynamically generated keys."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.GlobalSessionLifetime",
    "type": "int64",
    "tag": "bson:\"global_session_lifetime\" json:\"global_session_lifetime\"",
    "doc": "global session lifetime, in seconds."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.GraylogNetworkAddr",
    "type": "string",
    "tag": "json:\"graylog_network_addr\"",
    "doc": "Graylog server address"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HTTPProfile",
    "type": "bool",
    "tag": "json:\"enable_http_profiler\"",
    "doc": "Enable debugging of your Tyk Gateway by exposing profiling information through https://tyk.io/docs/troubleshooting/tyk-gateway/profiling/"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HashKeyFunction",
    "type": "string",
    "tag": "json:\"hash_key_function\"",
    "doc": "Specify the Key hashing algorithm. Possible values: murmur64, murmur128, sha256."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HashKeys",
    "type": "bool",
    "tag": "json:\"hash_keys\"",
    "doc": "Enable Key hashing"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HealthCheck",
    "type": "HealthCheckConfig",
    "tag": "json:\"health_check\"",
    "doc": "This section enables the configuration of the health-check API endpoint and the size of the sample data cache (in seconds)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HealthCheckEndpointName",
    "type": "string",
    "tag": "json:\"health_check_endpoint_name\"",
    "doc": "Enables you to rename the /hello endpoint"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HideGeneratorHeader",
    "type": "bool",
    "tag": "json:\"hide_generator_header\"",
    "doc": "HideGeneratorHeader will mask the 'X-Generator' and 'X-Mascot-...' headers, if set to true."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HostName",
    "type": "string",
    "tag": "json:\"hostname\"",
    "doc": "Force your Gateway to work only on a specific domain name. Can be overridden by API custom domain."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.HttpServerOptions",
    "type": "HttpServerOptionsConfig",
    "tag": "json:\"http_server_options\"",
    "doc": "Gateway HTTP server configuration"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.IgnoreEndpointCase",
    "type": "bool",
    "tag": "json:\"ignore_endpoint_case\"",
    "doc": "Ignore the case of any endpoints for APIs managed by Tyk. Setting this to `true` will override any individual API and Ignore, Blacklist and Whitelist plugin endpoint settings."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.JSVMTimeout",
    "type": "int",
    "tag": "json:\"jsvm_timeout\"",
    "doc": "Set the execution timeout for JSVM plugins and virtal endpoints"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.KV",
    "type": "struct{}",
    "tag": "json:\"kv\"",
    "doc": "This section enables the use of the KV capabilities to substitute configuration values.\nSee more details https://tyk.io/docs/tyk-configuration-reference/kv-store/"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.LegacyEnableAllowanceCountdown",
    "type": "bool",
    "tag": "bson:\"legacy_enable_allowance_countdown\" json:\"legacy_enable_allowance_countdown\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ListenAddress",
    "type": "string",
    "tag": "json:\"listen_address\"",
    "doc": "If your machine has multiple network devices or IPs you can force the Gateway to use the IP address you want."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ListenPort",
    "type": "int",
    "tag": "json:\"listen_port\"",
    "doc": "Setting this value will change the port that Tyk listens on. Default: 8080."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.LivenessCheck",
    "type": "LivenessCheckConfig",
    "tag": "json:\"liveness_check\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.LocalSessionCache",
    "type": "LocalSessionCacheConf",
    "tag": "json:\"local_session_cache\"",
    "doc": "Tyk can cache some data locally, this can speed up lookup times on a single node and lower the number of connections and operations being done on Redis. It will however introduce a slight delay when updating or modifying keys as the cache must expire.\nThis does not affect rate limiting."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.LogLevel",
    "type": "string",
    "tag": "json:\"log_level\"",
    "doc": "You can now set a logging level (log_level). The following levels can be set: debug, info, warn, error.\nIf not set or left empty, it will default to `info`."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.LogstashNetworkAddr",
    "type": "string",
    "tag": "json:\"logstash_network_addr\"",
    "doc": "Logstash server address"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.LogstashTransport",
    "type": "string",
    "tag": "json:\"logstash_transport\"",
    "doc": "Logstash network transport. Values: tcp or udp."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ManagementNode",
    "type": "bool",
    "tag": "json:\"management_node\"",
    "doc": "If set to `true`, distributed rate limiter will be disabled for this node, and it will be excluded from any rate limit calculation.\n\nNote:\n  If you set `db_app_conf_options.node_is_segmented` to `true` for multiple Gateway nodes, you should ensure that `management_node` is set to `false`.\n  This is to ensure visibility for the management node across all APIs."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.MaxConnTime",
    "type": "int64",
    "tag": "json:\"max_conn_time\"",
    "doc": "Maximum connection time. If set it will force gateway reconnect to the upstream."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.MaxIdleConns",
    "type": "int",
    "tag": "bson:\"max_idle_connections\" json:\"max_idle_connections\"",
    "doc": "Maximum idle connections, per API, between Tyk and Upstream. By default not limited."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.MaxIdleConnsPerHost",
    "type": "int",
    "tag": "bson:\"max_idle_connections_per_host\" json:\"max_idle_connections_per_host\"",
    "doc": "Maximum idle connections, per API, per upstream, between Tyk and Upstream. Default:100"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.MiddlewarePath",
    "type": "string",
    "tag": "json:\"middleware_path\"",
    "doc": "Path to the plugins dirrectory. By default is ``./middleware`."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.MinTokenLength",
    "type": "int",
    "tag": "json:\"min_token_length\"",
    "doc": "Minimum API token length"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Monitor",
    "type": "MonitorConfig",
    "tag": "json:\"monitor\"",
    "doc": "The monitor section is useful if you wish to enforce a global trigger limit on organisation and user quotas.\nThis feature will trigger a webhook event to fire when specific triggers are reached.\nTriggers can be global (set in the node), by organisation (set in the organisation session object) or by key (set in the key session object)\n\nWhile Organisation-level and Key-level triggers can be tiered (e.g. trigger at 10%, trigger at 20%, trigger at 80%), in the node-level configuration only a global value can be set.\nIf a global value and specific trigger level are the same the trigger will only fire once:\n\n```\n\"monitor\": {\n  \"enable_trigger_monitors\": true,\n  \"configuration\": {\n   \"method\": \"POST\",\n   \"target_path\": \"http://domain.com/notify/quota-trigger\",\n   \"template_path\": \"templates/monitor_template.json\",\n   \"header_map\": {\n     \"some-secret\": \"89787855\"\n   },\n   \"event_timeout\": 10\n },\n \"global_trigger_limit\": 80.0,\n \"monitor_user_keys\": false,\n \"monitor_org_keys\": true\n},\n```"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.NewRelic",
    "type": "NewRelicConfig",
    "tag": "json:\"newrelic\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.NodeSecret",
    "type": "string",
    "tag": "json:\"node_secret\"",
    "doc": "The shared secret between the Gateway and the Dashboard to ensure that API Definition downloads, heartbeat and Policy loads are from a valid source."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OauthErrorStatusCode",
    "type": "int",
    "tag": "json:\"oauth_error_status_code\"",
    "doc": "Configures the OAuth error status code returned. If not set, it defaults to a 403 error."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OauthRedirectUriSeparator",
    "type": "string",
    "tag": "json:\"oauth_redirect_uri_separator\"",
    "doc": "Character which should be used as a separator for OAuth redirect URI URLs. Default: ;."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OauthRefreshExpire",
    "type": "int64",
    "tag": "json:\"oauth_refresh_token_expire\"",
    "doc": "Change the expiry time of a refresh token. By default 14 days (in seconds)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OauthTokenExpire",
    "type": "int32",
    "tag": "json:\"oauth_token_expire\"",
    "doc": "Change the expiry time of OAuth tokens (in seconds)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OauthTokenExpiredRetainPeriod",
    "type": "int32",
    "tag": "json:\"oauth_token_expired_retain_period\"",
    "doc": "Specifies how long expired tokens are stored in Redis. The value is in seconds and the default is 0. Using the default means expired tokens are never removed from Redis."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OriginalPath",
    "type": "string",
    "tag": "json:\"-\"",
    "doc": "OriginalPath is the path to the config file that is read. If\nnone was found, it's the path to the default config file that\nwas written."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.OverrideMessages",
    "type": "map[string]TykError",
    "tag": "bson:\"override_messages\" json:\"override_messages\"",
    "doc": "Override the default error code and or message returned by middleware.\nThe following message IDs can be used to override the message and error codes:\n\nAuthToken message IDs\n* `auth.auth_field_missing`\n* `auth.key_not_found`\n\nOIDC message IDs\n* `oauth.auth_field_missing`\n* `oauth.auth_field_malformed`\n* `oauth.key_not_found`\n* `oauth.client_deleted`\n\nSample Override Message Setting\n```\n\"override_messages\": {\n  \"oauth.auth_field_missing\" : {\n   \"code\": 401,\n   \"message\": \"Token is not authorised\"\n }\n}\n```"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.PIDFileLocation",
    "type": "string",
    "tag": "json:\"pid_file_location\"",
    "doc": "Linux PID file location. Do not change unless you know what you are doing. Default: /var/run/tyk/tyk-gateway.pid"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Policies",
    "type": "PoliciesConfig",
    "tag": "json:\"policies\"",
    "doc": "The policies section allows you to define where Tyk can find its policy templates. Policy templates are similar to key definitions in that they allow you to set quotas, access rights and rate limits for keys.\nPolicies are loaded when Tyk starts and if changed require a hot-reload so they are loaded into memory.\nA policy can be defined in a file (Open Source installations) or from the same database as the Dashboard."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.PortWhiteList",
    "type": "map[string]PortWhiteList",
    "tag": "json:\"ports_whitelist\"",
    "doc": "Defines the ports that will be available for the API services to bind to in the following format: `\"{“\":“”}\"`. Remember to escape JSON strings.\nThis is a map of protocol to PortWhiteList. This allows per protocol\nconfigurations."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxyCloseConnections",
    "type": "bool",
    "tag": "json:\"proxy_close_connections\"",
    "doc": "Disable keepalives between Tyk and your upstream service.\nSet this value to `true` to force Tyk to close the connection with the server, otherwise the connections will remain open for as long as your OS keeps TCP connections open.\nThis can cause a file-handler limit to be exceeded. Setting to false can have performance benefits as the connection can be reused."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxyDefaultTimeout",
    "type": "float64",
    "tag": "json:\"proxy_default_timeout\"",
    "doc": "This can specify a default timeout in seconds for upstream API requests."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxyEnableHttp2",
    "type": "bool",
    "tag": "json:\"proxy_enable_http2\"",
    "doc": "Enable HTTP2 support between Tyk and your upstream service. Required for gRPC."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxySSLCipherSuites",
    "type": "[]string",
    "tag": "json:\"proxy_ssl_ciphers\"",
    "doc": "Whitelist ciphers for connection between Tyk and your upstream service."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxySSLDisableRenegotiation",
    "type": "bool",
    "tag": "json:\"proxy_ssl_disable_renegotiation\"",
    "doc": "Disable TLS renegotiation."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxySSLInsecureSkipVerify",
    "type": "bool",
    "tag": "json:\"proxy_ssl_insecure_skip_verify\"",
    "doc": "Globally ignore TLS verification between Tyk and your Upstream services"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ProxySSLMinVersion",
    "type": "uint16",
    "tag": "json:\"proxy_ssl_min_version\"",
    "doc": "Minimum TLS version for connection between Tyk and your upstream service."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.PublicKeyPath",
    "type": "string",
    "tag": "json:\"public_key_path\"",
    "doc": "While communicating with the Dashboard. By default, all messages are signed by a private/public key pair. Set path to public key."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.RegexpCacheExpire",
    "type": "int32",
    "tag": "json:\"regexp_cache_expire\"",
    "doc": "If you set `disable_regexp_cache` to `false`, you can use this setting to limit how long the regular expression cache is kept for in seconds.\nThe default is 60 seconds. This must be a positive value. If you set to 0 this uses the default value."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ReloadWaitTime",
    "type": "int",
    "tag": "bson:\"reload_wait_time\" json:\"reload_wait_time\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SSLForceCommonNameCheck",
    "type": "bool",
    "tag": "json:\"ssl_force_common_name_check\"",
    "doc": "Force the validation of the hostname against the common name, even if TLS verification is disabled."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Secret",
    "type": "string",
    "tag": "json:\"secret\"",
    "doc": "This should be changed as soon as Tyk is installed on your system.\nThis value is used in every interaction with the Tyk Gateway API. It should be passed along as the X-Tyk-Authorization header in any requests made.\nTyk assumes that you are sensible enough not to expose the management endpoints publicly and to keep this configuration value to yourself."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Secrets",
    "type": "map[string]string",
    "tag": "json:\"secrets\"",
    "doc": "Secrets are key-value pairs that can be accessed in the dashboard via \"secrets://\""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Security",
    "type": "SecurityConfig",
    "tag": "json:\"security\"",
    "doc": "Global Certificate configuration"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SentryCode",
    "type": "string",
    "tag": "json:\"sentry_code\"",
    "doc": "Sentry API code"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SentryLogLevel",
    "type": "string",
    "tag": "json:\"sentry_log_level\"",
    "doc": "Log verbosity for Sentry logging"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.ServiceDiscovery",
    "type": "ServiceDiscoveryConf",
    "tag": "json:\"service_discovery\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SessionUpdateBufferSize",
    "type": "int",
    "tag": "json:\"session_update_buffer_size\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SessionUpdatePoolSize",
    "type": "int",
    "tag": "json:\"session_update_pool_size\"",
    "doc": "TODO: These config options are not documented - What do they do?"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SlaveOptions",
    "type": "SlaveOptionsConfig",
    "tag": "json:\"slave_options\"",
    "doc": "The `slave_options` allow you to configure the RPC slave connection required for MDCB installations.\nThese settings must be configured for every RPC slave/worker node."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.StatsdConnectionString",
    "type": "string",
    "tag": "json:\"statsd_connection_string\"",
    "doc": "Address of StatsD server. If set enable statsd monitoring."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.StatsdPrefix",
    "type": "string",
    "tag": "json:\"statsd_prefix\"",
    "doc": "StatsD prefix"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Storage",
    "type": "StorageOptionsConf",
    "tag": "json:\"storage\"",
    "doc": "This section defines your Redis configuration."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SuppressRedisSignalReload",
    "type": "bool",
    "tag": "json:\"suppress_redis_signal_reload\"",
    "doc": "Disable dynamic API and Policy reloads, e.g. it will load new changes only on procecss start."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SupressDefaultOrgStore",
    "type": "bool",
    "tag": "json:\"suppress_default_org_store\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SyslogNetworkAddr",
    "type": "string",
    "tag": "json:\"syslog_network_addr\"",
    "doc": "Graylog server address"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.SyslogTransport",
    "type": "string",
    "tag": "json:\"syslog_transport\"",
    "doc": "Syslong transport to use. Values: tcp or udp."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.TemplatePath",
    "type": "string",
    "tag": "json:\"template_path\"",
    "doc": "Path to error and webhook templates. Defaults to the current binary path."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Tracer",
    "type": "Tracer",
    "tag": "json:\"tracing\"",
    "doc": "Section for configuring OpenTracing support\nDeprecated: use OpenTelemetry instead."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.Track404Logs",
    "type": "bool",
    "tag": "json:\"track_404_logs\"",
    "doc": "Show 404 HTTP errors in your Gateway application logs"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.TykJSPath",
    "type": "string",
    "tag": "json:\"tyk_js_path\"",
    "doc": "Path to the JavaScript file which will be pre-loaded for any JSVM middleware or virtual endpoint. Useful for defining global shared functions."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UptimeTests",
    "type": "UptimeTestsConfig",
    "tag": "json:\"uptime_tests\"",
    "doc": "Tyk nodes can provide uptime awareness, uptime testing and analytics for your underlying APIs uptime and availability.\nTyk can also notify you when a service goes down."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseAsyncSessionWrite",
    "type": "bool",
    "tag": "json:\"optimisations_use_async_session_write\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseDBAppConfigs",
    "type": "bool",
    "tag": "json:\"use_db_app_configs\"",
    "doc": "If you are a Tyk Pro user, this option will enable polling the Dashboard service for API definitions.\nOn startup Tyk will attempt to connect and download any relevant application configurations from from your Dashboard instance.\nThe files are exactly the same as the JSON files on disk with the exception of a BSON ID supplied by the Dashboard service."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseGraylog",
    "type": "bool",
    "tag": "json:\"use_graylog\"",
    "doc": "Use Graylog log output"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseLogstash",
    "type": "bool",
    "tag": "json:\"use_logstash\"",
    "doc": "Use logstash log output"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseRedisLog",
    "type": "bool",
    "tag": "json:\"use_redis_log\"",
    "doc": "Enables the real-time Gateway log view in the Dashboard."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseSentry",
    "type": "bool",
    "tag": "json:\"use_sentry\"",
    "doc": "Enable Sentry logging"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.UseSyslog",
    "type": "bool",
    "tag": "json:\"use_syslog\"",
    "doc": "Enable Syslog log output"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Config.VersionHeader",
    "type": "string",
    "tag": "json:\"version_header\"",
    "doc": "Expose version header with a given name. Works only for versioned APIs."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.Address",
    "type": "string",
    "tag": "json:\"address\"",
    "doc": "Address is the address of the Consul server"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.Datacenter",
    "type": "string",
    "tag": "json:\"datacenter\"",
    "doc": "The datacenter to use. If not provided, the default agent datacenter is used."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.HttpAuth",
    "type": "struct{}",
    "tag": "json:\"http_auth\"",
    "doc": "HttpAuth is the auth info to use for http access."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.Scheme",
    "type": "string",
    "tag": "json:\"scheme\"",
    "doc": "Scheme is the URI scheme for the Consul server"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.TLSConfig",
    "type": "struct{}",
    "tag": "json:\"tls_config\"",
    "doc": "TLS configuration"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.Token",
    "type": "string",
    "tag": "json:\"token\"",
    "doc": "Token is used to provide a per-request ACL token\nwhich overrides the agent's default token."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ConsulConfig.WaitTime",
    "type": "time.Duration",
    "tag": "json:\"wait_time\"",
    "doc": "WaitTime limits how long a Watch will block. If not provided,\nthe agent default values will be used."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DBAppConfOptionsConfig.ConnectionString",
    "type": "string",
    "tag": "json:\"connection_string\"",
    "doc": "Set the URL to your Dashboard instance (or a load balanced instance). The URL needs to be formatted as: `http://dashboard_host:port`"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DBAppConfOptionsConfig.NodeIsSegmented",
    "type": "bool",
    "tag": "json:\"node_is_segmented\"",
    "doc": "Set to `true` to enable filtering (sharding) of APIs."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DBAppConfOptionsConfig.Tags",
    "type": "[]string",
    "tag": "json:\"tags\"",
    "doc": "The tags to use when filtering (sharding) Tyk Gateway nodes. Tags are processed as `OR` operations.\nIf you include a non-filter tag (e.g. an identifier such as `node-id-1`, this will become available to your Dashboard analytics)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DnsCacheConfig.CheckInterval",
    "type": "int64",
    "tag": "json:\"-\" ignored:\"true\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DnsCacheConfig.Enabled",
    "type": "bool",
    "tag": "json:\"enabled\"",
    "doc": "Setting this value to `true` will enable caching of DNS queries responses used for API endpoint’s host names. By default caching is disabled."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DnsCacheConfig.MultipleIPsHandleStrategy",
    "type": "IPsHandleStrategy",
    "tag": "json:\"multiple_ips_handle_strategy\"",
    "doc": "A strategy which will be used when a DNS query will reply with more than 1 IP Address per single host.\nAs a DNS query response IP Addresses can have a changing order depending on DNS server balancing strategy (eg: round robin, geographically dependent origin-ip ordering, etc) this option allows you to not to limit the connection to the first host in a cached response list or prevent response caching.\n\n* `pick_first` will instruct your Tyk Gateway to connect to the first IP in a returned IP list and cache the response.\n* `random` will instruct your Tyk Gateway to connect to a random IP in a returned IP list and cache the response.\n* `no_cache` will instruct your Tyk Gateway to connect to the first IP in a returned IP list and fetch each addresses list without caching on each API endpoint DNS query."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "DnsCacheConfig.TTL",
    "type": "int64",
    "tag": "json:\"ttl\"",
    "doc": "This setting allows you to specify a duration in seconds before the record will be removed from cache after being added to it on the first DNS query resolution of API endpoints.\nSetting `ttl` to `-1` prevents record from being expired and removed from cache on next check interval."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "EventMessage.Meta",
    "type": "",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "EventMessage.TimeStamp",
    "type": "string",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "EventMessage.Type",
    "type": "apidef.TykEvent",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HealthCheckConfig.EnableHealthChecks",
    "type": "bool",
    "tag": "json:\"enable_health_checks\"",
    "doc": "Setting this value to `true` will enable the health-check endpoint on /Tyk/health."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HealthCheckConfig.HealthCheckValueTimeout",
    "type": "int64",
    "tag": "json:\"health_check_value_timeouts\"",
    "doc": "This setting defaults to 60 seconds. This is the time window that Tyk uses to sample health-check data.\nYou can set a higher value for more accurate data (a larger sample period), or a lower value for less accurate data.\nThe reason this value is configurable is because sample data takes up space in your Redis DB to store the data to calculate samples. On high-availability systems this may not be desirable and smaller values may be preferred."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.Certificates",
    "type": "[]CertData",
    "tag": "json:\"certificates\"",
    "doc": "Deprecated. SSL certificates used by Gateway server."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.Ciphers",
    "type": "[]string",
    "tag": "json:\"ssl_ciphers\"",
    "doc": "Custom SSL ciphers. See list of ciphers here https://tyk.io/docs/basic-config-and-security/security/tls-and-ssl/#specify-tls-cipher-suites-for-tyk-gateway--tyk-dashboard"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.EnableHttp2",
    "type": "bool",
    "tag": "json:\"enable_http2\"",
    "doc": "Enable HTTP2 protocol handling"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.EnableWebSockets",
    "type": "bool",
    "tag": "json:\"enable_websockets\"",
    "doc": "Enabled WebSockets and server side events support"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.FlushInterval",
    "type": "int",
    "tag": "json:\"flush_interval\"",
    "doc": "Set this to the number of seconds that Tyk uses to flush content from the proxied upstream connection to the open downstream connection.\nThis option needed be set for streaming protocols like Server Side Events, or gRPC streaming."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.MinVersion",
    "type": "uint16",
    "tag": "json:\"min_version\"",
    "doc": "Minimum TLS version. Possible values: https://tyk.io/docs/basic-config-and-security/security/tls-and-ssl/#values-for-tls-versions"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.OverrideDefaults",
    "type": "bool",
    "tag": "json:\"override_defaults\"",
    "doc": "No longer used"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.ReadTimeout",
    "type": "int",
    "tag": "json:\"read_timeout\"",
    "doc": "API Consumer -\u003e Gateway network read timeout. Not setting this config, or setting this to 0, defaults to 120 seconds"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.SSLCertificates",
    "type": "[]string",
    "tag": "json:\"ssl_certificates\"",
    "doc": "SSL certificates used by your Gateway server. A list of certificate IDs or path to files."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.SSLInsecureSkipVerify",
    "type": "bool",
    "tag": "json:\"ssl_insecure_skip_verify\"",
    "doc": "Disable TLS verification. Required if you are using self-signed certificates."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.ServerName",
    "type": "string",
    "tag": "json:\"server_name\"",
    "doc": "Start your Gateway HTTP server on specific server name"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.SkipTargetPathEscaping",
    "type": "bool",
    "tag": "json:\"skip_target_path_escaping\"",
    "doc": "Disable automatic character escaping, allowing to path original URL data to the upstream."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.SkipURLCleaning",
    "type": "bool",
    "tag": "json:\"skip_url_cleaning\"",
    "doc": "Allow the use of a double slash in a URL path. This can be useful if you need to pass raw URLs to your API endpoints.\nFor example: `http://myapi.com/get/http://example.com`."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.UseLE_SSL",
    "type": "bool",
    "tag": "json:\"use_ssl_le\"",
    "doc": "Enable Lets-Encrypt support"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.UseSSL",
    "type": "bool",
    "tag": "json:\"use_ssl\"",
    "doc": "Set to true to enable SSL connections"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "HttpServerOptionsConfig.WriteTimeout",
    "type": "int",
    "tag": "json:\"write_timeout\"",
    "doc": "API Consumer -\u003e Gateway network write timeout. Not setting this config, or setting this to 0, defaults to 120 seconds"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "LivenessCheckConfig.CheckDuration",
    "type": "time.Duration",
    "tag": "json:\"check_duration\"",
    "doc": "Frequencies of performing interval healthchecks for Redis, Dashboard, and RPC layer. Default: 10 seconds."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "LocalSessionCacheConf.CacheSessionEviction",
    "type": "int",
    "tag": "json:\"cached_session_eviction\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "LocalSessionCacheConf.CachedSessionTimeout",
    "type": "int",
    "tag": "json:\"cached_session_timeout\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "LocalSessionCacheConf.DisableCacheSessionState",
    "type": "bool",
    "tag": "json:\"disable_cached_session_state\"",
    "doc": "By default sessions are set to cache. Set this to `true` to stop Tyk from caching keys locally on the node."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "MonitorConfig.Config",
    "type": "WebHookHandlerConf",
    "tag": "json:\"configuration\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "MonitorConfig.EnableTriggerMonitors",
    "type": "bool",
    "tag": "json:\"enable_trigger_monitors\"",
    "doc": "Set this to `true` to have monitors enabled in your configuration for the node."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "MonitorConfig.GlobalTriggerLimit",
    "type": "float64",
    "tag": "json:\"global_trigger_limit\"",
    "doc": "The trigger limit, as a percentage of the quota that must be reached in order to trigger the event, any time the quota percentage is increased the event will trigger."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "MonitorConfig.MonitorOrgKeys",
    "type": "bool",
    "tag": "json:\"monitor_org_keys\"",
    "doc": "Apply the monitoring subsystem to organisation keys."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "MonitorConfig.MonitorUserKeys",
    "type": "bool",
    "tag": "json:\"monitor_user_keys\"",
    "doc": "Apply the monitoring subsystem to user keys."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NewRelicConfig.AppName",
    "type": "string",
    "tag": "json:\"app_name\"",
    "doc": "New Relic Application name"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NewRelicConfig.LicenseKey",
    "type": "string",
    "tag": "json:\"license_key\"",
    "doc": "New Relic License key"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormaliseURLPatterns.Custom",
    "type": "[]*regexp.Regexp",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormaliseURLPatterns.IDs",
    "type": "regexp.Regexp",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormaliseURLPatterns.UUIDs",
    "type": "regexp.Regexp",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormalisedURLConfig.CompiledPatternSet",
    "type": "NormaliseURLPatterns",
    "tag": "json:\"-\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormalisedURLConfig.Custom",
    "type": "[]string",
    "tag": "json:\"custom_patterns\"",
    "doc": "This is a list of custom patterns you can add. These must be valid regex strings. Tyk will replace these values with a {var} placeholder."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormalisedURLConfig.Enabled",
    "type": "bool",
    "tag": "json:\"enabled\"",
    "doc": "Set this to `true` to enable normalisation."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormalisedURLConfig.NormaliseNumbers",
    "type": "bool",
    "tag": "json:\"normalise_numbers\"",
    "doc": "Set this to true to have Tyk automatically match for numeric IDs, it will match with a preceding slash so as not to capture actual numbers:"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "NormalisedURLConfig.NormaliseUUIDs",
    "type": "bool",
    "tag": "json:\"normalise_uuids\"",
    "doc": "Each UUID will be replaced with a placeholder {uuid}"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PoliciesConfig.AllowExplicitPolicyID",
    "type": "bool",
    "tag": "json:\"allow_explicit_policy_id\"",
    "doc": "In a Pro installation, Tyk will load Policy IDs and use the internal object-ID as the ID of the policy.\nThis is not portable in cases where the data needs to be moved from installation to installation.\n\nIf you set this value to `true`, then the id parameter in a stored policy (or imported policy using the Dashboard API), will be used instead of the internal ID.\n\nThis option should only be used when moving an installation to a new database."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PoliciesConfig.PolicyConnectionString",
    "type": "string",
    "tag": "json:\"policy_connection_string\"",
    "doc": "This option is required if `policies.policy_source` is set to `service`.\nSet this to the URL of your Tyk Dashboard installation. The URL needs to be formatted as: http://dashboard_host:port."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PoliciesConfig.PolicyRecordName",
    "type": "string",
    "tag": "json:\"policy_record_name\"",
    "doc": "This option is required if `policies.policy_source` is set to `file`.\nSpecifies the path of your JSON file containing the available policies."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PoliciesConfig.PolicySource",
    "type": "string",
    "tag": "json:\"policy_source\"",
    "doc": "Set this value to `file` to look in the file system for a definition file. Set to `service` to use the Dashboard service."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PortRange.From",
    "type": "int",
    "tag": "json:\"from\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PortRange.To",
    "type": "int",
    "tag": "json:\"to\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PortWhiteList.Ports",
    "type": "[]int",
    "tag": "json:\"ports,omitempty\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "PortWhiteList.Ranges",
    "type": "[]PortRange",
    "tag": "json:\"ranges,omitempty\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Reporter.BatchSize",
    "type": "int",
    "tag": "json:\"batch_size\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Reporter.MaxBacklog",
    "type": "int",
    "tag": "json:\"max_backlog\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Reporter.URL",
    "type": "string",
    "tag": "json:\"url\"",
    "doc": "URL connection url to the zipkin server"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Sampler.Mod",
    "type": "uint64",
    "tag": "json:\"mod\"",
    "doc": "Mod is only used when sampler is mod"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Sampler.Name",
    "type": "string",
    "tag": "json:\"name\"",
    "doc": "Name is the name of the sampler to use. Options are\n\n\t\"boundary\"\nis appropriate for high-traffic instrumentation who\nprovision random trace ids, and make the sampling decision only once.\nIt defends against nodes in the cluster selecting exactly the same ids.\n\n\t\"count\"\nis appropriate for low-traffic instrumentation or\nthose who do not provision random trace ids. It is not appropriate for\ncollectors as the sampling decision isn't idempotent (consistent based\non trace id).\n\n\"mod\"\nprovides a generic type Sampler"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Sampler.Rate",
    "type": "float64",
    "tag": "json:\"rate\"",
    "doc": "Rate is used by both \"boundary\" and \"count\" samplers"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Sampler.Salt",
    "type": "int64",
    "tag": "json:\"salt\"",
    "doc": "Salt is used by \"boundary\" sampler"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SecurityConfig.Certificates",
    "type": "CertificatesConfig",
    "tag": "json:\"certificates\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SecurityConfig.ControlAPIUseMutualTLS",
    "type": "bool",
    "tag": "json:\"control_api_use_mutual_tls\"",
    "doc": "Enable Gateway Control API to use Mutual TLS. Certificates can be set via `security.certificates.control_api` section"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SecurityConfig.PinnedPublicKeys",
    "type": "map[string]string",
    "tag": "json:\"pinned_public_keys\"",
    "doc": "Specify public keys used for Certificate Pinning on global level."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SecurityConfig.PrivateCertificateEncodingSecret",
    "type": "string",
    "tag": "json:\"private_certificate_encoding_secret\"",
    "doc": "Set the AES256 secret which is used to encode certificate private keys when they uploaded via certificate storage"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ServiceDiscoveryConf.DefaultCacheTimeout",
    "type": "int",
    "tag": "json:\"default_cache_timeout\"",
    "doc": "Service discovery cache timeout"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ServicePort.Port",
    "type": "int",
    "tag": "json:\"port\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ServicePort.Protocol",
    "type": "string",
    "tag": "json:\"protocol\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.APIKey",
    "type": "string",
    "tag": "json:\"api_key\"",
    "doc": "This the API key of a user used to authenticate and authorise the Gateway’s access through MDCB.\nThe user should be a standard Dashboard user with minimal privileges so as to reduce any risk if the user is compromised.\nThe suggested security settings are read for Real-time notifications and the remaining options set to deny."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.BindToSlugsInsteadOfListenPaths",
    "type": "bool",
    "tag": "json:\"bind_to_slugs\"",
    "doc": "For an Self-Managed installation this can be left at `false` (the default setting). For Legacy Cloud Gateways it must be set to ‘true’."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.CallTimeout",
    "type": "int",
    "tag": "json:\"call_timeout\"",
    "doc": "Call Timeout allows to specify a time in seconds for the maximum allowed duration of a RPC call."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.ConnectionString",
    "type": "string",
    "tag": "json:\"connection_string\"",
    "doc": "Use this setting to add the URL for your MDCB or load balancer host."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.DisableKeySpaceSync",
    "type": "bool",
    "tag": "json:\"disable_keyspace_sync\"",
    "doc": "Set this option to `true` if you don’t want to monitor changes in the keys from a master Gateway."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.EnableRPCCache",
    "type": "bool",
    "tag": "json:\"enable_rpc_cache\"",
    "doc": "Set this option to `true` to enable RPC caching for keys."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.GroupID",
    "type": "string",
    "tag": "json:\"group_id\"",
    "doc": "This is the `zone` that this instance inhabits, e.g. the cluster/data-centre the Gateway lives in.\nThe group ID must be the same across all the Gateways of a data-centre/cluster which are also sharing the same Redis instance.\nThis ID should also be unique per cluster (otherwise another Gateway cluster can pick up your keyspace events and your cluster will get zero updates)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.PingTimeout",
    "type": "int",
    "tag": "json:\"ping_timeout\"",
    "doc": "The maximum time in seconds that a RPC ping can last."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.RPCKey",
    "type": "string",
    "tag": "json:\"rpc_key\"",
    "doc": "Your organisation ID to connect to the MDCB installation."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.RPCPoolSize",
    "type": "int",
    "tag": "json:\"rpc_pool_size\"",
    "doc": "The number of RPC connections in the pool. Basically it creates a set of connections that you can re-use as needed. Defaults to 5."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.SSLInsecureSkipVerify",
    "type": "bool",
    "tag": "json:\"ssl_insecure_skip_verify\"",
    "doc": "Set this option to `true` to allow the certificate validation (certificate chain and hostname) to be skipped.\nThis can be useful if you use a self-signed certificate."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.UseRPC",
    "type": "bool",
    "tag": "json:\"use_rpc\"",
    "doc": "Set to `true` to connect a worker Gateway using RPC."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "SlaveOptionsConfig.UseSSL",
    "type": "bool",
    "tag": "json:\"use_ssl\"",
    "doc": "Set this option to `true` to use an SSL RPC connection."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Addrs",
    "type": "[]string",
    "tag": "json:\"addrs\"",
    "doc": "If you have multi-node setup, you should use this field instead. For example: [\"host1:port1\", \"host2:port2\"]."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Database",
    "type": "int",
    "tag": "json:\"database\"",
    "doc": "Redis database"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.EnableCluster",
    "type": "bool",
    "tag": "json:\"enable_cluster\"",
    "doc": "Enable Redis Cluster support"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Host",
    "type": "string",
    "tag": "json:\"host\"",
    "doc": "The Redis host, by default this is set to `localhost`, but for production this should be set to a cluster."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Hosts",
    "type": "map[string]string",
    "tag": "json:\"hosts\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.MasterName",
    "type": "string",
    "tag": "json:\"master_name\"",
    "doc": "Redis sentinel master name"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.MaxActive",
    "type": "int",
    "tag": "json:\"optimisation_max_active\"",
    "doc": "Set the number of maximum connections in the Redis connection pool, which defaults to 500. Set to a higher value if you are expecting more traffic."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.MaxIdle",
    "type": "int",
    "tag": "json:\"optimisation_max_idle\"",
    "doc": "Set the number of maximum idle connections in the Redis connection pool, which defaults to 100. Set to a higher value if you are expecting more traffic."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Password",
    "type": "string",
    "tag": "json:\"password\"",
    "doc": "If your Redis instance has a password set for access, you can set it here."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Port",
    "type": "int",
    "tag": "json:\"port\"",
    "doc": "The Redis instance port."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.SSLInsecureSkipVerify",
    "type": "bool",
    "tag": "json:\"ssl_insecure_skip_verify\"",
    "doc": "Disable TLS verification"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Timeout",
    "type": "int",
    "tag": "json:\"timeout\"",
    "doc": "Set a custom timeout for Redis network operations. Default value 5 seconds."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Type",
    "type": "string",
    "tag": "json:\"type\"",
    "doc": "This should be set to `redis` (lowercase)"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.UseSSL",
    "type": "bool",
    "tag": "json:\"use_ssl\"",
    "doc": "Enable SSL/TLS connection between your Tyk Gateway \u0026 Redis."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "StorageOptionsConf.Username",
    "type": "string",
    "tag": "json:\"username\"",
    "doc": "Redis user name"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Tracer.Enabled",
    "type": "bool",
    "tag": "json:\"enabled\"",
    "doc": "Enable tracing"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Tracer.Name",
    "type": "string",
    "tag": "json:\"name\"",
    "doc": "The name of the tracer to initialize. For instance appdash, to use appdash tracer"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "Tracer.Options",
    "type": "map[string]interface{}",
    "tag": "json:\"options\"",
    "doc": "Tracing configuration. Refer to the Tracing Docs for the full list of options."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "TykError.Code",
    "type": "int",
    "tag": "json:\"code\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "TykError.Message",
    "type": "string",
    "tag": "json:\"message\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "UptimeTestsConfig.Config",
    "type": "UptimeTestsConfigDetail",
    "tag": "json:\"config\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "UptimeTestsConfig.Disable",
    "type": "bool",
    "tag": "json:\"disable\"",
    "doc": "To disable uptime tests on this node, set this value to `true`."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "UptimeTestsConfigDetail.CheckerPoolSize",
    "type": "int",
    "tag": "json:\"checker_pool_size\"",
    "doc": "The goroutine pool size to keep idle for uptime tests. If you have many uptime tests running at a high time period, then increase this value."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "UptimeTestsConfigDetail.EnableUptimeAnalytics",
    "type": "bool",
    "tag": "json:\"enable_uptime_analytics\"",
    "doc": "Set this value to `true` to have the node capture and record analytics data regarding the uptime tests."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "UptimeTestsConfigDetail.FailureTriggerSampleSize",
    "type": "int",
    "tag": "json:\"failure_trigger_sample_size\"",
    "doc": "The sample size to trigger a `HostUp` or `HostDown` event. For example, a setting of 3 will require at least three failures to occur before the uptime test is triggered."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "UptimeTestsConfigDetail.TimeWait",
    "type": "int",
    "tag": "json:\"time_wait\"",
    "doc": "The value in seconds between tests runs. All tests will run simultaneously. This value will set the time between those tests. So a value of 60 will run all uptime tests every 60 seconds."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "VaultConfig.Address",
    "type": "string",
    "tag": "json:\"address\"",
    "doc": "Address is the address of the Vault server. This should be a complete\nURL such as \"http://vault.example.com\"."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "VaultConfig.AgentAddress",
    "type": "string",
    "tag": "json:\"agent_address\"",
    "doc": "AgentAddress is the address of the local Vault agent. This should be a\ncomplete URL such as \"http://vault.example.com\"."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "VaultConfig.KVVersion",
    "type": "int",
    "tag": "json:\"kv_version\"",
    "doc": "KVVersion is the version number of Vault. Usually defaults to 2"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "VaultConfig.MaxRetries",
    "type": "int",
    "tag": "json:\"max_retries\"",
    "doc": "MaxRetries controls the maximum number of times to retry when a vault\nserer occurs"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "VaultConfig.Timeout",
    "type": "time.Duration",
    "tag": "json:\"timeout\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "VaultConfig.Token",
    "type": "string",
    "tag": "json:\"token\"",
    "doc": "Token is the vault root token"
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "WebHookHandlerConf.EventTimeout",
    "type": "int64",
    "tag": "bson:\"event_timeout\" json:\"event_timeout\"",
    "doc": "The cool-down for the event so it does not trigger again (in seconds)."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "WebHookHandlerConf.HeaderList",
    "type": "map[string]string",
    "tag": "bson:\"header_map\" json:\"header_map\"",
    "doc": "Headers to set when firing the webhook."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "WebHookHandlerConf.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "doc": "The method to use for the webhook."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "WebHookHandlerConf.TargetPath",
    "type": "string",
    "tag": "bson:\"target_path\" json:\"target_path\"",
    "doc": "The target path on which to send the request."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "WebHookHandlerConf.TemplatePath",
    "type": "string",
    "tag": "bson:\"template_path\" json:\"template_path\"",
    "doc": "The template to load in order to format the request."
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ZipkinConfig.Reporter",
    "type": "Reporter",
    "tag": "json:\"reporter\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.0"
    ],
    "path": "ZipkinConfig.Sampler",
    "type": "Sampler",
    "tag": "json:\"sampler\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.10",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "AnalyticsConfigConfig.EnableMultipleAnalyticsKeys",
    "type": "bool",
    "tag": "json:\"enable_multiple_analytics_keys\"",
    "doc": "Set this to `true` to have Tyk automatically divide the analytics records in multiple analytics keys.\nThis is especially useful when `storage.enable_cluster` is set to `true` since it will distribute the analytic keys across all the cluster nodes."
  },
  {
    "versions": [
      "v3.0.10",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "AnalyticsConfigConfig.PurgeInterval",
    "type": "float32",
    "tag": "json:\"purge_interval\"",
    "doc": "You can set the interval length on how often the tyk Gateway will purge analytics data. This value is in seconds and defaults to 10 seconds."
  },
  {
    "versions": [
      "v3.0.10",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "Config.AnalyticsStorage",
    "type": "StorageOptionsConf",
    "tag": "json:\"analytics_storage\"",
    "doc": ""
  },
  {
    "versions": [
      "v3.0.10",
      "v3.1.1",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "Config.DRLEnableSentinelRateLimiter",
    "type": "bool",
    "tag": "json:\"drl_enable_sentinel_rate_limiter\"",
    "doc": "Controls which algorthm to use as a fallback when your distributed rate limiter can't be used."
  },
  {
    "versions": [
      "v3.0.10",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "Config.EnableSeperateAnalyticsStore",
    "type": "bool",
    "tag": "json:\"enable_separate_analytics_store\"",
    "doc": "Enable separate analytics storage. Used together with `analytics_storage`."
  },
  {
    "versions": [
      "v3.0.10",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "Config.HashKeyFunctionFallback",
    "type": "[]string",
    "tag": "json:\"hash_key_function_fallback\"",
    "doc": "Specify your previous key hashing algorithm if you migrated from one algorithm to another."
  },
  {
    "versions": [
      "v3.0.10",
      "v3.1.1",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "Config.IgnoreCanonicalMIMEHeaderKey",
    "type": "bool",
    "tag": "json:\"ignore_canonical_mime_header_key\"",
    "doc": "When enabled Tyk ignores the canonical format of the MIME header keys.\n\nFor example when a request header with a “my-header” key is injected using “global_headers”, the upstream would typically get it as “My-Header”. When this flag is enabled it will be sent as “my-header” instead.\n\nCurrent support is limited to JavaScript plugins, global header injection, virtual endpoint and JQ transform header rewrites.\nThis functionality doesn’t affect headers that are sent by the HTTP client and the default formatting will apply in this case.\n\nFor technical details refer to the [CanonicalMIMEHeaderKey](https://golang.org/pkg/net/textproto/#CanonicalMIMEHeaderKey) functionality in the Go documentation."
  },
  {
    "versions": [
      "v3.0.10",
      "v3.1.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "SlaveOptionsConfig.KeySpaceSyncInterval",
    "type": "float32",
    "tag": "json:\"key_space_sync_interval\"",
    "doc": "You can use this to set a period for which the Gateway will check if there are changes in keys that must be synchronized. If this value is not set then it will default to 10 seconds."
  },
  {
    "versions": [
      "v3.0.10",
      "v3.1.1",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "StorageOptionsConf.SentinelPassword",
    "type": "string",
    "tag": "json:\"sentinel_password\"",
    "doc": "Redis sentinel password"
  },
  {
    "versions": [
      "v3.0.10",
      "v3.1.1",
      "v3.2.0",
      "v4.0.0",
      "v5.0.0"
    ],
    "path": "UptimeTestsConfig.PollerGroup",
    "type": "string",
    "tag": "json:\"poller_group\"",
    "doc": "If you have multiple Gateway clusters connected to the same Redis instance, you need to set a unique poller group for each cluster."
  },
  {
    "versions": [
      "v3.0.11",
      "v4.0.10",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "path": "SlaveOptionsConfig.RPCCertCacheExpiration",
    "type": "float32",
    "tag": "json:\"rpc_cert_cache_expiration\"",
    "doc": "RPCCertCacheExpiration defines the expiration time of the rpc cache that stores the certificates, defined in seconds"
  },
  {
    "versions": [
      "v3.0.11",
      "v4.0.10",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "path": "SlaveOptionsConfig.RPCGlobalCacheExpiration",
    "type": "float32",
    "tag": "json:\"rpc_global_cache_expiration\"",
    "doc": "RPCKeysCacheExpiration defines the expiration time of the rpc cache that stores the keys, defined in seconds"
  },
  {
    "versions": [
      "v3.2.0"
    ],
    "path": "Config.JWTSSLInsecureSkipVerify",
    "type": "bool",
    "tag": "json:\"jwt_ssl_insecure_skip_verify\"",
    "doc": "Skip TLS verification for JWT JWKs url validation"
  },
  {
    "versions": [
      "v3.2.0"
    ],
    "path": "Config.ProxySSLMaxVersion",
    "type": "uint16",
    "tag": "json:\"proxy_ssl_max_version\"",
    "doc": "Maximum TLS version for connection between Tyk and your upstream service."
  },
  {
    "versions": [
      "v3.2.0"
    ],
    "path": "HttpServerOptionsConfig.MaxVersion",
    "type": "uint16",
    "tag": "json:\"max_version\"",
    "doc": "Maximum TLS version."
  },
  {
    "versions": [
      "v4.0.10",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "path": "Config.BasicAuthHashKeyFunction",
    "type": "string",
    "tag": "json:\"basic_auth_hash_key_function\"",
    "doc": "Specify the Key hashing algorithm for \"basic auth\". Possible values: murmur64, murmur128, sha256, bcrypt.\nWill default to \"bcrypt\" if not set."
  },
  {
    "versions": [
      "v4.0.10",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "path": "HttpServerOptionsConfig.EnableStrictRoutes",
    "type": "bool",
    "tag": "json:\"enable_strict_routes\"",
    "doc": "EnableStrictRoutes changes the routing to avoid nearest-neighbour requests on overlapping routes\n\n- if disabled, `/apple` will route to `/app`, the current default behavior,\n- if enabled, `/app` only responds to `/app`, `/app/` and `/app/*` but not `/apple`\n\nRegular expressions and parameterized routes will be left alone regardless of this setting."
  },
  {
    "versions": [
      "v4.0.13",
      "v5.0.0"
    ],
    "path": "HttpServerOptionsConfig.SkipClientCAAnnouncement",
    "type": "bool",
    "tag": "json:\"skip_client_ca_announcement\"",
    "doc": "When mTLS enabled, this option allows to skip client CA announcement in the TLS handshake.\nThis option is useful when you have a lot of ClientCAs and you want to reduce the handshake overhead, as some clients can hit TLS handshake limits.\nThis option does not give any hints to the client, on which certificate to pick (but this is very rare situation when it is required)"
  },
  {
    "versions": [
      "v4.0.13",
      "v5.0.1",
      "v5.1.0",
      "v5.2.0"
    ],
    "path": "NewRelicConfig.EnableDistributedTracing",
    "type": "bool",
    "tag": "json:\"enable_distributed_tracing\"",
    "doc": "Enable distributed tracing"
  },
  {
    "versions": [
      "v4.0.14",
      "v5.0.3",
      "v5.1.0",
      "v5.2.0"
    ],
    "path": "CoProcessConfig.GRPCAuthority",
    "type": "string",
    "tag": "json:\"grpc_authority\"",
    "doc": "Authority used in GRPC connection"
  },
  {
    "versions": [
      "v4.0.14",
      "v4.3.5",
      "v5.0.3",
      "v5.1.1",
      "v5.2.0"
    ],
    "path": "DBAppConfOptionsConfig.ConnectionTimeout",
    "type": "int",
    "tag": "json:\"connection_timeout\"",
    "doc": "Set a timeout value, in seconds, for your Dashboard connection. Default value is 30."
  },
  {
    "versions": [
      "v4.1.0"
    ],
    "path": "AnalyticsConfigConfig.SerializerType",
    "type": "string",
    "tag": "json:\"serializer_type\"",
    "doc": "Determines the serialization engine for analytics. Available options: msgpack, and protobuf. By default, msgpack."
  },
  {
    "versions": [
      "v4.1.0"
    ],
    "path": "PoliciesConfig.PolicyPath",
    "type": "string",
    "tag": "json:\"policy_path\"",
    "doc": "This option is used for storing a policies  if `policies.policy_source` is set to `file`.\nit should be some existing file path on hard drive"
  },
  {
    "versions": [
      "v4.2.0"
    ],
    "path": "Config.SessionLifetimeRespectsKeyExpiration",
    "type": "bool",
    "tag": "bson:\"session_lifetime_respects_key_expiration\" json:\"session_lifetime_respects_key_expiration\"",
    "doc": "SessionLifetimeRespectsKeyExpiration respects the key expiration time when the session lifetime is less than the key expiration. That is, Redis waits the key expiration for physical removal."
  },
  {
    "versions": [
      "v4.2.1",
      "v4.3.0",
      "v5.0.0"
    ],
    "path": "SlaveOptionsConfig.SynchroniserEnabled",
    "type": "bool",
    "tag": "json:\"synchroniser_enabled\"",
    "doc": "SynchroniserEnabled enable this config if MDCB has enabled the synchoniser. If disabled then it will ignore signals to synchonise recources"
  },
  {
    "versions": [
      "v4.3.8",
      "v5.0.6",
      "v5.2.1"
    ],
    "path": "Config.ReloadInterval",
    "type": "int64",
    "tag": "json:\"reload_interval\"",
    "doc": "ReloadInterval defines a duration in seconds within which the gateway responds to a reload event.\nThe value defaults to 1, values lower than 1 are ignored."
  },
  {
    "versions": [
      "v5.0.4",
      "v5.1.1",
      "v5.2.0"
    ],
    "path": "Config.DisableKeyActionsByUsername",
    "type": "bool",
    "tag": "json:\"disable_key_actions_by_username\"",
    "doc": "DisableKeyActionsByUsername disables key search by username.\nWhen this is set to `true` you are able to search for keys only by keyID or key hash (if `hash_keys` is also set to `true`)\nNote that if `hash_keys` is also set to `true` then the keyID will not be provided for APIs secured using basic auth. In this scenario the only search option would be to use key hash\nIf you are using the Tyk Dashboard, you must configure this setting with the same value in both Gateway and Dashboard"
  },
  {
    "versions": [
      "v5.0.6",
      "v5.2.1"
    ],
    "path": "Config.ResourceSync",
    "type": "ResourceSyncConfig",
    "tag": "json:\"resource_sync\"",
    "doc": "ResourceSync configures mitigation strategy in case sync fails."
  },
  {
    "versions": [
      "v5.0.6",
      "v5.2.1"
    ],
    "path": "ResourceSyncConfig.Interval",
    "type": "int",
    "tag": "json:\"interval\"",
    "doc": "Interval configures the interval in seconds between each retry on a resource sync error."
  },
  {
    "versions": [
      "v5.0.6",
      "v5.2.1"
    ],
    "path": "ResourceSyncConfig.RetryAttempts",
    "type": "int",
    "tag": "json:\"retry_attempts\"",
    "doc": "RetryAttempts configures the number of retry attempts before returning on a resource sync."
  },
  {
    "versions": [
      "v5.1.0"
    ],
    "path": "HttpServerOptionsConfig.MaxRequestBodySize",
    "type": "int64",
    "tag": "json:\"max_request_body_size\"",
    "doc": "MaxRequestBodySize configures a maximum size limit for request body size (in bytes) for all APIs on the Gateway.\n\nTyk Gateway will evaluate all API requests against this size limit and will respond with HTTP 413 status code if the body of the request is larger.\n\nTwo methods are used to perform the comparison:\n - If the API Request contains the `Content-Length` header, this is directly compared against `MaxRequestBodySize`.\n - If the `Content-Length` header is not provided, the Request body is read in chunks to compare total size against `MaxRequestBodySize`.\n\nA value of zero (default) means that no maximum is set and API requests will not be tested.\n\nSee more information about setting request size limits here:\nhttps://tyk.io/docs/basic-config-and-security/control-limit-traffic/request-size-limits/#maximum-request-sizes"
  },
  {
    "versions": [
      "v5.2.0"
    ],
    "path": "Config.OpenTelemetry",
    "type": "otel.OpenTelemetry",
    "tag": "json:\"opentelemetry\"",
    "doc": "Section for configuring OpenTelemetry."
  },
  {
    "versions": [
      "v5.2.2"
    ],
    "path": "NormaliseURLPatterns.ULIDs",
    "type": "regexp.Regexp",
    "tag": "",
    "doc": ""
  },
  {
    "versions": [
      "v5.2.2"
    ],
    "path": "NormalisedURLConfig.NormaliseULIDs",
    "type": "bool",
    "tag": "json:\"normalise_ulids\"",
    "doc": "Each ULID will be replaced with a placeholder {ulid}"
  }
]
