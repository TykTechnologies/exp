[
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Action",
    "path": "EndpointMethodMeta.Action",
    "type": "EndpointMethodAction",
    "tag": "bson:\"action\" json:\"action\"",
    "json_name": "action",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Code",
    "path": "EndpointMethodMeta.Code",
    "type": "int",
    "tag": "bson:\"code\" json:\"code\"",
    "json_name": "code",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Data",
    "path": "EndpointMethodMeta.Data",
    "type": "string",
    "tag": "bson:\"data\" json:\"data\"",
    "json_name": "data",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Headers",
    "path": "EndpointMethodMeta.Headers",
    "type": "map[string]string",
    "tag": "bson:\"headers\" json:\"headers\"",
    "json_name": "headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "EndPointMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "IgnoreCase",
    "path": "EndPointMeta.IgnoreCase",
    "type": "bool",
    "tag": "bson:\"ignore_case\" json:\"ignore_case\"",
    "json_name": "ignore_case",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "MethodActions",
    "path": "EndPointMeta.MethodActions",
    "type": "map[string]EndpointMethodMeta",
    "tag": "bson:\"method_actions\" json:\"method_actions\"",
    "json_name": "method_actions",
    "doc": "Deprecated. Use Method instead."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "CacheMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "CacheMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheKeyRegex",
    "path": "CacheMeta.CacheKeyRegex",
    "type": "string",
    "tag": "bson:\"cache_key_regex\" json:\"cache_key_regex\"",
    "json_name": "cache_key_regex",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheOnlyResponseCodes",
    "path": "CacheMeta.CacheOnlyResponseCodes",
    "type": "[]int",
    "tag": "bson:\"cache_response_codes\" json:\"cache_response_codes\"",
    "json_name": "cache_response_codes",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Input",
    "path": "TemplateData.Input",
    "type": "RequestInputType",
    "tag": "bson:\"input_type\" json:\"input_type\"",
    "json_name": "input_type",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Mode",
    "path": "TemplateData.Mode",
    "type": "SourceMode",
    "tag": "bson:\"template_mode\" json:\"template_mode\"",
    "json_name": "template_mode",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableSession",
    "path": "TemplateData.EnableSession",
    "type": "bool",
    "tag": "bson:\"enable_session\" json:\"enable_session\"",
    "json_name": "enable_session",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TemplateSource",
    "path": "TemplateData.TemplateSource",
    "type": "string",
    "tag": "bson:\"template_source\" json:\"template_source\"",
    "json_name": "template_source",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TemplateData",
    "path": "TemplateMeta.TemplateData",
    "type": "TemplateData",
    "tag": "bson:\"template_data\" json:\"template_data\"",
    "json_name": "template_data",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "TemplateMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "TemplateMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Filter",
    "path": "TransformJQMeta.Filter",
    "type": "string",
    "tag": "bson:\"filter\" json:\"filter\"",
    "json_name": "filter",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "TransformJQMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "TransformJQMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DeleteHeaders",
    "path": "HeaderInjectionMeta.DeleteHeaders",
    "type": "[]string",
    "tag": "bson:\"delete_headers\" json:\"delete_headers\"",
    "json_name": "delete_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AddHeaders",
    "path": "HeaderInjectionMeta.AddHeaders",
    "type": "map[string]string",
    "tag": "bson:\"add_headers\" json:\"add_headers\"",
    "json_name": "add_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "HeaderInjectionMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "HeaderInjectionMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ActOnResponse",
    "path": "HeaderInjectionMeta.ActOnResponse",
    "type": "bool",
    "tag": "bson:\"act_on\" json:\"act_on\"",
    "json_name": "act_on",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "HardTimeoutMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "HardTimeoutMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TimeOut",
    "path": "HardTimeoutMeta.TimeOut",
    "type": "int",
    "tag": "bson:\"timeout\" json:\"timeout\"",
    "json_name": "timeout",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "TrackEndpointMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "TrackEndpointMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "InternalMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "InternalMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "RequestSizeMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "RequestSizeMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SizeLimit",
    "path": "RequestSizeMeta.SizeLimit",
    "type": "int64",
    "tag": "bson:\"size_limit\" json:\"size_limit\"",
    "json_name": "size_limit",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "CircuitBreakerMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "CircuitBreakerMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ThresholdPercent",
    "path": "CircuitBreakerMeta.ThresholdPercent",
    "type": "float64",
    "tag": "bson:\"threshold_percent\" json:\"threshold_percent\"",
    "json_name": "threshold_percent",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Samples",
    "path": "CircuitBreakerMeta.Samples",
    "type": "int64",
    "tag": "bson:\"samples\" json:\"samples\"",
    "json_name": "samples",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ReturnToServiceAfter",
    "path": "CircuitBreakerMeta.ReturnToServiceAfter",
    "type": "int",
    "tag": "bson:\"return_to_service_after\" json:\"return_to_service_after\"",
    "json_name": "return_to_service_after",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "MatchPattern",
    "path": "StringRegexMap.MatchPattern",
    "type": "string",
    "tag": "bson:\"match_rx\" json:\"match_rx\"",
    "json_name": "match_rx",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Reverse",
    "path": "StringRegexMap.Reverse",
    "type": "bool",
    "tag": "bson:\"reverse\" json:\"reverse\"",
    "json_name": "reverse",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "HeaderMatches",
    "path": "RoutingTriggerOptions.HeaderMatches",
    "type": "map[string]StringRegexMap",
    "tag": "bson:\"header_matches\" json:\"header_matches\"",
    "json_name": "header_matches",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "QueryValMatches",
    "path": "RoutingTriggerOptions.QueryValMatches",
    "type": "map[string]StringRegexMap",
    "tag": "bson:\"query_val_matches\" json:\"query_val_matches\"",
    "json_name": "query_val_matches",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "PathPartMatches",
    "path": "RoutingTriggerOptions.PathPartMatches",
    "type": "map[string]StringRegexMap",
    "tag": "bson:\"path_part_matches\" json:\"path_part_matches\"",
    "json_name": "path_part_matches",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SessionMetaMatches",
    "path": "RoutingTriggerOptions.SessionMetaMatches",
    "type": "map[string]StringRegexMap",
    "tag": "bson:\"session_meta_matches\" json:\"session_meta_matches\"",
    "json_name": "session_meta_matches",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "RequestContextMatches",
    "path": "RoutingTriggerOptions.RequestContextMatches",
    "type": "map[string]StringRegexMap",
    "tag": "bson:\"request_context_matches\" json:\"request_context_matches\"",
    "json_name": "request_context_matches",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "PayloadMatches",
    "path": "RoutingTriggerOptions.PayloadMatches",
    "type": "StringRegexMap",
    "tag": "bson:\"payload_matches\" json:\"payload_matches\"",
    "json_name": "payload_matches",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "On",
    "path": "RoutingTrigger.On",
    "type": "RoutingTriggerOnType",
    "tag": "bson:\"on\" json:\"on\"",
    "json_name": "on",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Options",
    "path": "RoutingTrigger.Options",
    "type": "RoutingTriggerOptions",
    "tag": "bson:\"options\" json:\"options\"",
    "json_name": "options",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "RewriteTo",
    "path": "RoutingTrigger.RewriteTo",
    "type": "string",
    "tag": "bson:\"rewrite_to\" json:\"rewrite_to\"",
    "json_name": "rewrite_to",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "URLRewriteMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "URLRewriteMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "MatchPattern",
    "path": "URLRewriteMeta.MatchPattern",
    "type": "string",
    "tag": "bson:\"match_pattern\" json:\"match_pattern\"",
    "json_name": "match_pattern",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "RewriteTo",
    "path": "URLRewriteMeta.RewriteTo",
    "type": "string",
    "tag": "bson:\"rewrite_to\" json:\"rewrite_to\"",
    "json_name": "rewrite_to",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Triggers",
    "path": "URLRewriteMeta.Triggers",
    "type": "[]RoutingTrigger",
    "tag": "bson:\"triggers\" json:\"triggers\"",
    "json_name": "triggers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "MatchRegexp",
    "path": "URLRewriteMeta.MatchRegexp",
    "type": "regexp.Regexp",
    "tag": "json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ResponseFunctionName",
    "path": "VirtualMeta.ResponseFunctionName",
    "type": "string",
    "tag": "bson:\"response_function_name\" json:\"response_function_name\"",
    "json_name": "response_function_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "FunctionSourceType",
    "path": "VirtualMeta.FunctionSourceType",
    "type": "SourceMode",
    "tag": "bson:\"function_source_type\" json:\"function_source_type\"",
    "json_name": "function_source_type",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "FunctionSourceURI",
    "path": "VirtualMeta.FunctionSourceURI",
    "type": "string",
    "tag": "bson:\"function_source_uri\" json:\"function_source_uri\"",
    "json_name": "function_source_uri",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "VirtualMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "VirtualMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseSession",
    "path": "VirtualMeta.UseSession",
    "type": "bool",
    "tag": "bson:\"use_session\" json:\"use_session\"",
    "json_name": "use_session",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ProxyOnError",
    "path": "VirtualMeta.ProxyOnError",
    "type": "bool",
    "tag": "bson:\"proxy_on_error\" json:\"proxy_on_error\"",
    "json_name": "proxy_on_error",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "MethodTransformMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "MethodTransformMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ToMethod",
    "path": "MethodTransformMeta.ToMethod",
    "type": "string",
    "tag": "bson:\"to_method\" json:\"to_method\"",
    "json_name": "to_method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "ValidatePathMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "ValidatePathMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Schema",
    "path": "ValidatePathMeta.Schema",
    "type": "map[string]interface{}",
    "tag": "bson:\"schema\" json:\"schema\"",
    "json_name": "schema",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SchemaB64",
    "path": "ValidatePathMeta.SchemaB64",
    "type": "string",
    "tag": "bson:\"schema_b64\" json:\"schema_b64,omitempty\"",
    "json_name": "schema_b64,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SchemaCache",
    "path": "ValidatePathMeta.SchemaCache",
    "type": "gojsonschema.JSONLoader",
    "tag": "bson:\"-\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ErrorResponseCode",
    "path": "ValidatePathMeta.ErrorResponseCode",
    "type": "int",
    "tag": "bson:\"error_response_code\" json:\"error_response_code\"",
    "json_name": "error_response_code",
    "doc": "Allows override of default 422 Unprocessible Entity response code for validation errors."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Ignored",
    "path": "ExtendedPathsSet.Ignored",
    "type": "[]EndPointMeta",
    "tag": "bson:\"ignored\" json:\"ignored,omitempty\"",
    "json_name": "ignored,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "WhiteList",
    "path": "ExtendedPathsSet.WhiteList",
    "type": "[]EndPointMeta",
    "tag": "bson:\"white_list\" json:\"white_list,omitempty\"",
    "json_name": "white_list,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "BlackList",
    "path": "ExtendedPathsSet.BlackList",
    "type": "[]EndPointMeta",
    "tag": "bson:\"black_list\" json:\"black_list,omitempty\"",
    "json_name": "black_list,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Cached",
    "path": "ExtendedPathsSet.Cached",
    "type": "[]string",
    "tag": "bson:\"cache\" json:\"cache,omitempty\"",
    "json_name": "cache,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AdvanceCacheConfig",
    "path": "ExtendedPathsSet.AdvanceCacheConfig",
    "type": "[]CacheMeta",
    "tag": "bson:\"advance_cache_config\" json:\"advance_cache_config,omitempty\"",
    "json_name": "advance_cache_config,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Transform",
    "path": "ExtendedPathsSet.Transform",
    "type": "[]TemplateMeta",
    "tag": "bson:\"transform\" json:\"transform,omitempty\"",
    "json_name": "transform,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TransformResponse",
    "path": "ExtendedPathsSet.TransformResponse",
    "type": "[]TemplateMeta",
    "tag": "bson:\"transform_response\" json:\"transform_response,omitempty\"",
    "json_name": "transform_response,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TransformJQ",
    "path": "ExtendedPathsSet.TransformJQ",
    "type": "[]TransformJQMeta",
    "tag": "bson:\"transform_jq\" json:\"transform_jq,omitempty\"",
    "json_name": "transform_jq,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TransformJQResponse",
    "path": "ExtendedPathsSet.TransformJQResponse",
    "type": "[]TransformJQMeta",
    "tag": "bson:\"transform_jq_response\" json:\"transform_jq_response,omitempty\"",
    "json_name": "transform_jq_response,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TransformHeader",
    "path": "ExtendedPathsSet.TransformHeader",
    "type": "[]HeaderInjectionMeta",
    "tag": "bson:\"transform_headers\" json:\"transform_headers,omitempty\"",
    "json_name": "transform_headers,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TransformResponseHeader",
    "path": "ExtendedPathsSet.TransformResponseHeader",
    "type": "[]HeaderInjectionMeta",
    "tag": "bson:\"transform_response_headers\" json:\"transform_response_headers,omitempty\"",
    "json_name": "transform_response_headers,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "HardTimeouts",
    "path": "ExtendedPathsSet.HardTimeouts",
    "type": "[]HardTimeoutMeta",
    "tag": "bson:\"hard_timeouts\" json:\"hard_timeouts,omitempty\"",
    "json_name": "hard_timeouts,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CircuitBreaker",
    "path": "ExtendedPathsSet.CircuitBreaker",
    "type": "[]CircuitBreakerMeta",
    "tag": "bson:\"circuit_breakers\" json:\"circuit_breakers,omitempty\"",
    "json_name": "circuit_breakers,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "URLRewrite",
    "path": "ExtendedPathsSet.URLRewrite",
    "type": "[]URLRewriteMeta",
    "tag": "bson:\"url_rewrites\" json:\"url_rewrites,omitempty\"",
    "json_name": "url_rewrites,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Virtual",
    "path": "ExtendedPathsSet.Virtual",
    "type": "[]VirtualMeta",
    "tag": "bson:\"virtual\" json:\"virtual,omitempty\"",
    "json_name": "virtual,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SizeLimit",
    "path": "ExtendedPathsSet.SizeLimit",
    "type": "[]RequestSizeMeta",
    "tag": "bson:\"size_limits\" json:\"size_limits,omitempty\"",
    "json_name": "size_limits,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "MethodTransforms",
    "path": "ExtendedPathsSet.MethodTransforms",
    "type": "[]MethodTransformMeta",
    "tag": "bson:\"method_transforms\" json:\"method_transforms,omitempty\"",
    "json_name": "method_transforms,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TrackEndpoints",
    "path": "ExtendedPathsSet.TrackEndpoints",
    "type": "[]TrackEndpointMeta",
    "tag": "bson:\"track_endpoints\" json:\"track_endpoints,omitempty\"",
    "json_name": "track_endpoints,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DoNotTrackEndpoints",
    "path": "ExtendedPathsSet.DoNotTrackEndpoints",
    "type": "[]TrackEndpointMeta",
    "tag": "bson:\"do_not_track_endpoints\" json:\"do_not_track_endpoints,omitempty\"",
    "json_name": "do_not_track_endpoints,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ValidateJSON",
    "path": "ExtendedPathsSet.ValidateJSON",
    "type": "[]ValidatePathMeta",
    "tag": "bson:\"validate_json\" json:\"validate_json,omitempty\"",
    "json_name": "validate_json,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Internal",
    "path": "ExtendedPathsSet.Internal",
    "type": "[]InternalMeta",
    "tag": "bson:\"internal\" json:\"internal,omitempty\"",
    "json_name": "internal,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "VersionInfo.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Expires",
    "path": "VersionInfo.Expires",
    "type": "string",
    "tag": "bson:\"expires\" json:\"expires\"",
    "json_name": "expires",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExpiresTs",
    "path": "VersionInfo.ExpiresTs",
    "type": "time.Time",
    "tag": "bson:\"-\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Paths",
    "path": "VersionInfo.Paths",
    "type": "struct{}",
    "tag": "bson:\"paths\" json:\"paths\"",
    "json_name": "paths",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseExtendedPaths",
    "path": "VersionInfo.UseExtendedPaths",
    "type": "bool",
    "tag": "bson:\"use_extended_paths\" json:\"use_extended_paths\"",
    "json_name": "use_extended_paths",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExtendedPaths",
    "path": "VersionInfo.ExtendedPaths",
    "type": "ExtendedPathsSet",
    "tag": "bson:\"extended_paths\" json:\"extended_paths\"",
    "json_name": "extended_paths",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GlobalHeaders",
    "path": "VersionInfo.GlobalHeaders",
    "type": "map[string]string",
    "tag": "bson:\"global_headers\" json:\"global_headers\"",
    "json_name": "global_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GlobalHeadersRemove",
    "path": "VersionInfo.GlobalHeadersRemove",
    "type": "[]string",
    "tag": "bson:\"global_headers_remove\" json:\"global_headers_remove\"",
    "json_name": "global_headers_remove",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GlobalResponseHeaders",
    "path": "VersionInfo.GlobalResponseHeaders",
    "type": "map[string]string",
    "tag": "bson:\"global_response_headers\" json:\"global_response_headers\"",
    "json_name": "global_response_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GlobalResponseHeadersRemove",
    "path": "VersionInfo.GlobalResponseHeadersRemove",
    "type": "[]string",
    "tag": "bson:\"global_response_headers_remove\" json:\"global_response_headers_remove\"",
    "json_name": "global_response_headers_remove",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "IgnoreEndpointCase",
    "path": "VersionInfo.IgnoreEndpointCase",
    "type": "bool",
    "tag": "bson:\"ignore_endpoint_case\" json:\"ignore_endpoint_case\"",
    "json_name": "ignore_endpoint_case",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GlobalSizeLimit",
    "path": "VersionInfo.GlobalSizeLimit",
    "type": "int64",
    "tag": "bson:\"global_size_limit\" json:\"global_size_limit\"",
    "json_name": "global_size_limit",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "OverrideTarget",
    "path": "VersionInfo.OverrideTarget",
    "type": "string",
    "tag": "bson:\"override_target\" json:\"override_target\"",
    "json_name": "override_target",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "AuthProviderMeta.Name",
    "type": "AuthProviderCode",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "StorageEngine",
    "path": "AuthProviderMeta.StorageEngine",
    "type": "StorageEngineCode",
    "tag": "bson:\"storage_engine\" json:\"storage_engine\"",
    "json_name": "storage_engine",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Meta",
    "path": "AuthProviderMeta.Meta",
    "type": "map[string]interface{}",
    "tag": "bson:\"meta\" json:\"meta\"",
    "json_name": "meta",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "SessionProviderMeta.Name",
    "type": "SessionProviderCode",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "StorageEngine",
    "path": "SessionProviderMeta.StorageEngine",
    "type": "StorageEngineCode",
    "tag": "bson:\"storage_engine\" json:\"storage_engine\"",
    "json_name": "storage_engine",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Meta",
    "path": "SessionProviderMeta.Meta",
    "type": "map[string]interface{}",
    "tag": "bson:\"meta\" json:\"meta\"",
    "json_name": "meta",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Handler",
    "path": "EventHandlerTriggerConfig.Handler",
    "type": "TykEventHandlerName",
    "tag": "bson:\"handler_name\" json:\"handler_name\"",
    "json_name": "handler_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "HandlerMeta",
    "path": "EventHandlerTriggerConfig.HandlerMeta",
    "type": "map[string]interface{}",
    "tag": "bson:\"handler_meta\" json:\"handler_meta\"",
    "json_name": "handler_meta",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Events",
    "path": "EventHandlerMetaConfig.Events",
    "type": "map[TykEvent]interface{}",
    "tag": "bson:\"events\" json:\"events\"",
    "json_name": "events",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "MiddlewareDefinition.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "MiddlewareDefinition.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "RequireSession",
    "path": "MiddlewareDefinition.RequireSession",
    "type": "bool",
    "tag": "bson:\"require_session\" json:\"require_session\"",
    "json_name": "require_session",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "RawBodyOnly",
    "path": "MiddlewareDefinition.RawBodyOnly",
    "type": "bool",
    "tag": "bson:\"raw_body_only\" json:\"raw_body_only\"",
    "json_name": "raw_body_only",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExtractFrom",
    "path": "MiddlewareIdExtractor.ExtractFrom",
    "type": "IdExtractorSource",
    "tag": "bson:\"extract_from\" json:\"extract_from\"",
    "json_name": "extract_from",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExtractWith",
    "path": "MiddlewareIdExtractor.ExtractWith",
    "type": "IdExtractorType",
    "tag": "bson:\"extract_with\" json:\"extract_with\"",
    "json_name": "extract_with",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExtractorConfig",
    "path": "MiddlewareIdExtractor.ExtractorConfig",
    "type": "map[string]interface{}",
    "tag": "bson:\"extractor_config\" json:\"extractor_config\"",
    "json_name": "extractor_config",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Extractor",
    "path": "MiddlewareIdExtractor.Extractor",
    "type": "IDExtractor",
    "tag": "bson:\"-\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Pre",
    "path": "MiddlewareSection.Pre",
    "type": "[]MiddlewareDefinition",
    "tag": "bson:\"pre\" json:\"pre\"",
    "json_name": "pre",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Post",
    "path": "MiddlewareSection.Post",
    "type": "[]MiddlewareDefinition",
    "tag": "bson:\"post\" json:\"post\"",
    "json_name": "post",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "PostKeyAuth",
    "path": "MiddlewareSection.PostKeyAuth",
    "type": "[]MiddlewareDefinition",
    "tag": "bson:\"post_key_auth\" json:\"post_key_auth\"",
    "json_name": "post_key_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AuthCheck",
    "path": "MiddlewareSection.AuthCheck",
    "type": "MiddlewareDefinition",
    "tag": "bson:\"auth_check\" json:\"auth_check\"",
    "json_name": "auth_check",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Response",
    "path": "MiddlewareSection.Response",
    "type": "[]MiddlewareDefinition",
    "tag": "bson:\"response\" json:\"response\"",
    "json_name": "response",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Driver",
    "path": "MiddlewareSection.Driver",
    "type": "MiddlewareDriver",
    "tag": "bson:\"driver\" json:\"driver\"",
    "json_name": "driver",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "IdExtractor",
    "path": "MiddlewareSection.IdExtractor",
    "type": "MiddlewareIdExtractor",
    "tag": "bson:\"id_extractor\" json:\"id_extractor\"",
    "json_name": "id_extractor",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheTimeout",
    "path": "CacheOptions.CacheTimeout",
    "type": "int64",
    "tag": "bson:\"cache_timeout\" json:\"cache_timeout\"",
    "json_name": "cache_timeout",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableCache",
    "path": "CacheOptions.EnableCache",
    "type": "bool",
    "tag": "bson:\"enable_cache\" json:\"enable_cache\"",
    "json_name": "enable_cache",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheAllSafeRequests",
    "path": "CacheOptions.CacheAllSafeRequests",
    "type": "bool",
    "tag": "bson:\"cache_all_safe_requests\" json:\"cache_all_safe_requests\"",
    "json_name": "cache_all_safe_requests",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheOnlyResponseCodes",
    "path": "CacheOptions.CacheOnlyResponseCodes",
    "type": "[]int",
    "tag": "bson:\"cache_response_codes\" json:\"cache_response_codes\"",
    "json_name": "cache_response_codes",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableUpstreamCacheControl",
    "path": "CacheOptions.EnableUpstreamCacheControl",
    "type": "bool",
    "tag": "bson:\"enable_upstream_cache_control\" json:\"enable_upstream_cache_control\"",
    "json_name": "enable_upstream_cache_control",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheControlTTLHeader",
    "path": "CacheOptions.CacheControlTTLHeader",
    "type": "string",
    "tag": "bson:\"cache_control_ttl_header\" json:\"cache_control_ttl_header\"",
    "json_name": "cache_control_ttl_header",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheByHeaders",
    "path": "CacheOptions.CacheByHeaders",
    "type": "[]string",
    "tag": "bson:\"cache_by_headers\" json:\"cache_by_headers\"",
    "json_name": "cache_by_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "ResponseProcessor.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Options",
    "path": "ResponseProcessor.Options",
    "type": "",
    "tag": "bson:\"options\" json:\"options\"",
    "json_name": "options",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CheckURL",
    "path": "HostCheckObject.CheckURL",
    "type": "string",
    "tag": "bson:\"url\" json:\"url\"",
    "json_name": "url",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Protocol",
    "path": "HostCheckObject.Protocol",
    "type": "string",
    "tag": "bson:\"protocol\" json:\"protocol\"",
    "json_name": "protocol",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Timeout",
    "path": "HostCheckObject.Timeout",
    "type": "time.Duration",
    "tag": "bson:\"timeout\" json:\"timeout\"",
    "json_name": "timeout",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableProxyProtocol",
    "path": "HostCheckObject.EnableProxyProtocol",
    "type": "bool",
    "tag": "bson:\"enable_proxy_protocol\" json:\"enable_proxy_protocol\"",
    "json_name": "enable_proxy_protocol",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Commands",
    "path": "HostCheckObject.Commands",
    "type": "[]CheckCommand",
    "tag": "bson:\"commands\" json:\"commands\"",
    "json_name": "commands",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Method",
    "path": "HostCheckObject.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Headers",
    "path": "HostCheckObject.Headers",
    "type": "map[string]string",
    "tag": "bson:\"headers\" json:\"headers\"",
    "json_name": "headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Body",
    "path": "HostCheckObject.Body",
    "type": "string",
    "tag": "bson:\"body\" json:\"body\"",
    "json_name": "body",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "CheckCommand.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Message",
    "path": "CheckCommand.Message",
    "type": "string",
    "tag": "bson:\"message\" json:\"message\"",
    "json_name": "message",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseDiscoveryService",
    "path": "ServiceDiscoveryConfiguration.UseDiscoveryService",
    "type": "bool",
    "tag": "bson:\"use_discovery_service\" json:\"use_discovery_service\"",
    "json_name": "use_discovery_service",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "QueryEndpoint",
    "path": "ServiceDiscoveryConfiguration.QueryEndpoint",
    "type": "string",
    "tag": "bson:\"query_endpoint\" json:\"query_endpoint\"",
    "json_name": "query_endpoint",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseNestedQuery",
    "path": "ServiceDiscoveryConfiguration.UseNestedQuery",
    "type": "bool",
    "tag": "bson:\"use_nested_query\" json:\"use_nested_query\"",
    "json_name": "use_nested_query",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ParentDataPath",
    "path": "ServiceDiscoveryConfiguration.ParentDataPath",
    "type": "string",
    "tag": "bson:\"parent_data_path\" json:\"parent_data_path\"",
    "json_name": "parent_data_path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DataPath",
    "path": "ServiceDiscoveryConfiguration.DataPath",
    "type": "string",
    "tag": "bson:\"data_path\" json:\"data_path\"",
    "json_name": "data_path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "PortDataPath",
    "path": "ServiceDiscoveryConfiguration.PortDataPath",
    "type": "string",
    "tag": "bson:\"port_data_path\" json:\"port_data_path\"",
    "json_name": "port_data_path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TargetPath",
    "path": "ServiceDiscoveryConfiguration.TargetPath",
    "type": "string",
    "tag": "bson:\"target_path\" json:\"target_path\"",
    "json_name": "target_path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseTargetList",
    "path": "ServiceDiscoveryConfiguration.UseTargetList",
    "type": "bool",
    "tag": "bson:\"use_target_list\" json:\"use_target_list\"",
    "json_name": "use_target_list",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheTimeout",
    "path": "ServiceDiscoveryConfiguration.CacheTimeout",
    "type": "int64",
    "tag": "bson:\"cache_timeout\" json:\"cache_timeout\"",
    "json_name": "cache_timeout",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EndpointReturnsList",
    "path": "ServiceDiscoveryConfiguration.EndpointReturnsList",
    "type": "bool",
    "tag": "bson:\"endpoint_returns_list\" json:\"endpoint_returns_list\"",
    "json_name": "endpoint_returns_list",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Issuer",
    "path": "OIDProviderConfig.Issuer",
    "type": "string",
    "tag": "bson:\"issuer\" json:\"issuer\"",
    "json_name": "issuer",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ClientIDs",
    "path": "OIDProviderConfig.ClientIDs",
    "type": "map[string]string",
    "tag": "bson:\"client_ids\" json:\"client_ids\"",
    "json_name": "client_ids",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Providers",
    "path": "OpenIDOptions.Providers",
    "type": "[]OIDProviderConfig",
    "tag": "bson:\"providers\" json:\"providers\"",
    "json_name": "providers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SegregateByClient",
    "path": "OpenIDOptions.SegregateByClient",
    "type": "bool",
    "tag": "bson:\"segregate_by_client\" json:\"segregate_by_client\"",
    "json_name": "segregate_by_client",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseParam",
    "path": "AuthConfig.UseParam",
    "type": "bool",
    "tag": "mapstructure:\"use_param\" bson:\"use_param\" json:\"use_param\"",
    "json_name": "use_param",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ParamName",
    "path": "AuthConfig.ParamName",
    "type": "string",
    "tag": "mapstructure:\"param_name\" bson:\"param_name\" json:\"param_name\"",
    "json_name": "param_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseCookie",
    "path": "AuthConfig.UseCookie",
    "type": "bool",
    "tag": "mapstructure:\"use_cookie\" bson:\"use_cookie\" json:\"use_cookie\"",
    "json_name": "use_cookie",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CookieName",
    "path": "AuthConfig.CookieName",
    "type": "string",
    "tag": "mapstructure:\"cookie_name\" bson:\"cookie_name\" json:\"cookie_name\"",
    "json_name": "cookie_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AuthHeaderName",
    "path": "AuthConfig.AuthHeaderName",
    "type": "string",
    "tag": "mapstructure:\"auth_header_name\" bson:\"auth_header_name\" json:\"auth_header_name\"",
    "json_name": "auth_header_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseCertificate",
    "path": "AuthConfig.UseCertificate",
    "type": "bool",
    "tag": "mapstructure:\"use_certificate\" bson:\"use_certificate\" json:\"use_certificate\"",
    "json_name": "use_certificate",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ValidateSignature",
    "path": "AuthConfig.ValidateSignature",
    "type": "bool",
    "tag": "mapstructure:\"validate_signature\" bson:\"validate_signature\" json:\"validate_signature\"",
    "json_name": "validate_signature",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Signature",
    "path": "AuthConfig.Signature",
    "type": "SignatureConfig",
    "tag": "mapstructure:\"signature\" bson:\"signature\" json:\"signature,omitempty\"",
    "json_name": "signature,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Algorithm",
    "path": "SignatureConfig.Algorithm",
    "type": "string",
    "tag": "mapstructure:\"algorithm\" bson:\"algorithm\" json:\"algorithm\"",
    "json_name": "algorithm",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Header",
    "path": "SignatureConfig.Header",
    "type": "string",
    "tag": "mapstructure:\"header\" bson:\"header\" json:\"header\"",
    "json_name": "header",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Secret",
    "path": "SignatureConfig.Secret",
    "type": "string",
    "tag": "mapstructure:\"secret\" bson:\"secret\" json:\"secret\"",
    "json_name": "secret",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AllowedClockSkew",
    "path": "SignatureConfig.AllowedClockSkew",
    "type": "int64",
    "tag": "mapstructure:\"allowed_clock_skew\" bson:\"allowed_clock_skew\" json:\"allowed_clock_skew\"",
    "json_name": "allowed_clock_skew",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ErrorCode",
    "path": "SignatureConfig.ErrorCode",
    "type": "int",
    "tag": "mapstructure:\"error_code\" bson:\"error_code\" json:\"error_code\"",
    "json_name": "error_code",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ErrorMessage",
    "path": "SignatureConfig.ErrorMessage",
    "type": "string",
    "tag": "mapstructure:\"error_message\" bson:\"error_message\" json:\"error_message\"",
    "json_name": "error_message",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Rate",
    "path": "GlobalRateLimit.Rate",
    "type": "float64",
    "tag": "bson:\"rate\" json:\"rate\"",
    "json_name": "rate",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Per",
    "path": "GlobalRateLimit.Per",
    "type": "float64",
    "tag": "bson:\"per\" json:\"per\"",
    "json_name": "per",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "FileList",
    "path": "BundleManifest.FileList",
    "type": "[]string",
    "tag": "bson:\"file_list\" json:\"file_list\"",
    "json_name": "file_list",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CustomMiddleware",
    "path": "BundleManifest.CustomMiddleware",
    "type": "MiddlewareSection",
    "tag": "bson:\"custom_middleware\" json:\"custom_middleware\"",
    "json_name": "custom_middleware",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Checksum",
    "path": "BundleManifest.Checksum",
    "type": "string",
    "tag": "bson:\"checksum\" json:\"checksum\"",
    "json_name": "checksum",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Signature",
    "path": "BundleManifest.Signature",
    "type": "string",
    "tag": "bson:\"signature\" json:\"signature\"",
    "json_name": "signature",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "IsEnabled",
    "path": "RequestSigningMeta.IsEnabled",
    "type": "bool",
    "tag": "bson:\"is_enabled\" json:\"is_enabled\"",
    "json_name": "is_enabled",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Secret",
    "path": "RequestSigningMeta.Secret",
    "type": "string",
    "tag": "bson:\"secret\" json:\"secret\"",
    "json_name": "secret",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "KeyId",
    "path": "RequestSigningMeta.KeyId",
    "type": "string",
    "tag": "bson:\"key_id\" json:\"key_id\"",
    "json_name": "key_id",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Algorithm",
    "path": "RequestSigningMeta.Algorithm",
    "type": "string",
    "tag": "bson:\"algorithm\" json:\"algorithm\"",
    "json_name": "algorithm",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "HeaderList",
    "path": "RequestSigningMeta.HeaderList",
    "type": "[]string",
    "tag": "bson:\"header_list\" json:\"header_list\"",
    "json_name": "header_list",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CertificateId",
    "path": "RequestSigningMeta.CertificateId",
    "type": "string",
    "tag": "bson:\"certificate_id\" json:\"certificate_id\"",
    "json_name": "certificate_id",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SignatureHeader",
    "path": "RequestSigningMeta.SignatureHeader",
    "type": "string",
    "tag": "bson:\"signature_header\" json:\"signature_header\"",
    "json_name": "signature_header",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "KeyName",
    "path": "InboundData.KeyName",
    "type": "string",
    "tag": "",
    "json_name": "KeyName",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Value",
    "path": "InboundData.Value",
    "type": "string",
    "tag": "",
    "json_name": "Value",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SessionState",
    "path": "InboundData.SessionState",
    "type": "string",
    "tag": "",
    "json_name": "SessionState",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Timeout",
    "path": "InboundData.Timeout",
    "type": "int64",
    "tag": "",
    "json_name": "Timeout",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Per",
    "path": "InboundData.Per",
    "type": "int64",
    "tag": "",
    "json_name": "Per",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Expire",
    "path": "InboundData.Expire",
    "type": "int64",
    "tag": "",
    "json_name": "Expire",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "OrgId",
    "path": "DefRequest.OrgId",
    "type": "string",
    "tag": "",
    "json_name": "OrgId",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Tags",
    "path": "DefRequest.Tags",
    "type": "[]string",
    "tag": "",
    "json_name": "Tags",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UserKey",
    "path": "GroupLoginRequest.UserKey",
    "type": "string",
    "tag": "",
    "json_name": "UserKey",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GroupID",
    "path": "GroupLoginRequest.GroupID",
    "type": "string",
    "tag": "",
    "json_name": "GroupID",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "OrgID",
    "path": "GroupKeySpaceRequest.OrgID",
    "type": "string",
    "tag": "",
    "json_name": "OrgID",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GroupID",
    "path": "GroupKeySpaceRequest.GroupID",
    "type": "string",
    "tag": "",
    "json_name": "GroupID",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Keys",
    "path": "KeysValuesPair.Keys",
    "type": "[]string",
    "tag": "",
    "json_name": "Keys",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Values",
    "path": "KeysValuesPair.Values",
    "type": "[]string",
    "tag": "",
    "json_name": "Values",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Id",
    "path": "APIDefinition.Id",
    "type": "model.ObjectID",
    "tag": "bson:\"_id,omitempty\" json:\"id,omitempty\"",
    "json_name": "id,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Name",
    "path": "APIDefinition.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Slug",
    "path": "APIDefinition.Slug",
    "type": "string",
    "tag": "bson:\"slug\" json:\"slug\"",
    "json_name": "slug",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ListenPort",
    "path": "APIDefinition.ListenPort",
    "type": "int",
    "tag": "bson:\"listen_port\" json:\"listen_port\"",
    "json_name": "listen_port",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Protocol",
    "path": "APIDefinition.Protocol",
    "type": "string",
    "tag": "bson:\"protocol\" json:\"protocol\"",
    "json_name": "protocol",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableProxyProtocol",
    "path": "APIDefinition.EnableProxyProtocol",
    "type": "bool",
    "tag": "bson:\"enable_proxy_protocol\" json:\"enable_proxy_protocol\"",
    "json_name": "enable_proxy_protocol",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "APIID",
    "path": "APIDefinition.APIID",
    "type": "string",
    "tag": "bson:\"api_id\" json:\"api_id\"",
    "json_name": "api_id",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "OrgID",
    "path": "APIDefinition.OrgID",
    "type": "string",
    "tag": "bson:\"org_id\" json:\"org_id\"",
    "json_name": "org_id",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseKeylessAccess",
    "path": "APIDefinition.UseKeylessAccess",
    "type": "bool",
    "tag": "bson:\"use_keyless\" json:\"use_keyless\"",
    "json_name": "use_keyless",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseOauth2",
    "path": "APIDefinition.UseOauth2",
    "type": "bool",
    "tag": "bson:\"use_oauth2\" json:\"use_oauth2\"",
    "json_name": "use_oauth2",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseOpenID",
    "path": "APIDefinition.UseOpenID",
    "type": "bool",
    "tag": "bson:\"use_openid\" json:\"use_openid\"",
    "json_name": "use_openid",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "OpenIDOptions",
    "path": "APIDefinition.OpenIDOptions",
    "type": "OpenIDOptions",
    "tag": "bson:\"openid_options\" json:\"openid_options\"",
    "json_name": "openid_options",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Oauth2Meta",
    "path": "APIDefinition.Oauth2Meta",
    "type": "struct{}",
    "tag": "bson:\"oauth_meta\" json:\"oauth_meta\"",
    "json_name": "oauth_meta",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Auth",
    "path": "APIDefinition.Auth",
    "type": "AuthConfig",
    "tag": "bson:\"auth\" json:\"auth\"",
    "json_name": "auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AuthConfigs",
    "path": "APIDefinition.AuthConfigs",
    "type": "map[string]AuthConfig",
    "tag": "bson:\"auth_configs\" json:\"auth_configs\"",
    "json_name": "auth_configs",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseBasicAuth",
    "path": "APIDefinition.UseBasicAuth",
    "type": "bool",
    "tag": "bson:\"use_basic_auth\" json:\"use_basic_auth\"",
    "json_name": "use_basic_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "BasicAuth",
    "path": "APIDefinition.BasicAuth",
    "type": "struct{}",
    "tag": "bson:\"basic_auth\" json:\"basic_auth\"",
    "json_name": "basic_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseMutualTLSAuth",
    "path": "APIDefinition.UseMutualTLSAuth",
    "type": "bool",
    "tag": "bson:\"use_mutual_tls_auth\" json:\"use_mutual_tls_auth\"",
    "json_name": "use_mutual_tls_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ClientCertificates",
    "path": "APIDefinition.ClientCertificates",
    "type": "[]string",
    "tag": "bson:\"client_certificates\" json:\"client_certificates\"",
    "json_name": "client_certificates",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UpstreamCertificates",
    "path": "APIDefinition.UpstreamCertificates",
    "type": "map[string]string",
    "tag": "bson:\"upstream_certificates\" json:\"upstream_certificates\"",
    "json_name": "upstream_certificates",
    "doc": "UpstreamCertificates stores the domain to certificate mapping for upstream mutualTLS"
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "PinnedPublicKeys",
    "path": "APIDefinition.PinnedPublicKeys",
    "type": "map[string]string",
    "tag": "bson:\"pinned_public_keys\" json:\"pinned_public_keys\"",
    "json_name": "pinned_public_keys",
    "doc": "PinnedPublicKeys stores the public key pinning details"
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableJWT",
    "path": "APIDefinition.EnableJWT",
    "type": "bool",
    "tag": "bson:\"enable_jwt\" json:\"enable_jwt\"",
    "json_name": "enable_jwt",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseStandardAuth",
    "path": "APIDefinition.UseStandardAuth",
    "type": "bool",
    "tag": "bson:\"use_standard_auth\" json:\"use_standard_auth\"",
    "json_name": "use_standard_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UseGoPluginAuth",
    "path": "APIDefinition.UseGoPluginAuth",
    "type": "bool",
    "tag": "bson:\"use_go_plugin_auth\" json:\"use_go_plugin_auth\"",
    "json_name": "use_go_plugin_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableCoProcessAuth",
    "path": "APIDefinition.EnableCoProcessAuth",
    "type": "bool",
    "tag": "bson:\"enable_coprocess_auth\" json:\"enable_coprocess_auth\"",
    "json_name": "enable_coprocess_auth",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTSigningMethod",
    "path": "APIDefinition.JWTSigningMethod",
    "type": "string",
    "tag": "bson:\"jwt_signing_method\" json:\"jwt_signing_method\"",
    "json_name": "jwt_signing_method",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTSource",
    "path": "APIDefinition.JWTSource",
    "type": "string",
    "tag": "bson:\"jwt_source\" json:\"jwt_source\"",
    "json_name": "jwt_source",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTIdentityBaseField",
    "path": "APIDefinition.JWTIdentityBaseField",
    "type": "string",
    "tag": "bson:\"jwt_identit_base_field\" json:\"jwt_identity_base_field\"",
    "json_name": "jwt_identity_base_field",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTClientIDBaseField",
    "path": "APIDefinition.JWTClientIDBaseField",
    "type": "string",
    "tag": "bson:\"jwt_client_base_field\" json:\"jwt_client_base_field\"",
    "json_name": "jwt_client_base_field",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTPolicyFieldName",
    "path": "APIDefinition.JWTPolicyFieldName",
    "type": "string",
    "tag": "bson:\"jwt_policy_field_name\" json:\"jwt_policy_field_name\"",
    "json_name": "jwt_policy_field_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTDefaultPolicies",
    "path": "APIDefinition.JWTDefaultPolicies",
    "type": "[]string",
    "tag": "bson:\"jwt_default_policies\" json:\"jwt_default_policies\"",
    "json_name": "jwt_default_policies",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTIssuedAtValidationSkew",
    "path": "APIDefinition.JWTIssuedAtValidationSkew",
    "type": "uint64",
    "tag": "bson:\"jwt_issued_at_validation_skew\" json:\"jwt_issued_at_validation_skew\"",
    "json_name": "jwt_issued_at_validation_skew",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTExpiresAtValidationSkew",
    "path": "APIDefinition.JWTExpiresAtValidationSkew",
    "type": "uint64",
    "tag": "bson:\"jwt_expires_at_validation_skew\" json:\"jwt_expires_at_validation_skew\"",
    "json_name": "jwt_expires_at_validation_skew",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTNotBeforeValidationSkew",
    "path": "APIDefinition.JWTNotBeforeValidationSkew",
    "type": "uint64",
    "tag": "bson:\"jwt_not_before_validation_skew\" json:\"jwt_not_before_validation_skew\"",
    "json_name": "jwt_not_before_validation_skew",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTSkipKid",
    "path": "APIDefinition.JWTSkipKid",
    "type": "bool",
    "tag": "bson:\"jwt_skip_kid\" json:\"jwt_skip_kid\"",
    "json_name": "jwt_skip_kid",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTScopeToPolicyMapping",
    "path": "APIDefinition.JWTScopeToPolicyMapping",
    "type": "map[string]string",
    "tag": "bson:\"jwt_scope_to_policy_mapping\" json:\"jwt_scope_to_policy_mapping\"",
    "json_name": "jwt_scope_to_policy_mapping",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "JWTScopeClaimName",
    "path": "APIDefinition.JWTScopeClaimName",
    "type": "string",
    "tag": "bson:\"jwt_scope_claim_name\" json:\"jwt_scope_claim_name\"",
    "json_name": "jwt_scope_claim_name",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "NotificationsDetails",
    "path": "APIDefinition.NotificationsDetails",
    "type": "NotificationsManager",
    "tag": "bson:\"notifications\" json:\"notifications\"",
    "json_name": "notifications",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableSignatureChecking",
    "path": "APIDefinition.EnableSignatureChecking",
    "type": "bool",
    "tag": "bson:\"enable_signature_checking\" json:\"enable_signature_checking\"",
    "json_name": "enable_signature_checking",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "HmacAllowedClockSkew",
    "path": "APIDefinition.HmacAllowedClockSkew",
    "type": "float64",
    "tag": "bson:\"hmac_allowed_clock_skew\" json:\"hmac_allowed_clock_skew\"",
    "json_name": "hmac_allowed_clock_skew",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "HmacAllowedAlgorithms",
    "path": "APIDefinition.HmacAllowedAlgorithms",
    "type": "[]string",
    "tag": "bson:\"hmac_allowed_algorithms\" json:\"hmac_allowed_algorithms\"",
    "json_name": "hmac_allowed_algorithms",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "RequestSigning",
    "path": "APIDefinition.RequestSigning",
    "type": "RequestSigningMeta",
    "tag": "bson:\"request_signing\" json:\"request_signing\"",
    "json_name": "request_signing",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "BaseIdentityProvidedBy",
    "path": "APIDefinition.BaseIdentityProvidedBy",
    "type": "AuthTypeEnum",
    "tag": "bson:\"base_identity_provided_by\" json:\"base_identity_provided_by\"",
    "json_name": "base_identity_provided_by",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "VersionDefinition",
    "path": "APIDefinition.VersionDefinition",
    "type": "VersionDefinition",
    "tag": "bson:\"definition\" json:\"definition\"",
    "json_name": "definition",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "VersionData",
    "path": "APIDefinition.VersionData",
    "type": "VersionData",
    "tag": "bson:\"version_data\" json:\"version_data\"",
    "json_name": "version_data",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "UptimeTests",
    "path": "APIDefinition.UptimeTests",
    "type": "UptimeTests",
    "tag": "bson:\"uptime_tests\" json:\"uptime_tests\"",
    "json_name": "uptime_tests",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Proxy",
    "path": "APIDefinition.Proxy",
    "type": "ProxyConfig",
    "tag": "bson:\"proxy\" json:\"proxy\"",
    "json_name": "proxy",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DisableRateLimit",
    "path": "APIDefinition.DisableRateLimit",
    "type": "bool",
    "tag": "bson:\"disable_rate_limit\" json:\"disable_rate_limit\"",
    "json_name": "disable_rate_limit",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DisableQuota",
    "path": "APIDefinition.DisableQuota",
    "type": "bool",
    "tag": "bson:\"disable_quota\" json:\"disable_quota\"",
    "json_name": "disable_quota",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CustomMiddleware",
    "path": "APIDefinition.CustomMiddleware",
    "type": "MiddlewareSection",
    "tag": "bson:\"custom_middleware\" json:\"custom_middleware\"",
    "json_name": "custom_middleware",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CustomMiddlewareBundle",
    "path": "APIDefinition.CustomMiddlewareBundle",
    "type": "string",
    "tag": "bson:\"custom_middleware_bundle\" json:\"custom_middleware_bundle\"",
    "json_name": "custom_middleware_bundle",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CacheOptions",
    "path": "APIDefinition.CacheOptions",
    "type": "CacheOptions",
    "tag": "bson:\"cache_options\" json:\"cache_options\"",
    "json_name": "cache_options",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SessionLifetime",
    "path": "APIDefinition.SessionLifetime",
    "type": "int64",
    "tag": "bson:\"session_lifetime\" json:\"session_lifetime\"",
    "json_name": "session_lifetime",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Active",
    "path": "APIDefinition.Active",
    "type": "bool",
    "tag": "bson:\"active\" json:\"active\"",
    "json_name": "active",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Internal",
    "path": "APIDefinition.Internal",
    "type": "bool",
    "tag": "bson:\"internal\" json:\"internal\"",
    "json_name": "internal",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AuthProvider",
    "path": "APIDefinition.AuthProvider",
    "type": "AuthProviderMeta",
    "tag": "bson:\"auth_provider\" json:\"auth_provider\"",
    "json_name": "auth_provider",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SessionProvider",
    "path": "APIDefinition.SessionProvider",
    "type": "SessionProviderMeta",
    "tag": "bson:\"session_provider\" json:\"session_provider\"",
    "json_name": "session_provider",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EventHandlers",
    "path": "APIDefinition.EventHandlers",
    "type": "EventHandlerMetaConfig",
    "tag": "bson:\"event_handlers\" json:\"event_handlers\"",
    "json_name": "event_handlers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableBatchRequestSupport",
    "path": "APIDefinition.EnableBatchRequestSupport",
    "type": "bool",
    "tag": "bson:\"enable_batch_request_support\" json:\"enable_batch_request_support\"",
    "json_name": "enable_batch_request_support",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableIpWhiteListing",
    "path": "APIDefinition.EnableIpWhiteListing",
    "type": "bool",
    "tag": "mapstructure:\"enable_ip_whitelisting\" bson:\"enable_ip_whitelisting\" json:\"enable_ip_whitelisting\"",
    "json_name": "enable_ip_whitelisting",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "AllowedIPs",
    "path": "APIDefinition.AllowedIPs",
    "type": "[]string",
    "tag": "mapstructure:\"allowed_ips\" bson:\"allowed_ips\" json:\"allowed_ips\"",
    "json_name": "allowed_ips",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableIpBlacklisting",
    "path": "APIDefinition.EnableIpBlacklisting",
    "type": "bool",
    "tag": "mapstructure:\"enable_ip_blacklisting\" bson:\"enable_ip_blacklisting\" json:\"enable_ip_blacklisting\"",
    "json_name": "enable_ip_blacklisting",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "BlacklistedIPs",
    "path": "APIDefinition.BlacklistedIPs",
    "type": "[]string",
    "tag": "mapstructure:\"blacklisted_ips\" bson:\"blacklisted_ips\" json:\"blacklisted_ips\"",
    "json_name": "blacklisted_ips",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DontSetQuotasOnCreate",
    "path": "APIDefinition.DontSetQuotasOnCreate",
    "type": "bool",
    "tag": "mapstructure:\"dont_set_quota_on_create\" bson:\"dont_set_quota_on_create\" json:\"dont_set_quota_on_create\"",
    "json_name": "dont_set_quota_on_create",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExpireAnalyticsAfter",
    "path": "APIDefinition.ExpireAnalyticsAfter",
    "type": "int64",
    "tag": "mapstructure:\"expire_analytics_after\" bson:\"expire_analytics_after\" json:\"expire_analytics_after\"",
    "json_name": "expire_analytics_after",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ResponseProcessors",
    "path": "APIDefinition.ResponseProcessors",
    "type": "[]ResponseProcessor",
    "tag": "bson:\"response_processors\" json:\"response_processors\"",
    "json_name": "response_processors",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "CORS",
    "path": "APIDefinition.CORS",
    "type": "CORSConfig",
    "tag": "bson:\"CORS\" json:\"CORS\"",
    "json_name": "CORS",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Domain",
    "path": "APIDefinition.Domain",
    "type": "string",
    "tag": "bson:\"domain\" json:\"domain\"",
    "json_name": "domain",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Certificates",
    "path": "APIDefinition.Certificates",
    "type": "[]string",
    "tag": "bson:\"certificates\" json:\"certificates\"",
    "json_name": "certificates",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "DoNotTrack",
    "path": "APIDefinition.DoNotTrack",
    "type": "bool",
    "tag": "bson:\"do_not_track\" json:\"do_not_track\"",
    "json_name": "do_not_track",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Tags",
    "path": "APIDefinition.Tags",
    "type": "[]string",
    "tag": "bson:\"tags\" json:\"tags\"",
    "json_name": "tags",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableContextVars",
    "path": "APIDefinition.EnableContextVars",
    "type": "bool",
    "tag": "bson:\"enable_context_vars\" json:\"enable_context_vars\"",
    "json_name": "enable_context_vars",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ConfigData",
    "path": "APIDefinition.ConfigData",
    "type": "map[string]interface{}",
    "tag": "bson:\"config_data\" json:\"config_data\"",
    "json_name": "config_data",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TagHeaders",
    "path": "APIDefinition.TagHeaders",
    "type": "[]string",
    "tag": "bson:\"tag_headers\" json:\"tag_headers\"",
    "json_name": "tag_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GlobalRateLimit",
    "path": "APIDefinition.GlobalRateLimit",
    "type": "GlobalRateLimit",
    "tag": "bson:\"global_rate_limit\" json:\"global_rate_limit\"",
    "json_name": "global_rate_limit",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "StripAuthData",
    "path": "APIDefinition.StripAuthData",
    "type": "bool",
    "tag": "bson:\"strip_auth_data\" json:\"strip_auth_data\"",
    "json_name": "strip_auth_data",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "EnableDetailedRecording",
    "path": "APIDefinition.EnableDetailedRecording",
    "type": "bool",
    "tag": "bson:\"enable_detailed_recording\" json:\"enable_detailed_recording\"",
    "json_name": "enable_detailed_recording",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GraphQL",
    "path": "APIDefinition.GraphQL",
    "type": "GraphQLConfig",
    "tag": "bson:\"graphql\" json:\"graphql\"",
    "json_name": "graphql",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Enabled",
    "path": "GraphQLConfig.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": "Enabled indicates if GraphQL should be enabled."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "ExecutionMode",
    "path": "GraphQLConfig.ExecutionMode",
    "type": "GraphQLExecutionMode",
    "tag": "bson:\"execution_mode\" json:\"execution_mode\"",
    "json_name": "execution_mode",
    "doc": "ExecutionMode is the mode to define how an api behaves."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Schema",
    "path": "GraphQLConfig.Schema",
    "type": "string",
    "tag": "bson:\"schema\" json:\"schema\"",
    "json_name": "schema",
    "doc": "Schema is the GraphQL Schema exposed by the GraphQL API/Upstream/Engine."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "TypeFieldConfigurations",
    "path": "GraphQLConfig.TypeFieldConfigurations",
    "type": "[]datasource.TypeFieldConfiguration",
    "tag": "bson:\"type_field_configurations\" json:\"type_field_configurations\"",
    "json_name": "type_field_configurations",
    "doc": "TypeFieldConfigurations is a rule set of data source and mapping of a schema field."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "GraphQLPlayground",
    "path": "GraphQLConfig.GraphQLPlayground",
    "type": "GraphQLPlayground",
    "tag": "bson:\"playground\" json:\"playground\"",
    "json_name": "playground",
    "doc": "GraphQLPlayground is the Playground specific configuration."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Enabled",
    "path": "GraphQLPlayground.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": "Enabled indicates if the playground should be enabled."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "Path",
    "path": "GraphQLPlayground.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": "Path sets the path on which the playground will be hosted if enabled."
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "SharedSecret",
    "path": "NotificationsManager.SharedSecret",
    "type": "string",
    "tag": "bson:\"shared_secret\" json:\"shared_secret\"",
    "json_name": "shared_secret",
    "doc": ""
  },
  {
    "added": [
      "v3.0.0"
    ],
    "name": "OAuthKeyChangeURL",
    "path": "NotificationsManager.OAuthKeyChangeURL",
    "type": "string",
    "tag": "bson:\"oauth_on_keychange_url\" json:\"oauth_on_keychange_url\"",
    "json_name": "oauth_on_keychange_url",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "PreserveHostHeader",
    "path": "ProxyConfig.PreserveHostHeader",
    "type": "bool",
    "tag": "bson:\"preserve_host_header\" json:\"preserve_host_header\"",
    "json_name": "preserve_host_header",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "ListenPath",
    "path": "ProxyConfig.ListenPath",
    "type": "string",
    "tag": "bson:\"listen_path\" json:\"listen_path\"",
    "json_name": "listen_path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "TargetURL",
    "path": "ProxyConfig.TargetURL",
    "type": "string",
    "tag": "bson:\"target_url\" json:\"target_url\"",
    "json_name": "target_url",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "DisableStripSlash",
    "path": "ProxyConfig.DisableStripSlash",
    "type": "bool",
    "tag": "bson:\"disable_strip_slash\" json:\"disable_strip_slash\"",
    "json_name": "disable_strip_slash",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "StripListenPath",
    "path": "ProxyConfig.StripListenPath",
    "type": "bool",
    "tag": "bson:\"strip_listen_path\" json:\"strip_listen_path\"",
    "json_name": "strip_listen_path",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "EnableLoadBalancing",
    "path": "ProxyConfig.EnableLoadBalancing",
    "type": "bool",
    "tag": "bson:\"enable_load_balancing\" json:\"enable_load_balancing\"",
    "json_name": "enable_load_balancing",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "Targets",
    "path": "ProxyConfig.Targets",
    "type": "[]string",
    "tag": "bson:\"target_list\" json:\"target_list\"",
    "json_name": "target_list",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "StructuredTargetList",
    "path": "ProxyConfig.StructuredTargetList",
    "type": "HostList",
    "tag": "bson:\"-\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "CheckHostAgainstUptimeTests",
    "path": "ProxyConfig.CheckHostAgainstUptimeTests",
    "type": "bool",
    "tag": "bson:\"check_host_against_uptime_tests\" json:\"check_host_against_uptime_tests\"",
    "json_name": "check_host_against_uptime_tests",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "ServiceDiscovery",
    "path": "ProxyConfig.ServiceDiscovery",
    "type": "ServiceDiscoveryConfiguration",
    "tag": "bson:\"service_discovery\" json:\"service_discovery\"",
    "json_name": "service_discovery",
    "doc": ""
  },
  {
    "added": [
      "v3.0.1",
      "v3.1.0",
      "v3.2.0",
      "v4.0.0"
    ],
    "name": "Transport",
    "path": "ProxyConfig.Transport",
    "type": "struct{}",
    "tag": "bson:\"transport\" json:\"transport\"",
    "json_name": "transport",
    "doc": ""
  },
  {
    "added": [
      "v3.0.10",
      "v3.1.1",
      "v4.0.0"
    ],
    "name": "DisableHalfOpenState",
    "path": "CircuitBreakerMeta.DisableHalfOpenState",
    "type": "bool",
    "tag": "bson:\"disable_half_open_state\" json:\"disable_half_open_state\"",
    "json_name": "disable_half_open_state",
    "doc": ""
  },
  {
    "added": [
      "v3.0.10",
      "v4.0.1",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "name": "UseParam",
    "path": "SignatureConfig.UseParam",
    "type": "bool",
    "tag": "mapstructure:\"use_param\" bson:\"use_param\" json:\"use_param\"",
    "json_name": "use_param",
    "doc": ""
  },
  {
    "added": [
      "v3.0.10",
      "v4.0.1",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "name": "ParamName",
    "path": "SignatureConfig.ParamName",
    "type": "string",
    "tag": "mapstructure:\"param_name\" bson:\"param_name\" json:\"param_name\"",
    "json_name": "param_name",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "Enable",
    "path": "CORSConfig.Enable",
    "type": "bool",
    "tag": "bson:\"enable\" json:\"enable\"",
    "json_name": "enable",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "AllowedOrigins",
    "path": "CORSConfig.AllowedOrigins",
    "type": "[]string",
    "tag": "bson:\"allowed_origins\" json:\"allowed_origins\"",
    "json_name": "allowed_origins",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "AllowedMethods",
    "path": "CORSConfig.AllowedMethods",
    "type": "[]string",
    "tag": "bson:\"allowed_methods\" json:\"allowed_methods\"",
    "json_name": "allowed_methods",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "AllowedHeaders",
    "path": "CORSConfig.AllowedHeaders",
    "type": "[]string",
    "tag": "bson:\"allowed_headers\" json:\"allowed_headers\"",
    "json_name": "allowed_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "ExposedHeaders",
    "path": "CORSConfig.ExposedHeaders",
    "type": "[]string",
    "tag": "bson:\"exposed_headers\" json:\"exposed_headers\"",
    "json_name": "exposed_headers",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "AllowCredentials",
    "path": "CORSConfig.AllowCredentials",
    "type": "bool",
    "tag": "bson:\"allow_credentials\" json:\"allow_credentials\"",
    "json_name": "allow_credentials",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "MaxAge",
    "path": "CORSConfig.MaxAge",
    "type": "int",
    "tag": "bson:\"max_age\" json:\"max_age\"",
    "json_name": "max_age",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "OptionsPassthrough",
    "path": "CORSConfig.OptionsPassthrough",
    "type": "bool",
    "tag": "bson:\"options_passthrough\" json:\"options_passthrough\"",
    "json_name": "options_passthrough",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "Debug",
    "path": "CORSConfig.Debug",
    "type": "bool",
    "tag": "bson:\"debug\" json:\"debug\"",
    "json_name": "debug",
    "doc": ""
  },
  {
    "added": [
      "v3.1.0"
    ],
    "name": "LastSchemaUpdate",
    "path": "GraphQLConfig.LastSchemaUpdate",
    "type": "time.Time",
    "tag": "bson:\"last_schema_update\" json:\"last_schema_update,omitempty\"",
    "json_name": "last_schema_update,omitempty",
    "doc": "LastSchemaUpdate contains the date and time of the last triggered schema update to the upstream."
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "FieldConfigs",
    "path": "GraphQLEngineConfig.FieldConfigs",
    "type": "[]GraphQLFieldConfig",
    "tag": "bson:\"field_configs\" json:\"field_configs\"",
    "json_name": "field_configs",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "DataSources",
    "path": "GraphQLEngineConfig.DataSources",
    "type": "[]GraphQLEngineDataSource",
    "tag": "bson:\"data_sources\" json:\"data_sources\"",
    "json_name": "data_sources",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "TypeName",
    "path": "GraphQLFieldConfig.TypeName",
    "type": "string",
    "tag": "bson:\"type_name\" json:\"type_name\"",
    "json_name": "type_name",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "FieldName",
    "path": "GraphQLFieldConfig.FieldName",
    "type": "string",
    "tag": "bson:\"field_name\" json:\"field_name\"",
    "json_name": "field_name",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "DisableDefaultMapping",
    "path": "GraphQLFieldConfig.DisableDefaultMapping",
    "type": "bool",
    "tag": "bson:\"disable_default_mapping\" json:\"disable_default_mapping\"",
    "json_name": "disable_default_mapping",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Path",
    "path": "GraphQLFieldConfig.Path",
    "type": "[]string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Kind",
    "path": "GraphQLEngineDataSource.Kind",
    "type": "GraphQLEngineDataSourceKind",
    "tag": "bson:\"kind\" json:\"kind\"",
    "json_name": "kind",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Name",
    "path": "GraphQLEngineDataSource.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Internal",
    "path": "GraphQLEngineDataSource.Internal",
    "type": "bool",
    "tag": "bson:\"internal\" json:\"internal\"",
    "json_name": "internal",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "RootFields",
    "path": "GraphQLEngineDataSource.RootFields",
    "type": "[]GraphQLTypeFields",
    "tag": "bson:\"root_fields\" json:\"root_fields\"",
    "json_name": "root_fields",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Config",
    "path": "GraphQLEngineDataSource.Config",
    "type": "json.RawMessage",
    "tag": "bson:\"config\" json:\"config\"",
    "json_name": "config",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Type",
    "path": "GraphQLTypeFields.Type",
    "type": "string",
    "tag": "bson:\"type\" json:\"type\"",
    "json_name": "type",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Fields",
    "path": "GraphQLTypeFields.Fields",
    "type": "[]string",
    "tag": "bson:\"fields\" json:\"fields\"",
    "json_name": "fields",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "URL",
    "path": "GraphQLEngineDataSourceConfigREST.URL",
    "type": "string",
    "tag": "bson:\"url\" json:\"url\"",
    "json_name": "url",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Method",
    "path": "GraphQLEngineDataSourceConfigREST.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Headers",
    "path": "GraphQLEngineDataSourceConfigREST.Headers",
    "type": "map[string]string",
    "tag": "bson:\"headers\" json:\"headers\"",
    "json_name": "headers",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Query",
    "path": "GraphQLEngineDataSourceConfigREST.Query",
    "type": "[]QueryVariable",
    "tag": "bson:\"query\" json:\"query\"",
    "json_name": "query",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Body",
    "path": "GraphQLEngineDataSourceConfigREST.Body",
    "type": "string",
    "tag": "bson:\"body\" json:\"body\"",
    "json_name": "body",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "URL",
    "path": "GraphQLEngineDataSourceConfigGraphQL.URL",
    "type": "string",
    "tag": "bson:\"url\" json:\"url\"",
    "json_name": "url",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Method",
    "path": "GraphQLEngineDataSourceConfigGraphQL.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Headers",
    "path": "GraphQLEngineDataSourceConfigGraphQL.Headers",
    "type": "map[string]string",
    "tag": "bson:\"headers\" json:\"headers\"",
    "json_name": "headers",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Name",
    "path": "QueryVariable.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Value",
    "path": "QueryVariable.Value",
    "type": "string",
    "tag": "bson:\"value\" json:\"value\"",
    "json_name": "value",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "IsValid",
    "path": "ValidationResult.IsValid",
    "type": "bool",
    "tag": "",
    "json_name": "IsValid",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Errors",
    "path": "ValidationResult.Errors",
    "type": "[]error",
    "tag": "",
    "json_name": "Errors",
    "doc": ""
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Version",
    "path": "GraphQLConfig.Version",
    "type": "GraphQLConfigVersion",
    "tag": "bson:\"version\" json:\"version\"",
    "json_name": "version",
    "doc": "Version defines the version of the GraphQL config and engine to be used."
  },
  {
    "added": [
      "v3.2.0"
    ],
    "name": "Engine",
    "path": "GraphQLConfig.Engine",
    "type": "GraphQLEngineConfig",
    "tag": "bson:\"engine\" json:\"engine\"",
    "json_name": "engine",
    "doc": "Engine holds the configuration for engine v2 and upwards."
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Path",
    "path": "GoPluginMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Method",
    "path": "GoPluginMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "PluginPath",
    "path": "GoPluginMeta.PluginPath",
    "type": "string",
    "tag": "bson:\"plugin_path\" json:\"plugin_path\"",
    "json_name": "plugin_path",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "SymbolName",
    "path": "GoPluginMeta.SymbolName",
    "type": "string",
    "tag": "bson:\"func_name\" json:\"func_name\"",
    "json_name": "func_name",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "GoPlugin",
    "path": "ExtendedPathsSet.GoPlugin",
    "type": "[]GoPluginMeta",
    "tag": "bson:\"go_plugin\" json:\"go_plugin,omitempty\"",
    "json_name": "go_plugin,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "AuthHeaders",
    "path": "GraphQLProxyConfig.AuthHeaders",
    "type": "map[string]string",
    "tag": "bson:\"auth_headers\" json:\"auth_headers\"",
    "json_name": "auth_headers",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "SDL",
    "path": "GraphQLSubgraphConfig.SDL",
    "type": "string",
    "tag": "bson:\"sdl\" json:\"sdl\"",
    "json_name": "sdl",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "UpdatedAt",
    "path": "GraphQLSupergraphConfig.UpdatedAt",
    "type": "time.Time",
    "tag": "bson:\"updated_at\" json:\"updated_at,omitempty\"",
    "json_name": "updated_at,omitempty",
    "doc": "UpdatedAt contains the date and time of the last update of a supergraph API."
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Subgraphs",
    "path": "GraphQLSupergraphConfig.Subgraphs",
    "type": "[]GraphQLSubgraphEntity",
    "tag": "bson:\"subgraphs\" json:\"subgraphs\"",
    "json_name": "subgraphs",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "MergedSDL",
    "path": "GraphQLSupergraphConfig.MergedSDL",
    "type": "string",
    "tag": "bson:\"merged_sdl\" json:\"merged_sdl\"",
    "json_name": "merged_sdl",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "GlobalHeaders",
    "path": "GraphQLSupergraphConfig.GlobalHeaders",
    "type": "map[string]string",
    "tag": "bson:\"global_headers\" json:\"global_headers\"",
    "json_name": "global_headers",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "APIID",
    "path": "GraphQLSubgraphEntity.APIID",
    "type": "string",
    "tag": "bson:\"api_id\" json:\"api_id\"",
    "json_name": "api_id",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Name",
    "path": "GraphQLSubgraphEntity.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "URL",
    "path": "GraphQLSubgraphEntity.URL",
    "type": "string",
    "tag": "bson:\"url\" json:\"url\"",
    "json_name": "url",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "SDL",
    "path": "GraphQLSubgraphEntity.SDL",
    "type": "string",
    "tag": "bson:\"sdl\" json:\"sdl\"",
    "json_name": "sdl",
    "doc": ""
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Proxy",
    "path": "GraphQLConfig.Proxy",
    "type": "GraphQLProxyConfig",
    "tag": "bson:\"proxy\" json:\"proxy\"",
    "json_name": "proxy",
    "doc": "Proxy holds the configuration for a proxy only api."
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Subgraph",
    "path": "GraphQLConfig.Subgraph",
    "type": "GraphQLSubgraphConfig",
    "tag": "bson:\"subgraph\" json:\"subgraph\"",
    "json_name": "subgraph",
    "doc": "Subgraph holds the configuration for a GraphQL federation subgraph."
  },
  {
    "added": [
      "v4.0.0"
    ],
    "name": "Supergraph",
    "path": "GraphQLConfig.Supergraph",
    "type": "GraphQLSupergraphConfig",
    "tag": "bson:\"supergraph\" json:\"supergraph\"",
    "json_name": "supergraph",
    "doc": "Supergraph holds the configuration for a GraphQL federation supergraph."
  },
  {
    "added": [
      "v4.0.1",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "name": "CheckList",
    "path": "UptimeTests.CheckList",
    "type": "[]HostCheckObject",
    "tag": "bson:\"check_list\" json:\"check_list\"",
    "json_name": "check_list",
    "doc": ""
  },
  {
    "added": [
      "v4.0.1",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "name": "Config",
    "path": "UptimeTests.Config",
    "type": "UptimeTestsConfig",
    "tag": "bson:\"config\" json:\"config\"",
    "json_name": "config",
    "doc": ""
  },
  {
    "added": [
      "v4.0.1",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "name": "DisableQueryBatching",
    "path": "GraphQLSupergraphConfig.DisableQueryBatching",
    "type": "bool",
    "tag": "bson:\"disable_query_batching\" json:\"disable_query_batching\"",
    "json_name": "disable_query_batching",
    "doc": ""
  },
  {
    "added": [
      "v4.0.1",
      "v4.1.0",
      "v4.2.0",
      "v4.3.0",
      "v5.0.0"
    ],
    "name": "Headers",
    "path": "GraphQLSubgraphEntity.Headers",
    "type": "map[string]string",
    "tag": "bson:\"headers\" json:\"headers\"",
    "json_name": "headers",
    "doc": ""
  },
  {
    "added": [
      "v4.0.14",
      "v5.0.3",
      "v5.1.1",
      "v5.2.0"
    ],
    "name": "OnErrorForwarding",
    "path": "GraphQLResponseExtensions.OnErrorForwarding",
    "type": "bool",
    "tag": "bson:\"on_error_forwarding\" json:\"on_error_forwarding\"",
    "json_name": "on_error_forwarding",
    "doc": ""
  },
  {
    "added": [
      "v4.0.14",
      "v5.0.3",
      "v5.1.1",
      "v5.2.0"
    ],
    "name": "UseResponseExtensions",
    "path": "GraphQLProxyConfig.UseResponseExtensions",
    "type": "GraphQLResponseExtensions",
    "tag": "bson:\"use_response_extensions\" json:\"use_response_extensions\"",
    "json_name": "use_response_extensions",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Disabled",
    "path": "MockResponseMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Path",
    "path": "MockResponseMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Method",
    "path": "MockResponseMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "IgnoreCase",
    "path": "MockResponseMeta.IgnoreCase",
    "type": "bool",
    "tag": "bson:\"ignore_case\" json:\"ignore_case\"",
    "json_name": "ignore_case",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Code",
    "path": "MockResponseMeta.Code",
    "type": "int",
    "tag": "bson:\"code\" json:\"code\"",
    "json_name": "code",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Body",
    "path": "MockResponseMeta.Body",
    "type": "string",
    "tag": "bson:\"body\" json:\"body\"",
    "json_name": "body",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Headers",
    "path": "MockResponseMeta.Headers",
    "type": "map[string]string",
    "tag": "bson:\"headers\" json:\"headers\"",
    "json_name": "headers",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Disabled",
    "path": "EndPointMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Method",
    "path": "EndPointMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Disabled",
    "path": "CacheMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Disabled",
    "path": "HardTimeoutMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Disabled",
    "path": "MethodTransformMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Disabled",
    "path": "ValidatePathMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Enabled",
    "path": "ValidateRequestMeta.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Path",
    "path": "ValidateRequestMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Method",
    "path": "ValidateRequestMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "ErrorResponseCode",
    "path": "ValidateRequestMeta.ErrorResponseCode",
    "type": "int",
    "tag": "bson:\"error_response_code\" json:\"error_response_code\"",
    "json_name": "error_response_code",
    "doc": "Allows override of default 422 Unprocessible Entity response code for validation errors."
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "MockResponse",
    "path": "ExtendedPathsSet.MockResponse",
    "type": "[]MockResponseMeta",
    "tag": "bson:\"mock_response\" json:\"mock_response,omitempty\"",
    "json_name": "mock_response,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "ValidateRequest",
    "path": "ExtendedPathsSet.ValidateRequest",
    "type": "[]ValidateRequestMeta",
    "tag": "bson:\"validate_request\" json:\"validate_request,omitempty\"",
    "json_name": "validate_request,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Enabled",
    "path": "VersionDefinition.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Name",
    "path": "VersionDefinition.Name",
    "type": "string",
    "tag": "bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Default",
    "path": "VersionDefinition.Default",
    "type": "string",
    "tag": "bson:\"default\" json:\"default\"",
    "json_name": "default",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Location",
    "path": "VersionDefinition.Location",
    "type": "string",
    "tag": "bson:\"location\" json:\"location\"",
    "json_name": "location",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Key",
    "path": "VersionDefinition.Key",
    "type": "string",
    "tag": "bson:\"key\" json:\"key\"",
    "json_name": "key",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "StripPath",
    "path": "VersionDefinition.StripPath",
    "type": "bool",
    "tag": "bson:\"strip_path\" json:\"strip_path\"",
    "json_name": "strip_path",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "StripVersioningData",
    "path": "VersionDefinition.StripVersioningData",
    "type": "bool",
    "tag": "bson:\"strip_versioning_data\" json:\"strip_versioning_data\"",
    "json_name": "strip_versioning_data",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Versions",
    "path": "VersionDefinition.Versions",
    "type": "map[string]string",
    "tag": "bson:\"versions\" json:\"versions\"",
    "json_name": "versions",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "NotVersioned",
    "path": "VersionData.NotVersioned",
    "type": "bool",
    "tag": "bson:\"not_versioned\" json:\"not_versioned\"",
    "json_name": "not_versioned",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "DefaultVersion",
    "path": "VersionData.DefaultVersion",
    "type": "string",
    "tag": "bson:\"default_version\" json:\"default_version\"",
    "json_name": "default_version",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Versions",
    "path": "VersionData.Versions",
    "type": "map[string]VersionInfo",
    "tag": "bson:\"versions\" json:\"versions\"",
    "json_name": "versions",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "ScopeClaimName",
    "path": "ScopeClaim.ScopeClaimName",
    "type": "string",
    "tag": "bson:\"scope_claim_name\" json:\"scope_claim_name\"",
    "json_name": "scope_claim_name",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "ScopeToPolicy",
    "path": "ScopeClaim.ScopeToPolicy",
    "type": "map[string]string",
    "tag": "json:\"scope_to_policy\"",
    "json_name": "scope_to_policy",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "JWT",
    "path": "Scopes.JWT",
    "type": "ScopeClaim",
    "tag": "bson:\"jwt\" json:\"jwt\"",
    "json_name": "jwt",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "OIDC",
    "path": "Scopes.OIDC",
    "type": "ScopeClaim",
    "tag": "bson:\"oidc\" json:\"oidc\"",
    "json_name": "oidc",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Enabled",
    "path": "AnalyticsPluginConfig.Enabled",
    "type": "bool",
    "tag": "bson:\"enable\" json:\"enable\"",
    "json_name": "enable",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "PluginPath",
    "path": "AnalyticsPluginConfig.PluginPath",
    "type": "string",
    "tag": "bson:\"plugin_path\" json:\"plugin_path\"",
    "json_name": "plugin_path",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "FuncName",
    "path": "AnalyticsPluginConfig.FuncName",
    "type": "string",
    "tag": "bson:\"func_name\" json:\"func_name\"",
    "json_name": "func_name",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Name",
    "path": "AuthConfig.Name",
    "type": "string",
    "tag": "mapstructure:\"name\" bson:\"name\" json:\"name\"",
    "json_name": "name",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "DisableHeader",
    "path": "AuthConfig.DisableHeader",
    "type": "bool",
    "tag": "mapstructure:\"disable_header\" bson:\"disable_header\" json:\"disable_header\"",
    "json_name": "disable_header",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "LoadOAS",
    "path": "DefRequest.LoadOAS",
    "type": "bool",
    "tag": "",
    "json_name": "LoadOAS",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Expiration",
    "path": "APIDefinition.Expiration",
    "type": "string",
    "tag": "bson:\"expiration\" json:\"expiration\"",
    "json_name": "expiration",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "ExpirationTs",
    "path": "APIDefinition.ExpirationTs",
    "type": "time.Time",
    "tag": "bson:\"-\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "UpstreamCertificatesDisabled",
    "path": "APIDefinition.UpstreamCertificatesDisabled",
    "type": "bool",
    "tag": "bson:\"upstream_certificates_disabled\" json:\"upstream_certificates_disabled\"",
    "json_name": "upstream_certificates_disabled",
    "doc": "UpstreamCertificatesDisabled disables upstream mutualTLS on the API"
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "CertificatePinningDisabled",
    "path": "APIDefinition.CertificatePinningDisabled",
    "type": "bool",
    "tag": "bson:\"certificate_pinning_disabled\" json:\"certificate_pinning_disabled\"",
    "json_name": "certificate_pinning_disabled",
    "doc": "CertificatePinningDisabled disables public key pinning"
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "Scopes",
    "path": "APIDefinition.Scopes",
    "type": "Scopes",
    "tag": "bson:\"scopes\" json:\"scopes\"",
    "json_name": "scopes",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "DomainDisabled",
    "path": "APIDefinition.DomainDisabled",
    "type": "bool",
    "tag": "bson:\"domain_disabled\" json:\"domain_disabled\"",
    "json_name": "domain_disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "AnalyticsPlugin",
    "path": "APIDefinition.AnalyticsPlugin",
    "type": "AnalyticsPluginConfig",
    "tag": "bson:\"analytics_plugin\" json:\"analytics_plugin\"",
    "json_name": "analytics_plugin",
    "doc": ""
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "TagsDisabled",
    "path": "APIDefinition.TagsDisabled",
    "type": "bool",
    "tag": "bson:\"tags_disabled\" json:\"tags_disabled\"",
    "json_name": "tags_disabled",
    "doc": "Gateway segment tags"
  },
  {
    "added": [
      "v4.1.0"
    ],
    "name": "IsOAS",
    "path": "APIDefinition.IsOAS",
    "type": "bool",
    "tag": "json:\"is_oas\" bson:\"is_oas\"",
    "json_name": "is_oas",
    "doc": "IsOAS is set to true when API has an OAS definition (created in OAS or migrated to OAS)"
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "Disabled",
    "path": "TemplateMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "BrokerAddresses",
    "path": "GraphQLEngineDataSourceConfigKafka.BrokerAddresses",
    "type": "[]string",
    "tag": "bson:\"broker_addresses\" json:\"broker_addresses\"",
    "json_name": "broker_addresses",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "Topics",
    "path": "GraphQLEngineDataSourceConfigKafka.Topics",
    "type": "[]string",
    "tag": "bson:\"topics\" json:\"topics\"",
    "json_name": "topics",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "GroupID",
    "path": "GraphQLEngineDataSourceConfigKafka.GroupID",
    "type": "string",
    "tag": "bson:\"group_id\" json:\"group_id\"",
    "json_name": "group_id",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "ClientID",
    "path": "GraphQLEngineDataSourceConfigKafka.ClientID",
    "type": "string",
    "tag": "bson:\"client_id\" json:\"client_id\"",
    "json_name": "client_id",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "KafkaVersion",
    "path": "GraphQLEngineDataSourceConfigKafka.KafkaVersion",
    "type": "string",
    "tag": "bson:\"kafka_version\" json:\"kafka_version\"",
    "json_name": "kafka_version",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "StartConsumingLatest",
    "path": "GraphQLEngineDataSourceConfigKafka.StartConsumingLatest",
    "type": "bool",
    "tag": "json:\"start_consuming_latest\"",
    "json_name": "start_consuming_latest",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "BalanceStrategy",
    "path": "GraphQLEngineDataSourceConfigKafka.BalanceStrategy",
    "type": "string",
    "tag": "json:\"balance_strategy\"",
    "json_name": "balance_strategy",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "IsolationLevel",
    "path": "GraphQLEngineDataSourceConfigKafka.IsolationLevel",
    "type": "string",
    "tag": "json:\"isolation_level\"",
    "json_name": "isolation_level",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "SASL",
    "path": "GraphQLEngineDataSourceConfigKafka.SASL",
    "type": "kafka_datasource.SASL",
    "tag": "json:\"sasl\"",
    "json_name": "sasl",
    "doc": ""
  },
  {
    "added": [
      "v4.2.0"
    ],
    "name": "SessionLifetimeRespectsKeyExpiration",
    "path": "APIDefinition.SessionLifetimeRespectsKeyExpiration",
    "type": "bool",
    "tag": "bson:\"session_lifetime_respects_key_expiration\" json:\"session_lifetime_respects_key_expiration\"",
    "json_name": "session_lifetime_respects_key_expiration",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Path",
    "path": "PersistGraphQLMeta.Path",
    "type": "string",
    "tag": "bson:\"path\" json:\"path\"",
    "json_name": "path",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Method",
    "path": "PersistGraphQLMeta.Method",
    "type": "string",
    "tag": "bson:\"method\" json:\"method\"",
    "json_name": "method",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Operation",
    "path": "PersistGraphQLMeta.Operation",
    "type": "string",
    "tag": "bson:\"operation\" json:\"operation\"",
    "json_name": "operation",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Variables",
    "path": "PersistGraphQLMeta.Variables",
    "type": "map[string]interface{}",
    "tag": "bson:\"variables\" json:\"variables\"",
    "json_name": "variables",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "PersistGraphQL",
    "path": "ExtendedPathsSet.PersistGraphQL",
    "type": "[]PersistGraphQLMeta",
    "tag": "bson:\"persist_graphql\" json:\"persist_graphql\"",
    "json_name": "persist_graphql",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "BaseID",
    "path": "VersionDefinition.BaseID",
    "type": "string",
    "tag": "bson:\"base_id\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "SubscriptionType",
    "path": "GraphQLProxyConfig.SubscriptionType",
    "type": "SubscriptionType",
    "tag": "bson:\"subscription_type\" json:\"subscription_type,omitempty\"",
    "json_name": "subscription_type,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "SubscriptionType",
    "path": "GraphQLSubgraphEntity.SubscriptionType",
    "type": "SubscriptionType",
    "tag": "bson:\"subscription_type\" json:\"subscription_type,omitempty\"",
    "json_name": "subscription_type,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "SubscriptionType",
    "path": "GraphQLEngineDataSourceConfigGraphQL.SubscriptionType",
    "type": "SubscriptionType",
    "tag": "bson:\"subscription_type\" json:\"subscription_type,omitempty\"",
    "json_name": "subscription_type,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Enabled",
    "path": "ExternalOAuth.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Providers",
    "path": "ExternalOAuth.Providers",
    "type": "[]Provider",
    "tag": "bson:\"providers\" json:\"providers\"",
    "json_name": "providers",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "JWT",
    "path": "Provider.JWT",
    "type": "JWTValidation",
    "tag": "bson:\"jwt\" json:\"jwt\"",
    "json_name": "jwt",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Introspection",
    "path": "Provider.Introspection",
    "type": "Introspection",
    "tag": "bson:\"introspection\" json:\"introspection\"",
    "json_name": "introspection",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Enabled",
    "path": "JWTValidation.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "SigningMethod",
    "path": "JWTValidation.SigningMethod",
    "type": "string",
    "tag": "bson:\"signing_method\" json:\"signing_method\"",
    "json_name": "signing_method",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Source",
    "path": "JWTValidation.Source",
    "type": "string",
    "tag": "bson:\"source\" json:\"source\"",
    "json_name": "source",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "IssuedAtValidationSkew",
    "path": "JWTValidation.IssuedAtValidationSkew",
    "type": "uint64",
    "tag": "bson:\"issued_at_validation_skew\" json:\"issued_at_validation_skew\"",
    "json_name": "issued_at_validation_skew",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "NotBeforeValidationSkew",
    "path": "JWTValidation.NotBeforeValidationSkew",
    "type": "uint64",
    "tag": "bson:\"not_before_validation_skew\" json:\"not_before_validation_skew\"",
    "json_name": "not_before_validation_skew",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "ExpiresAtValidationSkew",
    "path": "JWTValidation.ExpiresAtValidationSkew",
    "type": "uint64",
    "tag": "bson:\"expires_at_validation_skew\" json:\"expires_at_validation_skew\"",
    "json_name": "expires_at_validation_skew",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "IdentityBaseField",
    "path": "JWTValidation.IdentityBaseField",
    "type": "string",
    "tag": "bson:\"identity_base_field\" json:\"identity_base_field\"",
    "json_name": "identity_base_field",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Enabled",
    "path": "Introspection.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "URL",
    "path": "Introspection.URL",
    "type": "string",
    "tag": "bson:\"url\" json:\"url\"",
    "json_name": "url",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "ClientID",
    "path": "Introspection.ClientID",
    "type": "string",
    "tag": "bson:\"client_id\" json:\"client_id\"",
    "json_name": "client_id",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "ClientSecret",
    "path": "Introspection.ClientSecret",
    "type": "string",
    "tag": "bson:\"client_secret\" json:\"client_secret\"",
    "json_name": "client_secret",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "IdentityBaseField",
    "path": "Introspection.IdentityBaseField",
    "type": "string",
    "tag": "bson:\"identity_base_field\" json:\"identity_base_field\"",
    "json_name": "identity_base_field",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Cache",
    "path": "Introspection.Cache",
    "type": "IntrospectionCache",
    "tag": "bson:\"cache\" json:\"cache\"",
    "json_name": "cache",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Enabled",
    "path": "IntrospectionCache.Enabled",
    "type": "bool",
    "tag": "bson:\"enabled\" json:\"enabled\"",
    "json_name": "enabled",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "Timeout",
    "path": "IntrospectionCache.Timeout",
    "type": "int64",
    "tag": "bson:\"timeout\" json:\"timeout\"",
    "json_name": "timeout",
    "doc": ""
  },
  {
    "added": [
      "v4.3.0"
    ],
    "name": "ExternalOAuth",
    "path": "APIDefinition.ExternalOAuth",
    "type": "ExternalOAuth",
    "tag": "bson:\"external_oauth\" json:\"external_oauth\"",
    "json_name": "external_oauth",
    "doc": ""
  },
  {
    "added": [
      "v4.3.2",
      "v5.0.0"
    ],
    "name": "ForceSync",
    "path": "GroupLoginRequest.ForceSync",
    "type": "bool",
    "tag": "",
    "json_name": "ForceSync",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "Disabled",
    "path": "VirtualMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "Disabled",
    "path": "GoPluginMeta.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "Disabled",
    "path": "MiddlewareDefinition.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "Disabled",
    "path": "MiddlewareIdExtractor.Disabled",
    "type": "bool",
    "tag": "bson:\"disabled\" json:\"disabled\"",
    "json_name": "disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "RequestHeaders",
    "path": "GraphQLProxyConfig.RequestHeaders",
    "type": "map[string]string",
    "tag": "bson:\"request_headers\" json:\"request_headers\"",
    "json_name": "request_headers",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "CustomPluginAuthEnabled",
    "path": "APIDefinition.CustomPluginAuthEnabled",
    "type": "bool",
    "tag": "bson:\"custom_plugin_auth_enabled\" json:\"custom_plugin_auth_enabled\"",
    "json_name": "custom_plugin_auth_enabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "CustomMiddlewareBundleDisabled",
    "path": "APIDefinition.CustomMiddlewareBundleDisabled",
    "type": "bool",
    "tag": "bson:\"custom_middleware_bundle_disabled\" json:\"custom_middleware_bundle_disabled\"",
    "json_name": "custom_middleware_bundle_disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "ConfigDataDisabled",
    "path": "APIDefinition.ConfigDataDisabled",
    "type": "bool",
    "tag": "bson:\"config_data_disabled\" json:\"config_data_disabled\"",
    "json_name": "config_data_disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "VersionName",
    "path": "APIDefinition.VersionName",
    "type": "string",
    "tag": "bson:\"-\" json:\"-\"",
    "json_name": "",
    "doc": ""
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "HeaderName",
    "path": "IDExtractorConfig.HeaderName",
    "type": "string",
    "tag": "mapstructure:\"header_name\" bson:\"header_name\" json:\"header_name\"",
    "json_name": "header_name",
    "doc": "HeaderName is the header name to extract ID from."
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "FormParamName",
    "path": "IDExtractorConfig.FormParamName",
    "type": "string",
    "tag": "mapstructure:\"param_name\" bson:\"param_name\" json:\"param_name\"",
    "json_name": "param_name",
    "doc": "FormParamName is the form parameter name to extract ID from."
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "RegexExpression",
    "path": "IDExtractorConfig.RegexExpression",
    "type": "string",
    "tag": "mapstructure:\"regex_expression\" bson:\"regex_expression\" json:\"regex_expression\"",
    "json_name": "regex_expression",
    "doc": "RegexExpression is the regular expression to match ID."
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "RegexMatchIndex",
    "path": "IDExtractorConfig.RegexMatchIndex",
    "type": "int",
    "tag": "mapstructure:\"regex_match_index\" bson:\"regex_match_index\" json:\"regex_match_index\"",
    "json_name": "regex_match_index",
    "doc": "RegexMatchIndex is the index from which ID to be extracted after a match."
  },
  {
    "added": [
      "v5.0.0"
    ],
    "name": "XPathExpression",
    "path": "IDExtractorConfig.XPathExpression",
    "type": "string",
    "tag": "mapstructure:\"xpath_expression\" bson:\"xpath_expression\" json:\"xpath_expression\"",
    "json_name": "xpath_expression",
    "doc": "XPathExp is the xpath expression to match ID."
  },
  {
    "added": [
      "v5.0.3",
      "v5.1.0"
    ],
    "name": "CacheDisabled",
    "path": "ServiceDiscoveryConfiguration.CacheDisabled",
    "type": "bool",
    "tag": "bson:\"cache_disabled\" json:\"cache_disabled\"",
    "json_name": "cache_disabled",
    "doc": ""
  },
  {
    "added": [
      "v5.0.3",
      "v5.1.0"
    ],
    "name": "ExpireUptimeAnalyticsAfter",
    "path": "UptimeTestsConfig.ExpireUptimeAnalyticsAfter",
    "type": "int64",
    "tag": "bson:\"expire_utime_after\" json:\"expire_utime_after\"",
    "json_name": "expire_utime_after",
    "doc": ""
  },
  {
    "added": [
      "v5.0.3",
      "v5.1.0"
    ],
    "name": "ServiceDiscovery",
    "path": "UptimeTestsConfig.ServiceDiscovery",
    "type": "ServiceDiscoveryConfiguration",
    "tag": "bson:\"service_discovery\" json:\"service_discovery\"",
    "json_name": "service_discovery",
    "doc": ""
  },
  {
    "added": [
      "v5.0.3",
      "v5.1.0"
    ],
    "name": "RecheckWait",
    "path": "UptimeTestsConfig.RecheckWait",
    "type": "int",
    "tag": "bson:\"recheck_wait\" json:\"recheck_wait\"",
    "json_name": "recheck_wait",
    "doc": ""
  },
  {
    "added": [
      "v5.1.0"
    ],
    "name": "HasOperation",
    "path": "GraphQLEngineDataSourceConfigGraphQL.HasOperation",
    "type": "bool",
    "tag": "bson:\"has_operation\" json:\"has_operation\"",
    "json_name": "has_operation",
    "doc": ""
  },
  {
    "added": [
      "v5.1.0"
    ],
    "name": "Operation",
    "path": "GraphQLEngineDataSourceConfigGraphQL.Operation",
    "type": "string",
    "tag": "bson:\"operation\" json:\"operation\"",
    "json_name": "operation",
    "doc": ""
  },
  {
    "added": [
      "v5.1.0"
    ],
    "name": "Variables",
    "path": "GraphQLEngineDataSourceConfigGraphQL.Variables",
    "type": "json.RawMessage",
    "tag": "bson:\"variables\" json:\"variables\"",
    "json_name": "variables",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Node",
    "path": "GroupLoginRequest.Node",
    "type": "[]byte",
    "tag": "",
    "json_name": "Node",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "NodeID",
    "path": "NodeData.NodeID",
    "type": "string",
    "tag": "json:\"node_id\"",
    "json_name": "node_id",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "APIKey",
    "path": "NodeData.APIKey",
    "type": "string",
    "tag": "json:\"api_key\"",
    "json_name": "api_key",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "GroupID",
    "path": "NodeData.GroupID",
    "type": "string",
    "tag": "json:\"group_id\"",
    "json_name": "group_id",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "NodeVersion",
    "path": "NodeData.NodeVersion",
    "type": "string",
    "tag": "json:\"node_version\"",
    "json_name": "node_version",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "TTL",
    "path": "NodeData.TTL",
    "type": "int64",
    "tag": "json:\"ttl\"",
    "json_name": "ttl",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Tags",
    "path": "NodeData.Tags",
    "type": "[]string",
    "tag": "json:\"tags\"",
    "json_name": "tags",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Health",
    "path": "NodeData.Health",
    "type": "map[string]HealthCheckItem",
    "tag": "json:\"health\"",
    "json_name": "health",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Stats",
    "path": "NodeData.Stats",
    "type": "GWStats",
    "tag": "json:\"stats\"",
    "json_name": "stats",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "APIsCount",
    "path": "GWStats.APIsCount",
    "type": "int",
    "tag": "json:\"apis_count\"",
    "json_name": "apis_count",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "PoliciesCount",
    "path": "GWStats.PoliciesCount",
    "type": "int",
    "tag": "json:\"policies_count\"",
    "json_name": "policies_count",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Timeout",
    "path": "CacheMeta.Timeout",
    "type": "int64",
    "tag": "bson:\"timeout\" json:\"timeout\"",
    "json_name": "timeout",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "GlobalHeaders",
    "path": "GraphQLEngineConfig.GlobalHeaders",
    "type": "[]UDGGlobalHeader",
    "tag": "bson:\"global_headers\" json:\"global_headers\"",
    "json_name": "global_headers",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Key",
    "path": "UDGGlobalHeader.Key",
    "type": "string",
    "tag": "bson:\"key\" json:\"key\"",
    "json_name": "key",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Value",
    "path": "UDGGlobalHeader.Value",
    "type": "string",
    "tag": "bson:\"value\" json:\"value\"",
    "json_name": "value",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Status",
    "path": "HealthCheckResponse.Status",
    "type": "HealthCheckStatus",
    "tag": "json:\"status\"",
    "json_name": "status",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Version",
    "path": "HealthCheckResponse.Version",
    "type": "string",
    "tag": "json:\"version,omitempty\"",
    "json_name": "version,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Output",
    "path": "HealthCheckResponse.Output",
    "type": "string",
    "tag": "json:\"output,omitempty\"",
    "json_name": "output,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Description",
    "path": "HealthCheckResponse.Description",
    "type": "string",
    "tag": "json:\"description,omitempty\"",
    "json_name": "description,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Details",
    "path": "HealthCheckResponse.Details",
    "type": "map[string]HealthCheckItem",
    "tag": "json:\"details,omitempty\"",
    "json_name": "details,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Status",
    "path": "HealthCheckItem.Status",
    "type": "HealthCheckStatus",
    "tag": "json:\"status\"",
    "json_name": "status",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Output",
    "path": "HealthCheckItem.Output",
    "type": "string",
    "tag": "json:\"output,omitempty\"",
    "json_name": "output,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "ComponentType",
    "path": "HealthCheckItem.ComponentType",
    "type": "string",
    "tag": "json:\"componentType,omitempty\"",
    "json_name": "componentType,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "ComponentID",
    "path": "HealthCheckItem.ComponentID",
    "type": "string",
    "tag": "json:\"componentId,omitempty\"",
    "json_name": "componentId,omitempty",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "Time",
    "path": "HealthCheckItem.Time",
    "type": "string",
    "tag": "json:\"time\"",
    "json_name": "time",
    "doc": ""
  },
  {
    "added": [
      "v5.2.0"
    ],
    "name": "DetailedTracing",
    "path": "APIDefinition.DetailedTracing",
    "type": "bool",
    "tag": "bson:\"detailed_tracing\" json:\"detailed_tracing\"",
    "json_name": "detailed_tracing",
    "doc": ""
  }
]
