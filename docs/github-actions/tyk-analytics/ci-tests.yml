name: CI tests
on:
  pull_request:
    branches:
      - master
      - release-**

env:
  GOPRIVATE: github.com/TykTechnologies
jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: use gh token
        env:
          TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout Tyk Analytics
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: ${{ github.head_ref }}
      - name: Download golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
      - name: golangci-lint
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          $(go env GOPATH)/bin/golangci-lint run --out-format checkstyle --timeout=600s --max-issues-per-linter=0 --max-same-issues=0 --issues-exit-code=0 --new-from-rev=origin/${{ github.base_ref }} ./... > golanglint.xml
      - uses: actions/upload-artifact@v2
        with:
          name: golangcilint
          retention-days: 1
          path: |
            golanglint.xml
  test:
    name: '${{ matrix.databases }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        databases:
          - mongo-mgo
          - mongo-official
          - postgres
          - sqlite
        mongodb-version:
          - 4.2
        redis-version:
          - 5
        go:
          - 1.19.x
    services:
      controller-gw-redis:
        image: redis
        ports:
          - 6379:6379
      mdcb-redis:
        image: redis
        ports:
          - 6380:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres_test
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - '5432:5432'
    steps:
      - name: Checkout Tyk Analytics
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: ${{ github.head_ref }}
      - name: Checkout Tyk Analytics UI
        uses: actions/checkout@v2
        with:
          repository: TykTechnologies/tyk-analytics-ui
          token: '${{ secrets.ORG_GH_TOKEN }}'
          path: webclient
          ref: ${{ github.base_ref }}
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '${{ matrix.go }}'
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/golangci-lint
            ~/go/pkg/mod
          key: '${{ runner.os }}-go-${{ matrix.databases }}-${{ hashFiles(''**/go.sum'') }}'
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Dependencies
        env:
          TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf
          "https://github.com"

          go install golang.org/x/tools/cmd/goimports@latest
      - name: Fetch base branch
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch origin ${{ github.base_ref }}
      - name: ignore vendor and use go mod
        run: go env -w GOFLAGS="-mod=mod"
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.2.0
        with:
          mongodb-version: '${{ matrix.mongodb-version }}'
      - name: Run Dashboard Tests
        run: |
          ./bin/ci-tests.sh ${{ matrix.databases }}
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          retention-days: 1
          path: |
            *.cov
  sonar-cloud-analysis:
    runs-on: ubuntu-latest
    needs: [test, golangci-lint]
    steps:
      - name: Checkout Tyk Analytics
        uses: actions/checkout@v2
        env:
          PR_FETCH_DEPTH: '$(( ${{ github.event.pull_request.commits }} + 1 ))'
        with:
          fetch-depth: ${{ env.PR_FETCH_DEPTH }}
      - name: Fetch base branch
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch origin ${{ github.base_ref }}
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
      - name: Download coverage artifacts
        uses: actions/download-artifact@v2
        with:
          name: coverage
      - name: Download golangcilint artifacts
        uses: actions/download-artifact@v2
        with:
          name: golangcilint
      - name: Check reports existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: '*.cov, golanglint.xml'
      - name: Install Dependencies
        env:
          TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"
          
          go install github.com/wadey/gocovmerge@latest
      - name: merge reports
        run: |
          ./bin/merge-cov.sh
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=tyktechnologies
            -Dsonar.projectKey=TykTechnologies_tyk-analytics
            -Dsonar.sources=.
            -Dsonar.exclusions=dashboard/bindata.go
            -Dsonar.coverage.exclusions=**/*_test.go,**/mock/*
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.tests=.
            -Dsonar.go.coverage.reportPaths=*.cov
            -Dsonar.go.golangci-lint.reportPaths=golanglint.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

