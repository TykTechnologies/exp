name: Tyk Docs sync for release

# This workflow will pull the repository branch for a project.
#
# If the chosen repo is either 'dashboard' or 'gateway', the docs
# will be updated from both repositories in the same PR.

on:
  workflow_dispatch:
    inputs:
      jira:
        description: 'JIRA ID (MM-NNNN or permalink)'
        required: true
        default: ''
      docsBranch:
        description: 'Docs PR target branch'
        required: true
        default: 'master'
      repoBranch:
        description: 'Project source branch'
        required: true
        default: 'master'
      repo:
        description: 'Project repository. Allowed values: gateway, dashboard, pump, mdcb'
        required: true
        default: ''

env:
  GOPRIVATE: github.com/TykTechnologies

jobs:
  gateway:
    name: Gateway docs
    if: ${{ github.event.inputs.repo == 'dashboard' || github.event.inputs.repo == 'gateway'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Gateway
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: TykTechnologies/tyk
          ref: ${{ github.event.inputs.repoBranch }}
          path: ./tyk

      - name: Generate docs
        run: |
          mkdir -p gateway-docs/
          cp ./tyk/apidef/oas/schema/x-tyk-gateway.md gateway-docs/
          cp ./tyk/swagger.yml gateway-docs/gateway-swagger.yml

      - name: Store docs
        uses: actions/upload-artifact@v3
        with:
          name: gateway-docs
          path: gateway-docs

  dashboard:
    name: Dashboard docs
    if: ${{ github.event.inputs.repo == 'dashboard' || github.event.inputs.repo == 'gateway'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dashboard
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ORG_GH_TOKEN }}
          fetch-depth: 1
          repository: TykTechnologies/tyk-analytics
          ref: ${{ github.event.inputs.repoBranch }}
          path: ./tyk-analytics

      - name: Generate docs
        run: |
          mkdir -p dashboard-docs/
          cp ./tyk-analytics/swagger.yml dashboard-docs/dashboard-swagger.yml
          cp ./tyk-analytics/swagger-admin.yml dashboard-docs/dashboard-admin-swagger.yml

      - name: Store docs
        uses: actions/upload-artifact@v3
        with:
          name: dashboard-docs
          path: dashboard-docs

  configs:
    name: Configuration docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Config Generator Repo
        uses: actions/checkout@v3
        with:
          repository: TykTechnologies/tyk-config-info-generator
          path: ./tyk-config-info-generator
          token: ${{ secrets.ORG_GH_TOKEN }}

      - name: Generate config docs (gw+dash)
        working-directory: ./tyk-config-info-generator/src
        if: ${{ github.event.inputs.repo == 'dashboard' || github.event.inputs.repo == 'gateway'}}
        run: |
          mkdir -p $GITHUB_WORKSPACE/config-docs/
          sudo TOKEN=${{ secrets.ORG_GH_TOKEN }} node app.js gateway:${{ github.event.inputs.repoBranch }}
          cp /node/home/tyk-config-info-generator/info/${{ github.event.inputs.repoBranch }}/gateway.md $GITHUB_WORKSPACE/config-docs/gateway-config.md
          sudo TOKEN=${{ secrets.ORG_GH_TOKEN }} node app.js dashboard:${{ github.event.inputs.repoBranch }}
          cp /node/home/tyk-config-info-generator/info/${{ github.event.inputs.repoBranch }}/dashboard.md $GITHUB_WORKSPACE/config-docs/dashboard-config.md

      - name: Generate config docs (other)
        working-directory: ./tyk-config-info-generator/src
        if: ${{ github.event.inputs.repo != 'dashboard' && github.event.inputs.repo != 'gateway'}}
        run: |
          mkdir -p $GITHUB_WORKSPACE/config-docs/
          sudo TOKEN=${{ secrets.ORG_GH_TOKEN }} node app.js ${{ github.event.inputs.repo }}:${{ github.event.inputs.repoBranch }}
          cp /node/home/tyk-config-info-generator/info/${{ github.event.inputs.repoBranch }}/${{ github.event.inputs.repo }}.md $GITHUB_WORKSPACE/config-docs/${{ github.event.inputs.repo }}-config.md

      - name: Store docs
        uses: actions/upload-artifact@v3
        with:
          name: config-docs
          path: config-docs

  finish:
    name: Open PR against tyk-docs
    needs: [configs, dashboard, gateway]
    runs-on: ubuntu-latest
    steps:
      - name: Restore artifacts
        uses: actions/download-artifact@v3

      - name: Print artifacts
        run: find ./ -type f

      - name: Checkout Docs
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: TykTechnologies/tyk-docs
          path: ./tyk-docs
          ref: ${{ github.event.inputs.docsBranch }}

      - name: Write out swagger schema
        run: mv {gateway-docs,dashboard-docs}/*.yml ./tyk-docs/tyk-docs/assets/others/

      - name: Write out markdown docs
        run: |
          cp config-docs/* ./tyk-docs/tyk-docs/content/shared/           # <repo>-config.md
          cp gateway-docs/* ./tyk-docs/tyk-docs/content/shared/          # x-tyk-gateway.md

      - name: Sanitize JIRA input
        run: echo "JIRA=$(basename ${{ github.event.inputs.jira }})" >> $GITHUB_ENV

      - name: Raise docs changes PR
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.ORG_GH_TOKEN }}
          commit-message: Import config/docs
          title: '[${{ env.JIRA }}] Update documentation from ${{ github.event.inputs.repo }}:${{ github.event.inputs.repoBranch }}'
          body: |
            Triggered by: ${{ github.actor }}
            
            JIRA: https://tyktech.atlassian.net/browse/${{ env.JIRA }}
          branch: update/${{ env.JIRA }}/${{ github.event.inputs.repoBranch }}-update-docs
          path: ./tyk-docs
          delete-branch: true
