[
  {
    "name": "FieldDocError"
  },
  {
    "name": "FieldInfo",
    "fields": [
      {
        "name": "Name",
        "type": "string",
        "path": "FieldInfo.Name",
        "doc": "Name is the name of the field.",
        "tag": "json:\"name\"",
        "json_name": "name"
      },
      {
        "name": "Type",
        "type": "string",
        "path": "FieldInfo.Type",
        "doc": "Type is the literal type of the Go field.",
        "tag": "json:\"type\"",
        "json_name": "type"
      },
      {
        "name": "Path",
        "type": "string",
        "path": "FieldInfo.Path",
        "doc": "Path is the go path of this field starting from root object.",
        "tag": "json:\"path\"",
        "json_name": "path"
      },
      {
        "name": "Doc",
        "type": "string",
        "path": "FieldInfo.Doc",
        "doc": "Doc holds the field doc.",
        "tag": "json:\"doc,omitempty\"",
        "json_name": "doc,omitempty"
      },
      {
        "name": "Comment",
        "type": "string",
        "path": "FieldInfo.Comment",
        "doc": "Comment holds the field comment text.",
        "tag": "json:\"comment,omitempty\"",
        "json_name": "comment,omitempty"
      },
      {
        "name": "Tag",
        "type": "string",
        "path": "FieldInfo.Tag",
        "doc": "Tag is the go tag, unmodified.",
        "tag": "json:\"tag\"",
        "json_name": "tag"
      },
      {
        "name": "JSONName",
        "type": "string",
        "path": "FieldInfo.JSONName",
        "doc": "JSONName is the corresponding json name of the field.",
        "tag": "json:\"json_name\"",
        "json_name": "json_name"
      },
      {
        "name": "MapKey",
        "type": "string",
        "path": "FieldInfo.MapKey",
        "doc": "MapKey is the map key type, if this field is a map.",
        "tag": "json:\"map_key,omitempty\"",
        "json_name": "map_key,omitempty"
      }
    ]
  },
  {
    "name": "StructInfo",
    "fields": [
      {
        "name": "Name",
        "type": "string",
        "path": "StructInfo.Name",
        "doc": "Name is struct go name.",
        "tag": "json:\"name\"",
        "json_name": "name"
      },
      {
        "name": "Doc",
        "type": "string",
        "path": "StructInfo.Doc",
        "doc": "Doc is the struct doc.",
        "tag": "json:\"doc,omitempty\"",
        "json_name": "doc,omitempty"
      },
      {
        "name": "Comment",
        "type": "string",
        "path": "StructInfo.Comment",
        "doc": "Comment is the struct comment.",
        "tag": "json:\"comment,omitempty\"",
        "json_name": "comment,omitempty"
      },
      {
        "name": "Type",
        "type": "string",
        "path": "StructInfo.Type",
        "doc": "Type is an optional type if the declaration is a type alias or similar.",
        "tag": "json:\"type,omitempty\"",
        "json_name": "type,omitempty"
      },
      {
        "name": "Fields",
        "type": "[]*FieldInfo",
        "path": "StructInfo.Fields",
        "doc": "Fields holds information of the fields, if this object is a struct.",
        "tag": "json:\"fields,omitempty\"",
        "json_name": "fields,omitempty"
      }
    ]
  },
  {
    "name": "StructList",
    "type": "[]*StructInfo"
  }
]